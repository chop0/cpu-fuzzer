#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGBUS (0x7) at pc=0x00007f0d4c01eb58, pid=107664, tid=107665
#
# JRE version: OpenJDK Runtime Environment (21.0.1+12) (build 21.0.1+12-29)
# Java VM: OpenJDK 64-Bit Server VM (21.0.1+12-29, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# v  ~RuntimeStub::nep_invoker_blob 0x00007f0d380948c7
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h" (or dumping to /home/alec/IdeaProjects/cool-fuzz/core.107664)
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: --enable-preview -Djava.library.path=/home/alec/IdeaProjects/cool-fuzz -javaagent:/home/alec/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/lib/idea_rt.jar=46619:/home/alec/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 --module-path=/home/alec/IdeaProjects/cool-fuzz/antlr-4.13.1-complete.jar:/home/alec/IdeaProjects/cool-fuzz/iced-x86-1.20.0.jar:/home/alec/IdeaProjects/cool-fuzz/out/production/ax.xz.fuzz -Djdk.module.main=ax.xz.fuzz ax.xz.fuzz/ax.xz.fuzz.Main

Host: 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz, 8 cores, 31G, Manjaro Linux
Time: Mon Nov 13 23:41:06 2023 PST elapsed time: 69.795891 seconds (0d 0h 1m 9s)

---------------  T H R E A D  ---------------

Current thread (0x00007f0d4802aea0):  JavaThread "main"             [_thread_in_native, id=107665, stack(0x00007f0d4e300000,0x00007f0d4e400000) (1024K)]

Stack: [0x00007f0d4e300000,0x00007f0d4e400000],  sp=0x00007f0d4e3fe808,  free space=1018k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)

[error occurred during error reporting (printing native stack (with source info)), id 0xb, SIGSEGV (0xb) at pc=0x00007f0d4fb512fe]

Retrying call stack printing without source information...
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)

[error occurred during error reporting (retry printing native stack (no source info)), id 0xb, SIGSEGV (0xb) at pc=0x00007f0d4fb512fe]
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
v  ~RuntimeStub::nep_invoker_blob 0x00007f0d38094888
J 3970 c2 ax.xz.fuzz.Tester.runBlock(Lax/xz/fuzz/CPUState;Ljava/lang/foreign/MemorySegment;)Lax/xz/fuzz/ExecutionResult; ax.xz.fuzz (71 bytes) @ 0x00007f0d3877d348 [0x00007f0d3877cd20+0x0000000000000628]
J 4054% c2 ax.xz.fuzz.Main.main([Ljava/lang/String;)V ax.xz.fuzz (966 bytes) @ 0x00007f0d387c1f64 [0x00007f0d387c17e0+0x0000000000000784]
v  ~StubRoutines::call_stub 0x00007f0d37f37cc6

siginfo: si_signo: 7 (SIGBUS), si_code: 2 (BUS_ADRERR), si_addr: 0x00007f0d4c01eb58

Registers:
RAX=0x0000000000000000, RBX=0x00007f0d4c00d000, RCX=0x0000000000000084, RDX=0x00007f0d48424000
RSP=0x00007f0d4e3fe808, RBP=0x00007f0d4e3fe810, RSI=0x0000000000000084, RDI=0x00007f0d4c00d000
R8 =0x00007f0d48424000, R9 =0x0000000000000000, R10=0x00007f0d4c01eb58, R11=0x000000060e7cd2e0
R12=0x0000000000000000, R13=0x0000000000000008, R14=0x00007f0d48424008, R15=0x00007f0d4802aea0
RIP=0x00007f0d4c01eb58, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000014
  TRAPNO=0x000000000000000e


Register to memory mapping:

RAX=0x0 is null
RBX=0x00007f0d4c00d000 points into unknown readable memory: 0x7d64ff8349ff314d | 4d 31 ff 49 83 ff 64 7d
RCX=0x0000000000000084 is an unknown value
RDX=0x00007f0d48424000 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RSP=0x00007f0d4e3fe808 is pointing into the stack for thread: 0x00007f0d4802aea0
RBP=0x00007f0d4e3fe810 is pointing into the stack for thread: 0x00007f0d4802aea0
RSI=0x0000000000000084 is an unknown value
RDI=0x00007f0d4c00d000 points into unknown readable memory: 0x7d64ff8349ff314d | 4d 31 ff 49 83 ff 64 7d
R8 =0x00007f0d48424000 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
R9 =0x0 is null
R10=
[error occurred during error reporting (printing register info), id 0xb, SIGSEGV (0xb) at pc=0x00007f0d4fb512fe]
R11=0x000000060e7cd2e0 is an oop: java.lang.Thread 
{0x000000060e7cd2e0} - klass: 'java/lang/Thread'
 - ---- fields (total size 15 words):
 - 'threadLocalRandomProbe' 'I' @12  0 (0x00000000)
 - private volatile 'eetop' 'J' @16  139695019437728 (0x00007f0d4802aea0)
 - private final 'tid' 'J' @24  1 (0x0000000000000001)
 - 'threadLocalRandomSeed' 'J' @32  0 (0x0000000000000000)
 - injected 'jvmti_thread_state' 'J' @40  0 (0x0000000000000000)
 - 'threadLocalRandomSecondarySeed' 'I' @48  0 (0x00000000)
 - injected 'jvmti_VTMS_transition_disable_count' 'I' @52  0 (0x00000000)
 - injected 'jfr_epoch' 'S' @56  0 (0x0000)
 - volatile 'interrupted' 'Z' @58  false (0x00)
 - injected 'jvmti_is_in_VTMS_transition' 'Z' @59  false (0x00)
 - private volatile 'name' 'Ljava/lang/String;' @60  "main"{0x000000060e94e318} (0xc1d29c63)
 - private volatile 'contextClassLoader' 'Ljava/lang/ClassLoader;' @64  a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000060e75e830} (0xc1cebd06)
 - private 'inheritedAccessControlContext' 'Ljava/security/AccessControlContext;' @68  a 'java/security/AccessControlContext'{0x000000060e94e2f0} (0xc1d29c5e)
 - private final 'holder' 'Ljava/lang/Thread$FieldHolder;' @72  a 'java/lang/Thread$FieldHolder'{0x000000060e94e2c8} (0xc1d29c59)
 - 'threadLocals' 'Ljava/lang/ThreadLocal$ThreadLocalMap;' @76  a 'java/lang/ThreadLocal$ThreadLocalMap'{0x000000060e854c48} (0xc1d0a989)
 - 'inheritableThreadLocals' 'Ljava/lang/ThreadLocal$ThreadLocalMap;' @80  null (0x00000000)
 - private 'scopedValueBindings' 'Ljava/lang/Object;' @84  a 'java/lang/Class'{0x00000007ffc80460} = 'java/lang/Thread' (0xfff9008c)
 - final 'interruptLock' 'Ljava/lang/Object;' @88  a 'java/lang/Object'{0x000000060e94e2b8} (0xc1d29c57)
 - private volatile 'parkBlocker' 'Ljava/lang/Object;' @92  null (0x00000000)
 - volatile 'nioBlocker' 'Lsun/nio/ch/Interruptible;' @96  null (0x00000000)
 - private 'cont' 'Ljdk/internal/vm/Continuation;' @100  null (0x00000000)
 - private volatile 'uncaughtExceptionHandler' 'Ljava/lang/Thread$UncaughtExceptionHandler;' @104  null (0x00000000)
 - private 'container' 'Ljdk/internal/vm/ThreadContainer;' @108  null (0x00000000)
 - private volatile 'headStackableScopes' 'Ljdk/internal/vm/StackableScope;' @112  null (0x00000000)
R12=0x0 is null
R13=0x0000000000000008 is an unknown value
R14=0x00007f0d48424008 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
R15=0x00007f0d4802aea0 is a thread

Top of Stack: (sp=0x00007f0d4e3fe808)
0x00007f0d4e3fe808:   00007f0d380948c7 000000060e915b50
0x00007f0d4e3fe818:   00007f0d3877d348 000000060e7cd2e0
0x00007f0d4e3fe828:   000000062ee2bcc0 000000062ee2bc80
0x00007f0d4e3fe838:   000000062ee2bcb0 000000062ee2bcc0
0x00007f0d4e3fe848:   000000062ee2bce8 00007f0d48424000
0x00007f0d4e3fe858:   000000062ee2ab28 0000000000000000
0x00007f0d4e3fe868:   000000062ee2ab30 000000062ee2b0c8
0x00007f0d4e3fe878:   00007f0d38065029 00000000c1d22b6a
0x00007f0d4e3fe888:   00007f0d387c1f64 0000000600000000
0x00007f0d4e3fe898:   000000062ee2bbf8 000000060e915158
0x00007f0d4e3fe8a8:   0000000000000000 00007f0c00000001
0x00007f0d4e3fe8b8:   0000000065532492 000000063ef86750
0x00007f0d4e3fe8c8:   00000006270001c0 0000000627000190
0x00007f0d4e3fe8d8:   000000064101f300 000000063ef80a90
0x00007f0d4e3fe8e8:   c5dc44b83ef80aa8 c5dc44e4c5dc44dd
0x00007f0d4e3fe8f8:   000000062ee22988 0000000000000000
0x00007f0d4e3fe908:   0000c5f2c1d2fd8b 000000060e915168
0x00007f0d4e3fe918:   000000060e9151b8 000000000034bf06
0x00007f0d4e3fe928:   000000060e915190 000000062ee22680
0x00007f0d4e3fe938:   000000062ee2b0a8 0000000640e8c230
0x00007f0d4e3fe948:   000000062ee229f8 000000062ee22a10
0x00007f0d4e3fe958:   000000062ee294e0 0000000000000000
0x00007f0d4e3fe968:   000000060e9151b8 000000062ee29860
0x00007f0d4e3fe978:   0000000000000084 000000062ee29820
0x00007f0d4e3fe988:   deaddeaf00022c90 000000062ee295c8
0x00007f0d4e3fe998:   000000060e9151e0 0000000614b63d10
0x00007f0d4e3fe9a8:   0000000614b64d10 0000000614b64d28
0x00007f0d4e3fe9b8:   000000060e9151b8 000000060e915190
0x00007f0d4e3fe9c8:   000000060e915168 00007f0d4e3fea50
0x00007f0d4e3fe9d8:   00007f0d37f37cc6 000000060e915158
0x00007f0d4e3fe9e8:   000000060e915148 00007f0c00001fa0
0x00007f0d4e3fe9f8:   00007f0d4e3feb80 000000000000000e 

Instructions: (pc=0x00007f0d4c01eb58)
0x00007f0d4c01ea58:   43 5f 45 56 41 4c 5f 4d 45 54 48 4f 44 5f 5f 20
0x00007f0d4c01ea68:   32 13 00 00 00 10 00 00 00 5f 5f 46 4c 54 5f 4d
0x00007f0d4c01ea78:   41 4e 54 5f 44 49 47 5f 5f 20 32 34 17 00 00 00
0x00007f0d4c01ea88:   14 00 00 00 5f 5f 4c 44 42 4c 5f 44 45 43 49 4d
0x00007f0d4c01ea98:   41 4c 5f 44 49 47 5f 5f 20 32 31 1d 00 00 00 0b
0x00007f0d4c01eaa8:   00 00 00 5f 5f 56 45 52 53 49 4f 4e 5f 5f 20 22
0x00007f0d4c01eab8:   31 33 2e 32 2e 31 20 32 30 32 33 30 38 30 31 22
0x00007f0d4c01eac8:   15 00 00 00 0a 00 00 00 5f 5f 55 49 4e 54 36 34
0x00007f0d4c01ead8:   5f 43 28 63 29 20 63 20 23 23 20 55 4c 10 00 00
0x00007f0d4c01eae8:   00 0e 00 00 00 5f 53 54 44 43 5f 50 52 45 44 45
0x00007f0d4c01eaf8:   46 5f 48 20 31 1e 00 00 00 13 00 00 00 5f 5f 49
0x00007f0d4c01eb08:   4e 54 5f 4c 45 41 53 54 33 32 5f 4d 41 58 5f 5f
0x00007f0d4c01eb18:   20 30 78 37 66 66 66 66 66 66 66 1c 00 00 00 1a
0x00007f0d4c01eb28:   00 00 00 5f 5f 47 43 43 5f 41 54 4f 4d 49 43 5f
0x00007f0d4c01eb38:   49 4e 54 5f 4c 4f 43 4b 5f 46 52 45 45 20 32 18
0x00007f0d4c01eb48:   00 00 00 12 00 00 00 5f 5f 46 4c 54 31 32 38 5f
0x00007f0d4c01eb58:   4d 41 58 5f 45 58 50 5f 5f 20 31 36 33 38 34 15
0x00007f0d4c01eb68:   00 00 00 12 00 00 00 5f 5f 46 4c 54 33 32 5f 4d
0x00007f0d4c01eb78:   41 4e 54 5f 44 49 47 5f 5f 20 32 34 2c 00 00 00
0x00007f0d4c01eb88:   14 00 00 00 5f 5f 46 4c 4f 41 54 5f 57 4f 52 44
0x00007f0d4c01eb98:   5f 4f 52 44 45 52 5f 5f 20 5f 5f 4f 52 44 45 52
0x00007f0d4c01eba8:   5f 4c 49 54 54 4c 45 5f 45 4e 44 49 41 4e 5f 5f
0x00007f0d4c01ebb8:   1a 00 00 00 12 00 00 00 5f 5f 46 4c 54 33 32 58
0x00007f0d4c01ebc8:   5f 4d 49 4e 5f 45 58 50 5f 5f 20 28 2d 31 30 32
0x00007f0d4c01ebd8:   31 29 22 00 00 00 1a 00 00 00 5f 5f 53 54 44 43
0x00007f0d4c01ebe8:   5f 49 45 43 5f 36 30 35 35 39 5f 43 4f 4d 50 4c
0x00007f0d4c01ebf8:   45 58 5f 5f 20 32 30 31 34 30 34 4c 3c 00 00 00
0x00007f0d4c01ec08:   0e 00 00 00 5f 5f 42 46 4c 54 31 36 5f 4d 49 4e
0x00007f0d4c01ec18:   5f 5f 20 31 2e 31 37 35 34 39 34 33 35 30 38 32
0x00007f0d4c01ec28:   32 32 38 37 35 30 37 39 36 38 37 33 36 35 33 37
0x00007f0d4c01ec38:   32 32 32 32 34 35 36 38 65 2d 33 38 42 46 31 36
0x00007f0d4c01ec48:   17 00 00 00 15 00 00 00 5f 5f 46 4c 54 31 32 38 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x00007f0d380948c7 is at code_begin+71 in 
[CodeBlob (0x00007f0d38094810)]
Framesize: 2
Runtime Stub (0x00007f0d38094810): nep_invoker_blob
--------------------------------------------------------------------------------
Decoding CodeBlob, name: nep_invoker_blob, at  [0x00007f0d38094880, 0x00007f0d38094970]  240 bytes
[MachCode]
  0x00007f0d38094880: 5548 8bec | 4883 ec00 | c5f8 7749 | 89af a803 | 0000 49ba | 8848 0938 | 0d7f 0000 | 4d89 97a0 
  0x00007f0d380948a0: 0300 0049 | 89a7 9803 | 0000 41c7 | 874c 0400 | 0004 0000 | 0049 8bc1 | 488b fa49 | 8bd0 4c8b 
  0x00007f0d380948c0: d648 8bf1 | 41ff d2c5 | f877 41c7 | 874c 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 5004 
  0x00007f0d380948e0: 0000 0f87 | 4d00 0000 | 4183 bf48 | 0400 0000 | 0f85 3f00 | 0000 41c7 | 874c 0400 | 0008 0000 
  0x00007f0d38094900: 0041 83bf | c804 0000 | 020f 8444 | 0000 0049 | c787 9803 | 0000 0000 | 0000 49c7 | 87a8 0300 
  0x00007f0d38094920: 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 | c5f8 77c9 | c3c5 f877 | 498b ff4c | 8be4 4883 
  0x00007f0d38094940: ec00 4883 | e4f0 e815 | 25c6 1649 | 8be4 4d33 | e4eb a3c5 | f877 4c8b | e448 83ec | 0048 83e4 
  0x00007f0d38094960: f0e8 da32 | 0e17 498b | e44d 33e4 | eba1 f4f4 
[/MachCode]
--------------------------------------------------------------------------------
stack at sp + 1 slots: 0x000000060e915b50 is an oop: jdk.internal.foreign.ConfinedSession 
{0x000000060e915b50} - klass: 'jdk/internal/foreign/ConfinedSession'
 - ---- fields (total size 4 words):
 - 'state' 'I' @12  1 (0x00000001)
 - final 'resourceList' 'Ljdk/internal/foreign/MemorySessionImpl$ResourceList;' @16  a 'jdk/internal/foreign/ConfinedSession$ConfinedResourceList'{0x000000060e915b70} (0xc1d22b6e)
 - final 'owner' 'Ljava/lang/Thread;' @20  a 'java/lang/Thread'{0x000000060e7cd2e0} (0xc1cf9a5c)
 - private 'asyncReleaseCount' 'I' @24  0 (0x00000000)
stack at sp + 2 slots: 0x00007f0d3877d348 is at entry_point+1576 in (nmethod*)0x00007f0d3877c990
Compiled method (c2)   69802 3970   !   4       ax.xz.fuzz.Tester::runBlock (71 bytes)
 total in heap  [0x00007f0d3877c990,0x00007f0d3877fdb0] = 13344
 relocation     [0x00007f0d3877cae8,0x00007f0d3877cd08] = 544
 main code      [0x00007f0d3877cd20,0x00007f0d3877e4a0] = 6016
 stub code      [0x00007f0d3877e4a0,0x00007f0d3877e550] = 176
 oops           [0x00007f0d3877e550,0x00007f0d3877e5d0] = 128
 metadata       [0x00007f0d3877e5d0,0x00007f0d3877e950] = 896
 scopes data    [0x00007f0d3877e950,0x00007f0d3877f678] = 3368
 scopes pcs     [0x00007f0d3877f678,0x00007f0d3877fb08] = 1168
 dependencies   [0x00007f0d3877fb08,0x00007f0d3877fba0] = 152
 handler table  [0x00007f0d3877fba0,0x00007f0d3877fd68] = 456
 nul chk table  [0x00007f0d3877fd68,0x00007f0d3877fdb0] = 72
stack at sp + 3 slots: 0x000000060e7cd2e0 is an oop: java.lang.Thread 
{0x000000060e7cd2e0} - klass: 'java/lang/Thread'
 - ---- fields (total size 15 words):
 - 'threadLocalRandomProbe' 'I' @12  0 (0x00000000)
 - private volatile 'eetop' 'J' @16  139695019437728 (0x00007f0d4802aea0)
 - private final 'tid' 'J' @24  1 (0x0000000000000001)
 - 'threadLocalRandomSeed' 'J' @32  0 (0x0000000000000000)
 - injected 'jvmti_thread_state' 'J' @40  0 (0x0000000000000000)
 - 'threadLocalRandomSecondarySeed' 'I' @48  0 (0x00000000)
 - injected 'jvmti_VTMS_transition_disable_count' 'I' @52  0 (0x00000000)
 - injected 'jfr_epoch' 'S' @56  0 (0x0000)
 - volatile 'interrupted' 'Z' @58  false (0x00)
 - injected 'jvmti_is_in_VTMS_transition' 'Z' @59  false (0x00)
 - private volatile 'name' 'Ljava/lang/String;' @60  "main"{0x000000060e94e318} (0xc1d29c63)
 - private volatile 'contextClassLoader' 'Ljava/lang/ClassLoader;' @64  a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x000000060e75e830} (0xc1cebd06)
 - private 'inheritedAccessControlContext' 'Ljava/security/AccessControlContext;' @68  a 'java/security/AccessControlContext'{0x000000060e94e2f0} (0xc1d29c5e)
 - private final 'holder' 'Ljava/lang/Thread$FieldHolder;' @72  a 'java/lang/Thread$FieldHolder'{0x000000060e94e2c8} (0xc1d29c59)
 - 'threadLocals' 'Ljava/lang/ThreadLocal$ThreadLocalMap;' @76  a 'java/lang/ThreadLocal$ThreadLocalMap'{0x000000060e854c48} (0xc1d0a989)
 - 'inheritableThreadLocals' 'Ljava/lang/ThreadLocal$ThreadLocalMap;' @80  null (0x00000000)
 - private 'scopedValueBindings' 'Ljava/lang/Object;' @84  a 'java/lang/Class'{0x00000007ffc80460} = 'java/lang/Thread' (0xfff9008c)
 - final 'interruptLock' 'Ljava/lang/Object;' @88  a 'java/lang/Object'{0x000000060e94e2b8} (0xc1d29c57)
 - private volatile 'parkBlocker' 'Ljava/lang/Object;' @92  null (0x00000000)
 - volatile 'nioBlocker' 'Lsun/nio/ch/Interruptible;' @96  null (0x00000000)
 - private 'cont' 'Ljdk/internal/vm/Continuation;' @100  null (0x00000000)
 - private volatile 'uncaughtExceptionHandler' 'Ljava/lang/Thread$UncaughtExceptionHandler;' @104  null (0x00000000)
 - private 'container' 'Ljdk/internal/vm/ThreadContainer;' @108  null (0x00000000)
 - private volatile 'headStackableScopes' 'Ljdk/internal/vm/StackableScope;' @112  null (0x00000000)
stack at sp + 4 slots: 0x000000062ee2bcc0 is an oop: jdk.internal.foreign.NativeMemorySegmentImpl 
{0x000000062ee2bcc0} - klass: 'jdk/internal/foreign/NativeMemorySegmentImpl'
 - ---- fields (total size 5 words):
 - final 'readOnly' 'Z' @12  false (0x00)
 - final 'length' 'J' @16  2272 (0x00000000000008e0)
 - final 'scope' 'Ljdk/internal/foreign/MemorySessionImpl;' @24  a 'jdk/internal/foreign/ConfinedSession'{0x000000062ee2bc80} (0xc5dc5790)
 - final 'min' 'J' @32  139695023603712 (0x00007f0d48424000)
stack at sp + 5 slots: 0x000000062ee2bc80 is an oop: jdk.internal.foreign.ConfinedSession 
{0x000000062ee2bc80} - klass: 'jdk/internal/foreign/ConfinedSession'
 - ---- fields (total size 4 words):
 - 'state' 'I' @12  1 (0x00000001)
 - final 'resourceList' 'Ljdk/internal/foreign/MemorySessionImpl$ResourceList;' @16  a 'jdk/internal/foreign/ConfinedSession$ConfinedResourceList'{0x000000062ee2bca0} (0xc5dc5794)
 - final 'owner' 'Ljava/lang/Thread;' @20  a 'java/lang/Thread'{0x000000060e7cd2e0} (0xc1cf9a5c)
 - private 'asyncReleaseCount' 'I' @24  0 (0x00000000)
stack at sp + 6 slots: 0x000000062ee2bcb0 is an oop: jdk.internal.foreign.MemorySessionImpl$1 
{0x000000062ee2bcb0} - klass: 'jdk/internal/foreign/MemorySessionImpl$1'
 - ---- fields (total size 2 words):
 - final synthetic 'this$0' 'Ljdk/internal/foreign/MemorySessionImpl;' @12  a 'jdk/internal/foreign/ConfinedSession'{0x000000062ee2bc80} (0xc5dc5790)
stack at sp + 7 slots: 0x000000062ee2bcc0 is an oop: jdk.internal.foreign.NativeMemorySegmentImpl 
{0x000000062ee2bcc0} - klass: 'jdk/internal/foreign/NativeMemorySegmentImpl'
 - ---- fields (total size 5 words):
 - final 'readOnly' 'Z' @12  false (0x00)
 - final 'length' 'J' @16  2272 (0x00000000000008e0)
 - final 'scope' 'Ljdk/internal/foreign/MemorySessionImpl;' @24  a 'jdk/internal/foreign/ConfinedSession'{0x000000062ee2bc80} (0xc5dc5790)
 - final 'min' 'J' @32  139695023603712 (0x00007f0d48424000)

--------------------------------------------------------------------------------
Decoding CodeBlob, name: nep_invoker_blob, at  [0x00007f0d38094880, 0x00007f0d38094970]  240 bytes
[MachCode]
  0x00007f0d38094880: 5548 8bec | 4883 ec00 | c5f8 7749 | 89af a803 | 0000 49ba | 8848 0938 | 0d7f 0000 | 4d89 97a0 
  0x00007f0d380948a0: 0300 0049 | 89a7 9803 | 0000 41c7 | 874c 0400 | 0004 0000 | 0049 8bc1 | 488b fa49 | 8bd0 4c8b 
  0x00007f0d380948c0: d648 8bf1 | 41ff d2c5 | f877 41c7 | 874c 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 5004 
  0x00007f0d380948e0: 0000 0f87 | 4d00 0000 | 4183 bf48 | 0400 0000 | 0f85 3f00 | 0000 41c7 | 874c 0400 | 0008 0000 
  0x00007f0d38094900: 0041 83bf | c804 0000 | 020f 8444 | 0000 0049 | c787 9803 | 0000 0000 | 0000 49c7 | 87a8 0300 
  0x00007f0d38094920: 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 | c5f8 77c9 | c3c5 f877 | 498b ff4c | 8be4 4883 
  0x00007f0d38094940: ec00 4883 | e4f0 e815 | 25c6 1649 | 8be4 4d33 | e4eb a3c5 | f877 4c8b | e448 83ec | 0048 83e4 
  0x00007f0d38094960: f0e8 da32 | 0e17 498b | e44d 33e4 | eba1 f4f4 
[/MachCode]
--------------------------------------------------------------------------------


Compiled method (c2)   69806 3970   !   4       ax.xz.fuzz.Tester::runBlock (71 bytes)
 total in heap  [0x00007f0d3877c990,0x00007f0d3877fdb0] = 13344
 relocation     [0x00007f0d3877cae8,0x00007f0d3877cd08] = 544
 main code      [0x00007f0d3877cd20,0x00007f0d3877e4a0] = 6016
 stub code      [0x00007f0d3877e4a0,0x00007f0d3877e550] = 176
 oops           [0x00007f0d3877e550,0x00007f0d3877e5d0] = 128
 metadata       [0x00007f0d3877e5d0,0x00007f0d3877e950] = 896
 scopes data    [0x00007f0d3877e950,0x00007f0d3877f678] = 3368
 scopes pcs     [0x00007f0d3877f678,0x00007f0d3877fb08] = 1168
 dependencies   [0x00007f0d3877fb08,0x00007f0d3877fba0] = 152
 handler table  [0x00007f0d3877fba0,0x00007f0d3877fd68] = 456
 nul chk table  [0x00007f0d3877fd68,0x00007f0d3877fdb0] = 72

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x00007f0cc46d2c40} 'runBlock' '(Lax/xz/fuzz/CPUState;Ljava/lang/foreign/MemorySegment;)Lax/xz/fuzz/ExecutionResult;' in 'ax/xz/fuzz/Tester'
  # parm0:    rsi:rsi   = 'ax/xz/fuzz/CPUState'
  # parm1:    rdx:rdx   = 'java/lang/foreign/MemorySegment'
  #           [sp+0x70]  (sp of caller)
  0x00007f0d3877cd20: 8984 2400 | c0fe ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 | 0f85 5617 | 0000 4889 | 5424 0848 
  0x00007f0d3877cd40: 8934 244d | 8bb7 b801 | 0000 4d8b | 9780 0300 | 004d 8bde | 4983 c320 | 4d8b 124c | 8954 2420 
  0x00007f0d3877cd60: 4d3b 9fc8 | 0100 000f | 83b3 0c00 | 004d 899f | b801 0000 | 410f 0d8b | c000 0000 | 49c7 0601 
  0x00007f0d3877cd80: 0000 004d | 8bd6 4983 

  0x00007f0d3877cd88: ;   {metadata('jdk/internal/foreign/ConfinedSession')}
  0x00007f0d3877cd88: c210 41c7 | 4608 b072 | 0501 4589 | 660c c5fd | efc0 62d1 | fe08 7f02 | 4d8b 87b8 | 0100 004d 
  0x00007f0d3877cda8: 8bd0 4983 | c210 4d3b | 97c8 0100 | 000f 8389 | 0c00 004d | 8997 b801 | 0000 410f | 0d8a c000 
  0x00007f0d3877cdc8: 0000 49c7 | 0001 0000 

  0x00007f0d3877cdd0: ;   {metadata('jdk/internal/foreign/ConfinedSession$ConfinedResourceList')}
  0x00007f0d3877cdd0: 0041 c740 | 08a0 7b05 | 0145 8960 | 0c4c 8b54 | 2420 49c1 | ea03 4589 | 5614 498b | d848 c1eb 
  0x00007f0d3877cdf0: 034c 8b54 | 2420 4d8b | de4d 33d3 | 4d8b ee49 | c1ed 0349 | c1ea 164d | 85d2 741a | 49c1 eb09 
  0x00007f0d3877ce10: 48bf 0000 | a02c 0d7f | 0000 4903 | fb80 3f02 | 0f85 d709 | 0000 4180 | 7f40 000f | 8525 0900 
  0x00007f0d3877ce30: 0041 895e | 104d 8bd0 | 4d8b de4d | 33d3 49c1 | ea16 4d85 | d274 1a49 | c1eb 0948 | bf00 00a0 
  0x00007f0d3877ce50: 2c0d 7f00 | 0049 03fb | 803f 020f | 85fe 0900 | 004d 8b97 | b801 0000 | 4589 6618 | 4d8b da49 
  0x00007f0d3877ce70: 83c3 104d | 3b9f c801 | 0000 0f83 | fd0b 0000 | 4d89 9fb8 | 0100 0041 | 0f0d 8bc0 | 0000 0049 
  0x00007f0d3877ce90: c702 0100 

  0x00007f0d3877ce94: ;   {metadata('jdk/internal/foreign/MemorySessionImpl$1')}
  0x00007f0d3877ce94: 0000 41c7 | 4208 8087 | 0501 4589 | 6a0c 418b | 6e14 85ed | 7415 4c8b | dd49 c1e3 | 034c 8b44 
  0x00007f0d3877ceb4: 2420 4d3b | d80f 8579 | 1200 0041 | 8b6e 0c85 | ed0f 8c73 

  0x00007f0d3877cec8: ;   {oop(a 'java/lang/Class'{0x00000007ffc8b640} = 'jdk/internal/misc/VM')}
  0x00007f0d3877cec8: 0f00 0049 | bb40 b6c8 | ff07 0000 | 0041 0fb6 | abc5 0000 | 0085 ed0f | 8577 0f00 

  0x00007f0d3877cee4: ;   {oop(a 'java/lang/Class'{0x00000007ffc9a158} = 'java/nio/Bits')}
  0x00007f0d3877cee4: 0049 bb58 | a1c9 ff07 | 0000 0041 | 0fb6 aba1 | 0000 0085 | ed0f 8479 | 0f00 004d | 8b9b 8800 
  0x00007f0d3877cf04: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c7f8})}
  0x00007f0d3877cf04: 0000 49b8 | f8c7 840e | 0600 0000 | 498b 4010 | 4c2b d849 | 81fb e008 | 0000 0f8c | e80d 0000 
  0x00007f0d3877cf24: 4c8d 98e0 | 0800 00f0 | 4d0f b158 | 1040 0f94 | c540 0fb6 | ed85 ed0f | 8453 0f00 | 004c 8954 
  0x00007f0d3877cf44: 2418 418b | ed4c 8974 | 2410 41ba | e008 0000 

  0x00007f0d3877cf54: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c810})}
  0x00007f0d3877cf54: 49bb 10c8 | 840e 0600 | 0000 f04d | 0fc1 5310 | 41ba 0100 

  0x00007f0d3877cf68: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c7e0})}
  0x00007f0d3877cf68: 0000 49bb | e0c7 840e | 0600 0000 | f04d 0fc1 

  0x00007f0d3877cf78: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000060e7275b0})}
  0x00007f0d3877cf78: 5310 48be | b075 720e | 0600 0000 | bae0 0800 

  0x00007f0d3877cf88: ;   {optimized virtual_call}
  0x00007f0d3877cf88: 0066 90e8 

  0x00007f0d3877cf8c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*invokevirtual allocateMemory0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.Unsafe::allocateMemory@21 (line 630)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@64 (line 129)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877cf8c: 30e4 f0ff 

  0x00007f0d3877cf90: ;   {other}
  0x00007f0d3877cf90: 0f1f 8400 | 0006 0000 | 4885 c00f | 840f 0f00 | 0048 8944 | 2428 33d2 

  0x00007f0d3877cfa8: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000060e7275b0})}
  0x00007f0d3877cfa8: 4533 c948 | beb0 7572 | 0e06 0000 | 0048 8bc8 | 41b8 e008 

  0x00007f0d3877cfbc: ;   {optimized virtual_call}
  0x00007f0d3877cfbc: 0000 90e8 

  0x00007f0d3877cfc0: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*invokevirtual setMemory0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.Unsafe::setMemory@25 (line 742)
                      ; - jdk.internal.misc.Unsafe::setMemory@6 (line 753)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@83 (line 131)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877cfc0: fccc f1ff 

  0x00007f0d3877cfc4: ;   {other}
  0x00007f0d3877cfc4: 0f1f 8400 | 3406 0001 | 498b 87b8 | 0100 004c | 8bd0 4983 | c228 4c8b | 5c24 2849 | 83c3 0749 
  0x00007f0d3877cfe4: 83e3 f84d | 3b97 c801 | 0000 0f83 | b80a 0000 | 4c89 5c24 | 304d 8997 | b801 0000 | 410f 0d8a 
  0x00007f0d3877d004: c000 0000 | 48c7 0001 | 0000 004c | 8bd8 4983 

  0x00007f0d3877d014: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877d014: c320 c740 | 08e8 9f05 | 0144 8960 | 0c44 8960 | 1cc5 fdef | c0c4 c179 | d603 48c7 | 4010 e008 
  0x00007f0d3877d034: 0000 8968 | 184c 8b5c | 2428 4c89 | 5820 498b | 9fb8 0100 | 004c 8bd3 | 4983 c228 | 4d3b 97c8 
  0x00007f0d3877d054: 0100 000f | 8370 0a00 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 | 48c7 0301 

  0x00007f0d3877d070: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl$1')}
  0x00007f0d3877d070: 0000 00c7 | 4308 88d7 | 0b01 4489 | 630c 4c89 | 5b10 48c7 | 4318 e008 | 0000 48c7 | 4320 e008 
  0x00007f0d3877d090: 0000 4c8b | 4c24 1041 | 8b69 1485 | ed0f 8419 | 0600 004c | 8bc5 49c1 | e003 4c8b | 5424 204d 
  0x00007f0d3877d0b0: 3bc2 0f85 | 9c10 0000 | 418b 690c | 85ed 0f8c | 140e 0000 | 458b 6910 

  0x00007f0d3877d0c8: ; implicit exception: dispatches to 0x00007f0d3877e320
  0x00007f0d3877d0c8: 438b 6cec 

  0x00007f0d3877d0cc: ;   {oop(a 'jdk/internal/foreign/MemorySessionImpl$ResourceList$ResourceCleanup$1'{0x000000060dde0740})}
  0x00007f0d3877d0cc: 0c81 fde8 | c0bb c10f | 843b 0e00 | 0048 8944 | 2420 4c89 | 5424 1089 | 6b0c 4c8b | d34c 8bf3 
  0x00007f0d3877d0ec: 49c1 ee03 | 4889 5c24 | 284b 8d1c | ec4c 8bdd | 49c1 e303 | 4d33 da49 | c1eb 164d | 85db 741e 
  0x00007f0d3877d10c: 85ed 741a | 49c1 ea09 | 48bf 0000 | a02c 0d7f | 0000 4903 | fa80 3f02 | 0f85 2308 | 0000 4180 
  0x00007f0d3877d12c: 7f40 000f | 8558 0600 | 0047 8974 | ec0c 4c8b | 5424 284c | 8bdb 4d33 | d349 c1ea | 164d 85d2 
  0x00007f0d3877d14c: 741a 49c1 | eb09 48bf | 0000 a02c | 0d7f 0000 | 4903 fb80 | 3f02 0f85 | 4507 0000 | 4c8b 4424 
  0x00007f0d3877d16c: 2049 c7c2 | 29f7 ffff | 4d03 5010 | 4d85 d20f | 8c33 0a00 | 0049 83fa | 080f 8655 | 0a00 0049 
  0x00007f0d3877d18c: 8b97 b801 | 0000 410f | b648 0c4c | 8bd2 4983 | c228 418b | 6818 4d3b | 97c8 0100 | 000f 8350 
  0x00007f0d3877d1ac: 0900 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 48c7 | 0201 0000 | 004c 8bd2 | 4983 c218 
  0x00007f0d3877d1cc: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877d1cc: c742 08e8 | 9f05 0144 | 8962 0cc5 | fdef c062 | d1fe 087f | 0248 c742 | 10d8 0800 | 0088 4a0c 
  0x00007f0d3877d1ec: 896a 184d | 8b50 2049 | 83c2 084c | 8952 2048 | 8b34 2448 | 85f6 0f84 | 8809 0000 | 4c89 0424 
  0x00007f0d3877d20c: ;   {optimized virtual_call}
  0x00007f0d3877d20c: 6666 90e8 

  0x00007f0d3877d210: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*invokevirtual toSavedState {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@14 (line 38)
  0x00007f0d3877d210: 2c91 ffff 

  0x00007f0d3877d214: ;   {other}
  0x00007f0d3877d214: 0f1f 8400 | 8408 0002 | 4c8b 4c24 | 0845 8b51 

  0x00007f0d3877d224: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877d224: 0841 81fa | e89f 0501 | 0f85 da09 | 0000 418b | 6918 4d8b 

  0x00007f0d3877d238: ;   {oop(a 'jdk/internal/foreign/GlobalSession'{0x000000060e7b3740})}
  0x00007f0d3877d238: 5110 81fd | e866 cfc1 | 0f84 060d | 0000 458b 

  0x00007f0d3877d248: ;   {metadata('jdk/internal/foreign/ConfinedSession')}
  0x00007f0d3877d248: 44ec 0841 | 81f8 b072 | 0501 0f85 | cc09 0000 | 4d8d 04ec | 418b 6814 | 85ed 0f84 | 5e04 0000 
  0x00007f0d3877d268: 4c8b dd49 | c1e3 0348 | 8b7c 2410 | 4c3b df0f | 8517 0f00 | 0045 8b58 | 0c45 85db | 0f8c ea0c 
  0x00007f0d3877d288: 0000 4181 | fbff ffff | 7f0f 8409 | 0d00 0049 | 8b59 204c | 8b0c 2441 | 8b49 1841 | ffc3 4589 
  0x00007f0d3877d2a8: ;   {oop(a 'jdk/internal/foreign/GlobalSession'{0x000000060e7b3740})}
  0x00007f0d3877d2a8: 580c 81f9 | e866 cfc1 | 0f84 160d | 0000 4c8b | d949 c1e3 | 034d 3bd8 | 0f84 4704 | 0000 418b 
  0x00007f0d3877d2c8: ;   {metadata('jdk/internal/foreign/ConfinedSession')}
  0x00007f0d3877d2c8: 54cc 0881 | fab0 7205 | 010f 8509 | 0a00 0048 | c1e1 038b | 6914 85ed | 7410 4c8b | dd49 c1e3 
  0x00007f0d3877d2e8: 034c 3bdf | 0f85 260f | 0000 8b69 | 0c85 ed0f | 8cd3 0d00 | 0081 fdff | ffff 7f0f | 84fb 0d00 
  0x00007f0d3877d308: 00ff c589 | 690c 4889 | 4c24 1049 | 8be8 4c89 | 4c24 0848 | 893c 244d 

  0x00007f0d3877d320: ;   {oop(a 'jdk/internal/foreign/abi/NativeEntryPoint'{0x0000000614b84120})}
  0x00007f0d3877d320: 8b41 2048 | bf20 41b8 | 1406 0000 | 0048 be58 | eb01 4c0d | 7f00 0048 | 8bd3 498b | ca45 33c9 
  0x00007f0d3877d340: ;   {static_call}
  0x00007f0d3877d340: 6666 90e8 

  0x00007f0d3877d344: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*invokestatic linkToNative {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118400::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111c00::invokeExact_MT@27
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@120
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877d344: 38c3 eaff 

  0x00007f0d3877d348: ;   {other}
  0x00007f0d3877d348: 0f1f 8400 | b809 0003 | 4c8b dd41 | 8b6b 144c | 8bd5 49c1 | e203 4c8b | 0424 4d3b | c20f 8523 
  0x00007f0d3877d368: 0a00 0041 | ff4b 0c4c | 8b5c 2410 | 4d85 db74 | 1841 8b6b | 144c 8bd5 | 49c1 e203 | 4d3b c20f 
  0x00007f0d3877d388: 8523 0d00 | 0041 ff4b | 0c4c 8b4c | 2408 498b | 4920 4c8b | d149 83e2 | 074d 85d2 | 0f85 0a0a 
  0x00007f0d3877d3a8: 0000 498b | 5910 4885 | db0f 8c95 | 0800 0048 | 8beb 4885 | ed0f 86a5 | 0800 0045 | 8b59 1843 
  0x00007f0d3877d3c8: 8b6c dc14 | 85ed 7410 | 4c8b d549 | c1e2 034d | 3bd0 0f85 | e40d 0000 | 438b 6cdc | 0c85 ed0f 
  0x00007f0d3877d3e8: 8c0b 0c00 | 004c 8bd1 | 4180 3a00 | 0f85 2003 | 0000 4881 | c329 f7ff | ff48 85db | 0f8c 8e08 
  0x00007f0d3877d408: 0000 4883 | fb08 0f86 | a808 0000 | 498b 9fb8 | 0100 0041 | 0fb6 690c | 4c8b d349 | 83c2 284d 
  0x00007f0d3877d428: 3b97 c801 | 0000 0f83 | f906 0000 | 4d89 97b8 | 0100 0041 | 0f0d 8ac0 | 0000 0048 

  0x00007f0d3877d444: ;   {no_reloc}
  0x00007f0d3877d444: c703 0100 | 0000 4c8b | d349 83c2 

  0x00007f0d3877d450: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877d450: 18c7 4308 | e89f 0501 | 4489 630c | c5fd efc0 | 62d1 fe08 | 7f02 48c7 | 4310 d808 | 0000 4088 
  0x00007f0d3877d470: 6b0c 4489 | 5b18 4d8b | 5120 4983 | c208 4c89 | 5320 498b | afb8 0100 | 004c 8bd5 | 4983 c210 
  0x00007f0d3877d490: 4d3b 97c8 | 0100 000f | 83c5 0600 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 | 48c7 4500 
  0x00007f0d3877d4b0: 0100 0000 

  0x00007f0d3877d4b4: ;   {metadata('ax/xz/fuzz/ExecutionResult$Success')}
  0x00007f0d3877d4b4: c745 0820 | 5010 0144 | 8965 0c4c | 8904 2448 | 895c 2408 | 488b 7424 

  0x00007f0d3877d4cc: ;   {static_call}
  0x00007f0d3877d4cc: 0866 90e8 

  0x00007f0d3877d4d0: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop }
                      ;*invokestatic ofSavedState {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.ExecutionResult$Success::ofSavedState@5 (line 84)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@19 (line 20)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877d4d0: 0ccd fcff 

  0x00007f0d3877d4d4: ;   {other}
  0x00007f0d3877d4d4: 0f1f 8400 | 440b 0004 | 488b d841 | 807f 4000 | 0f85 b104 | 0000 4c8b | db49 c1eb | 0344 895d 
  0x00007f0d3877d4f4: 0c4c 8bd5 | 4c8b db4d | 33da 49c1 | eb16 4d85 | db74 1f48 | 85db 741a | 49c1 ea09 | 48bf 0000 
  0x00007f0d3877d514: a02c 0d7f | 0000 4903 | fa80 3f02 | 0f85 ac04 | 0000 4889 | 6c24 084c | 8b54 2418 | 418b 6a0c 
  0x00007f0d3877d534: ; implicit exception: dispatches to 0x00007f0d3877e3c0
  0x00007f0d3877d534: 458b 54ec 

  0x00007f0d3877d538: ;   {metadata('jdk/internal/foreign/ConfinedSession')}
  0x00007f0d3877d538: 0841 81fa | b072 0501 | 0f85 3e07 | 0000 4d8d | 04ec 418b | 6814 85ed | 7414 4c8b | d549 c1e2 
  0x00007f0d3877d558: 034c 8b1c | 244d 3bd3 | 0f85 8a0c | 0000 418b | 680c 85ed | 0f8c ae0a | 0000 458b | 5818 418b 
  0x00007f0d3877d578: 680c 85ed | 0f85 5a08 | 0000 4585 | db0f 85b5 | 0a00 0041 | c740 0cfe | ffff ff41 | 8b58 1041 
  0x00007f0d3877d598: 8b6c dc0c 

  0x00007f0d3877d59c: ;   {oop(a 'jdk/internal/foreign/MemorySessionImpl$ResourceList$ResourceCleanup$1'{0x000000060dde0740})}
  0x00007f0d3877d59c: 81fd e8c0 | bbc1 0f84 | bc0a 0000 | 4180 7f40 | 000f 8512 

  0x00007f0d3877d5b0: ;   {oop(a 'jdk/internal/foreign/MemorySessionImpl$ResourceList$ResourceCleanup$1'{0x000000060dde0740})}
  0x00007f0d3877d5b0: 0200 0041 | c744 dc0c | e8c0 bbc1 | 4d8d 14dc 

  0x00007f0d3877d5c0: ;   {oop(a 'jdk/internal/foreign/MemorySessionImpl$ResourceList$ResourceCleanup$1'{0x000000060dde0740})}
  0x00007f0d3877d5c0: 49bb 4007 | de0d 0600 | 0000 4d33 | da49 c1eb | 164d 85db | 741b 49c1 | ea09 49b8 | 0000 a02c 
  0x00007f0d3877d5e0: 0d7f 0000 | 4d03 c241 | 8038 020f | 850a 0300 | 0085 ed0f | 84ab 0000 | 004d 8d04 | eceb 0590 
  0x00007f0d3877d600: 4f8d 04dc | 458b 5808 

  0x00007f0d3877d608: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl$1')}
  0x00007f0d3877d608: 4181 fb88 | d70b 010f | 85bb 0000 | 004d 8bd0 | 498b 5210 | 4885 d20f | 8453 0a00 | 0049 8bea 
  0x00007f0d3877d628: 4c89 0424 

  0x00007f0d3877d62c: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000060e7275b0})}
  0x00007f0d3877d62c: 48be b075 | 720e 0600 

  0x00007f0d3877d634: ;   {optimized virtual_call}
  0x00007f0d3877d634: 0000 90e8 

  0x00007f0d3877d638: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*invokevirtual freeMemory0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.Unsafe::freeMemory@14 (line 924)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl$1::cleanup@7 (line 139)
                      ; - jdk.internal.foreign.MemorySessionImpl$ResourceList::cleanup@7 (line 272)
                      ; - jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@23 (line 112)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877d638: 04ca f1ff 

  0x00007f0d3877d63c: ;   {other}
  0x00007f0d3877d63c: 0f1f 8400 | ac0c 0005 | 4533 d24c | 2b55 1849 | c7c3 ffff 

  0x00007f0d3877d650: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c7e0})}
  0x00007f0d3877d650: ffff 49b8 | e0c7 840e | 0600 0000 | f04d 0fc1 | 5810 4533 | db4c 2b5d 

  0x00007f0d3877d668: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c810})}
  0x00007f0d3877d668: 2049 b810 | c884 0e06 | 0000 00f0 | 4d0f c150 

  0x00007f0d3877d678: ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000060e84c7f8})}
  0x00007f0d3877d678: 1049 baf8 | c784 0e06 | 0000 00f0 | 4d0f c15a | 104c 8b14 | 2445 8b5a | 0c4d 8b97 

  0x00007f0d3877d694: ; ImmutableOopMap {r11=NarrowOop [8]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl$ResourceList::cleanup@15 (line 273)
                      ; - jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@23 (line 112)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877d694: 5804 0000 

  0x00007f0d3877d698: ;   {poll}
  0x00007f0d3877d698: 4185 0245 | 85db 0f85 | 5cff ffff | 488b 4424 | 0848 83c4 

  0x00007f0d3877d6ac: ;   {poll_return}
  0x00007f0d3877d6ac: 605d 493b | a750 0400 | 000f 87bf | 0d00 00c3 | 4c8b 5424 | 20e9 f2f9 | ffff 488b | 7c24 10e9 
  0x00007f0d3877d6cc: adfb ffff 

  0x00007f0d3877d6d0: ;   {metadata('jdk/internal/foreign/MemorySessionImpl$ResourceList$ResourceCleanup$2')}
  0x00007f0d3877d6d0: 4181 fb10 | 6608 010f | 8577 0b00 | 0049 8be8 | 4c89 0424 | 448b 5d10 | 498b f348 | c1e6 0366 
  0x00007f0d3877d6f0: 9048 b8ff | ffff ffff 

  0x00007f0d3877d6f8: ;   {virtual_call}
  0x00007f0d3877d6f8: ffff ffe8 

  0x00007f0d3877d6fc: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl$ResourceList$ResourceCleanup$2::cleanup@4 (line 293)
                      ; - jdk.internal.foreign.MemorySessionImpl$ResourceList::cleanup@7 (line 272)
                      ; - jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@23 (line 112)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877d6fc: 8085 80ff 

  0x00007f0d3877d700: ;   {other}
  0x00007f0d3877d700: 0f1f 8400 | 700d 0007 | e97c ffff | ff45 33db | 4c89 5c24 | 10e9 f9fb | ffff ba08 | 0000 00b9 
  0x00007f0d3877d720: 1000 0000 | 498b f148 | 8b6c 2418 

  0x00007f0d3877d72c: ;   {optimized virtual_call}
  0x00007f0d3877d72c: 6666 90e8 

  0x00007f0d3877d730: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop }
                      ;*invokeinterface asSlice {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.tester.execution_result::fault$slice@7 (line 54)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@8 (line 18)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877d730: 0caa f2ff 

  0x00007f0d3877d734: ;   {other}
  0x00007f0d3877d734: 0f1f 8400 | a40d 0008 

  0x00007f0d3877d73c: ;   {static_call}
  0x00007f0d3877d73c: 488b f0e8 

  0x00007f0d3877d740: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop }
                      ;*invokestatic ofFaultDetails {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@11 (line 18)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877d740: fc05 0500 

  0x00007f0d3877d744: ;   {other}
  0x00007f0d3877d744: 0f1f 8400 | b40d 0009 | 4889 4424 | 08e9 d5fd | ffff 458b | 5e10 4585 | db0f 84ce | f6ff ff4d 
  0x00007f0d3877d764: 8b57 2849 | 8bfb 48c1 | e703 4d85 | d20f 84c9 | 0500 004d | 8b5f 384b | 897c 13f8 | 4983 c2f8 
  0x00007f0d3877d784: 4d89 5728 | e9a4 f6ff | ff47 8b5c | ec0c 4585 | db0f 849a | f9ff ff4d | 8b57 2849 | 8bfb 48c1 
  0x00007f0d3877d7a4: e703 4d85 | d20f 84c2 | 0500 004d | 8b5f 384b | 897c 13f8 | 4983 c2f8 | 4d89 5728 | e970 f9ff 
  0x00007f0d3877d7c4: ff45 8b5c | dc0c 4585 | db0f 84e0 | fdff ff4d | 8b57 2849 | 8bfb 48c1 | e703 4d85 | d20f 841d 
  0x00007f0d3877d7e4: 0600 004d | 8b5f 384b | 897c 13f8 | 4983 c2f8 | 4d89 5728 | e9b6 fdff | ff4d 8b57 | 484d 8b5f 
  0x00007f0d3877d804: 58f0 8344 | 24c0 0080 | 3f00 0f84 | 12f6 ffff | 4488 274d | 85d2 7531 | 4489 6c24 | 184c 8944 
  0x00007f0d3877d824: 2410 498b | f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d3877d834: ;   {other}
  0x00007f0d3877d834: ffd2 0f1f | 8400 0000 | 0000 4c8b | 4424 1044 | 8b6c 2418 | e9d9 f5ff | ff4b 897c | 13f8 4983 
  0x00007f0d3877d854: c2f8 4d89 | 5748 e9c7 | f5ff ff4d | 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3f00 | 0f84 ebf5 
  0x00007f0d3877d874: ffff 4488 | 274d 85d2 | 751d 498b | f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d3877d88c: ;   {other}
  0x00007f0d3877d88c: ffd2 0f1f | 8400 0000 | 0000 e9c6 | f5ff ff4b | 897c 13f8 | 4983 c2f8 | 4d89 5748 | e9b4 f5ff 
  0x00007f0d3877d8ac: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3f00 0f84 | a4f8 ffff | 4488 274d | 85d2 751d 
  0x00007f0d3877d8cc: 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d3877d8dc: ;   {other}
  0x00007f0d3877d8dc: 0f1f 8400 | 0000 0000 | e97f f8ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e96d | f8ff ff4d 
  0x00007f0d3877d8fc: 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0041 8038 | 000f 84de | fcff ff45 | 8820 4d85 | d275 2049 
  0x00007f0d3877d91c: 8bf8 498b | f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d3877d92c: ;   {other}
  0x00007f0d3877d92c: ffd2 0f1f | 8400 0000 | 0000 e9b6 | fcff ff4f | 8944 13f8 | 4983 c2f8 | 4d89 5748 | e9a4 fcff 
  0x00007f0d3877d94c: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3f00 0f84 | c6f7 ffff | 4488 274d | 85d2 751d 
  0x00007f0d3877d96c: 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d3877d97c: ;   {other}
  0x00007f0d3877d97c: 0f1f 8400 | 0000 0000 | e9a1 f7ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e98f | f7ff ff44 
  0x00007f0d3877d99c: 8b55 0c45 | 85d2 0f84 | 42fb ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d | 85db 0f84 | 6504 0000 
  0x00007f0d3877d9bc: 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 18fb | ffff 4d8b | 5758 4d8b | 5f48 f083 
  0x00007f0d3877d9dc: 4424 c000 | 803f 000f | 843d fbff | ff44 8827 | 4d85 db75 | 1d49 8bf7 | 49ba 20cb | b84e 0d7f 
  0x00007f0d3877d9fc: 0000 41ff 

  0x00007f0d3877da00: ;   {other}
  0x00007f0d3877da00: d20f 1f84 | 0000 0000 | 00e9 18fb | ffff 4b89 | 7c1a f849 | 83c3 f84d | 895f 48e9 | 06fb ffff 
  0x00007f0d3877da20: ;   {metadata('jdk/internal/foreign/ConfinedSession')}
  0x00007f0d3877da20: 48be b072 | 05d0 0c7f | 0000 488b 

  0x00007f0d3877da2c: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877da2c: 2c24 90e8 

  0x00007f0d3877da30: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.MemorySessionImpl::createConfined@0 (line 145)
                      ; - java.lang.foreign.Arena::ofConfined@3 (line 235)
                      ; - ax.xz.fuzz.Tester::runBlock@0 (line 35)
  0x00007f0d3877da30: ccf0 8dff 

  0x00007f0d3877da34: ;   {other}
  0x00007f0d3877da34: 0f1f 8400 | a410 000a | 4c8b f0e9 | 5cf3 ffff | 48ff 7424 | 2048 8f44 | 2410 498b 

  0x00007f0d3877da50: ;   {metadata('jdk/internal/foreign/ConfinedSession$ConfinedResourceList')}
  0x00007f0d3877da50: ee48 bea0 | 7b05 d00c 

  0x00007f0d3877da58: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877da58: 7f00 00e8 

  0x00007f0d3877da5c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.ConfinedSession::<init>@2 (line 55)
                      ; - jdk.internal.foreign.MemorySessionImpl::createConfined@5 (line 145)
                      ; - java.lang.foreign.Arena::ofConfined@3 (line 235)
                      ; - ax.xz.fuzz.Tester::runBlock@0 (line 35)
  0x00007f0d3877da5c: a0f0 8dff 

  0x00007f0d3877da60: ;   {other}
  0x00007f0d3877da60: 0f1f 8400 | d010 000b | 4c8b f548 | ff74 2410 | 488f 4424 | 204c 8bc0 | e960 f3ff | ff44 896c 
  0x00007f0d3877da80: 2418 498b 

  0x00007f0d3877da84: ;   {metadata('jdk/internal/foreign/MemorySessionImpl$1')}
  0x00007f0d3877da84: ee48 be80 | 8705 d00c 

  0x00007f0d3877da8c: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877da8c: 7f00 00e8 

  0x00007f0d3877da90: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [24]=NarrowOop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.MemorySessionImpl::asArena@0 (line 80)
                      ; - java.lang.foreign.Arena::ofConfined@6 (line 235)
                      ; - ax.xz.fuzz.Tester::runBlock@0 (line 35)
  0x00007f0d3877da90: 6cf0 8dff 

  0x00007f0d3877da94: ;   {other}
  0x00007f0d3877da94: 0f1f 8400 | 0411 000c | 4c8b f544 | 8b6c 2418 | 4c8b d0e9 | f2f3 ffff | 4c89 5c24 

  0x00007f0d3877dab0: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877dab0: 3048 bee8 | 9f05 d00c 

  0x00007f0d3877dab8: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877dab8: 7f00 00e8 

  0x00007f0d3877dabc: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@94 (line 134)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877dabc: 40f0 8dff 

  0x00007f0d3877dac0: ;   {other}
  0x00007f0d3877dac0: 0f1f 8400 | 3011 000d | e961 f5ff | ff48 8944 | 2428 498b 

  0x00007f0d3877dad4: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl$1')}
  0x00007f0d3877dad4: eb48 be88 | d70b d00c 

  0x00007f0d3877dadc: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877dadc: 7f00 00e8 

  0x00007f0d3877dae0: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@112 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877dae0: 1cf0 8dff 

  0x00007f0d3877dae4: ;   {other}
  0x00007f0d3877dae4: 0f1f 8400 | 5411 000e | 4c8b d04c | 8bdd 488b | 4424 2849 | 8bda e97f | f5ff ff89 

  0x00007f0d3877db00: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877db00: 4c24 2848 | bee8 9f05 | d00c 7f00 

  0x00007f0d3877db0c: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877db0c: 0066 90e8 

  0x00007f0d3877db10: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@0 (line 87)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@7 (line 42)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSliceNoCheck@11 (line 161)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@9 (line 105)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.Tester::runBlock@11 (line 38)
  0x00007f0d3877db10: ecef 8dff 

  0x00007f0d3877db14: ;   {other}
  0x00007f0d3877db14: 0f1f 8400 | 8411 000f | 4c8b 4424 | 2048 8bd0 | 8b4c 2428 | e9b4 f6ff | ff44 895c 

  0x00007f0d3877db30: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d3877db30: 2410 48be | e89f 05d0 | 0c7f 0000 

  0x00007f0d3877db3c: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877db3c: 6666 90e8 

  0x00007f0d3877db40: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=NarrowOop [24]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@0 (line 87)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@7 (line 42)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSliceNoCheck@11 (line 161)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@9 (line 105)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@16 (line 20)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877db40: bcef 8dff 

  0x00007f0d3877db44: ;   {other}
  0x00007f0d3877db44: 0f1f 8400 | b411 0010 | 4c8b 0424 | 4c8b 4c24 | 0844 8b5c | 2410 488b | d8e9 04f9 | ffff 4889 
  0x00007f0d3877db64: 5c24 084c 

  0x00007f0d3877db68: ;   {metadata('ax/xz/fuzz/ExecutionResult$Success')}
  0x00007f0d3877db68: 8904 2448 | be20 5010 | d00c 7f00 | 0048 8b6c 

  0x00007f0d3877db78: ;   {runtime_call _new_instance_Java}
  0x00007f0d3877db78: 2418 90e8 

  0x00007f0d3877db7c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [24]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.ExecutionResult$Success::ofSavedState@0 (line 84)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@19 (line 20)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877db7c: 80ef 8dff 

  0x00007f0d3877db80: ;   {other}
  0x00007f0d3877db80: 0f1f 8400 | f011 0011 | 488b e8e9 | 38f9 ffff | bef6 ffff | ff48 8b6c | 2408 4c89 | 4424 0848 
  0x00007f0d3877dba0: 8954 2410 

  0x00007f0d3877dba4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dba4: 6666 90e8 

  0x00007f0d3877dba8: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*invokevirtual toSavedState {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@14 (line 38)
  0x00007f0d3877dba8: d409 81ff 

  0x00007f0d3877dbac: ;   {other}
  0x00007f0d3877dbac: 0f1f 8400 | 1c12 0012 | becc ffff | ff48 8b6c | 2408 4c8b | 5c24 184c | 895c 2408 | 4c89 4424 
  0x00007f0d3877dbcc: 184c 8954 

  0x00007f0d3877dbd0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dbd0: 2428 90e8 

  0x00007f0d3877dbd4: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.Tester::runBlock@11 (line 38)
  0x00007f0d3877dbd4: a809 81ff 

  0x00007f0d3877dbd8: ;   {other}
  0x00007f0d3877dbd8: 0f1f 8400 | 4812 0013 | bee4 ffff | ff48 8b6c | 2408 4c8b | 5c24 184c | 895c 2408 | 4c89 4424 
  0x00007f0d3877dbf8: 184c 8954 

  0x00007f0d3877dbfc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dbfc: 2428 90e8 

  0x00007f0d3877dc00: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.Tester::runBlock@11 (line 38)
  0x00007f0d3877dc00: 7c09 81ff 

  0x00007f0d3877dc04: ;   {other}
  0x00007f0d3877dc04: 0f1f 8400 | 7412 0014 | bede ffff | ff48 8b6c 

  0x00007f0d3877dc14: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dc14: 2418 90e8 

  0x00007f0d3877dc18: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*invokeinterface byteSize {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@19 (line 39)
  0x00007f0d3877dc18: 6409 81ff 

  0x00007f0d3877dc1c: ;   {other}
  0x00007f0d3877dc1c: 0f1f 8400 | 8c12 0015 | bede ffff | ff4c 8b5c | 2418 4c89 | 5c24 084c | 8954 2410 | 4c89 4c24 
  0x00007f0d3877dc3c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dc3c: 2066 90e8 

  0x00007f0d3877dc40: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop }
                      ;*invokevirtual acquire0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@48
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877dc40: 3c09 81ff 

  0x00007f0d3877dc44: ;   {other}
  0x00007f0d3877dc44: 0f1f 8400 | b412 0016 | becc ffff | ff48 8b6c | 2418 4889 

  0x00007f0d3877dc58: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dc58: 5c24 10e8 

  0x00007f0d3877dc5c: ; ImmutableOopMap {rbp=Oop [8]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess@26 (line 356)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::checkAddress@15 (line 81)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::get@14 (line 108)
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0112000::invokeStatic@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@52
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877dc5c: 2009 81ff 

  0x00007f0d3877dc60: ;   {other}
  0x00007f0d3877dc60: 0f1f 8400 | d012 0017 | bee4 ffff | ff4c 8b54 | 2418 4c89 

  0x00007f0d3877dc74: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dc74: 1424 90e8 

  0x00007f0d3877dc78: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkAccess@26 (line 356)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::checkAddress@15 (line 81)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::get@14 (line 108)
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0112000::invokeStatic@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@52
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877dc78: 0409 81ff 

  0x00007f0d3877dc7c: ;   {other}
  0x00007f0d3877dc7c: 0f1f 8400 | ec12 0018 | be66 ffff 

  0x00007f0d3877dc88: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dc88: ff66 90e8 

  0x00007f0d3877dc8c: ; ImmutableOopMap {rbp=NarrowOop [8]=Oop }
                      ;*invokevirtual justClose {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl::close@1 (line 242)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877dc8c: f008 81ff 

  0x00007f0d3877dc90: ;   {other}
  0x00007f0d3877dc90: 0f1f 8400 | 0013 0019 | becc ffff | ff48 8b6c | 2418 4889 | 5c24 084c | 894c 2410 

  0x00007f0d3877dcac: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dcac: 6666 90e8 

  0x00007f0d3877dcb0: ; ImmutableOopMap {rbp=Oop [16]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@16 (line 20)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877dcb0: cc08 81ff 

  0x00007f0d3877dcb4: ;   {other}
  0x00007f0d3877dcb4: 0f1f 8400 | 2413 001a | bee4 ffff | ff48 8b6c | 2418 4889 | 5c24 084c | 894c 2410 

  0x00007f0d3877dcd0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dcd0: 6666 90e8 

  0x00007f0d3877dcd4: ; ImmutableOopMap {rbp=Oop [16]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.tester.execution_result::state$slice@7 (line 57)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@16 (line 20)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877dcd4: a808 81ff 

  0x00007f0d3877dcd8: ;   {other}
  0x00007f0d3877dcd8: 0f1f 8400 | 4813 001b | bede ffff | ff48 8b6c | 2418 4889 | 5c24 084c | 8954 2410 | 4c89 4424 
  0x00007f0d3877dcf8: 1889 4c24 

  0x00007f0d3877dcfc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dcfc: 2c66 90e8 

  0x00007f0d3877dd00: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [44]=NarrowOop }
                      ;*invokevirtual acquire0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@87
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877dd00: 7c08 81ff 

  0x00007f0d3877dd04: ;   {other}
  0x00007f0d3877dd04: 0f1f 8400 | 7413 001c | 41b8 e008 | 0000 4d3b | c3bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed 
  0x00007f0d3877dd24: be45 ffff | ff4c 8954 | 2410 4c89 

  0x00007f0d3877dd30: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dd30: 7424 18e8 

  0x00007f0d3877dd34: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Bits::tryReserveMemory@15 (line 194)
                      ; - java.nio.Bits::reserveMemory@25 (line 117)
                      ; - java.nio.Buffer$2::reserveMemory@2 (line 910)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@54 (line 127)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877dd34: 4808 81ff 

  0x00007f0d3877dd38: ;   {other}
  0x00007f0d3877dd38: 0f1f 8400 | a813 001d | 4489 6c24 | 184c 8944 | 2410 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 
  0x00007f0d3877dd58: ;   {other}
  0x00007f0d3877dd58: ffd2 0f1f | 8400 0000 | 0000 4c8b | 4424 1044 | 8b6c 2418 | e9c0 f0ff | ff49 8bf7 | 49ba 00cb 
  0x00007f0d3877dd78: b84e 0d7f | 0000 41ff 

  0x00007f0d3877dd80: ;   {other}
  0x00007f0d3877dd80: d20f 1f84 | 0000 0000 | 00e9 a7f3 | ffff be45 | ffff ff4c | 8b54 2418 | 4c89 1424 | 4c89 5c24 
  0x00007f0d3877dda0: 184c 8944 

  0x00007f0d3877dda4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dda4: 2420 90e8 

  0x00007f0d3877dda8: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::release0@7 (line 71)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@150
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877dda8: d407 81ff 

  0x00007f0d3877ddac: ;   {other}
  0x00007f0d3877ddac: 0f1f 8400 | 1c14 001e | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d3877ddcc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877ddcc: ffff 90e8 

  0x00007f0d3877ddd0: ; ImmutableOopMap {[8]=Oop [24]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.AbstractMemorySegmentImpl::isAlignedForElement@17 (line 378)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::isAlignedForElement@8 (line 373)
                      ; - jdk.internal.foreign.LayoutPath::checkAlign@6 (line 267)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0109c00::invoke@21
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@15
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877ddd0: ac07 81ff 

  0x00007f0d3877ddd4: ;   {other}
  0x00007f0d3877ddd4: 0f1f 8400 | 4414 001f | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c89 | 4424 1044 | 895c 2418 
  0x00007f0d3877ddf4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877ddf4: 6666 90e8 

  0x00007f0d3877ddf8: ; ImmutableOopMap {[0]=Oop [16]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::justClose@16 (line 85)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@1 (line 242)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877ddf8: 8407 81ff 

  0x00007f0d3877ddfc: ;   {other}
  0x00007f0d3877ddfc: 0f1f 8400 | 6c14 0020 | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d3877de14: ;   {other}
  0x00007f0d3877de14: 0f1f 8400 | 0000 0000 | e992 f7ff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d3877de30: ;   {other}
  0x00007f0d3877de30: d20f 1f84 | 0000 0000 | 00e9 acf6 | ffff be45 | ffff ff4c | 8954 2410 | 4c89 7424 

  0x00007f0d3877de4c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877de4c: 1866 90e8 

  0x00007f0d3877de50: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@2 (line 119)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877de50: 2c07 81ff 

  0x00007f0d3877de54: ;   {other}
  0x00007f0d3877de54: 0f1f 8400 | c414 0021 | be45 ffff | ff4c 8954 | 2410 4c89 

  0x00007f0d3877de68: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877de68: 7424 18e8 

  0x00007f0d3877de6c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@8 (line 120)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877de6c: 1007 81ff 

  0x00007f0d3877de70: ;   {other}
  0x00007f0d3877de70: 0f1f 8400 | e014 0022 | be45 ffff | ff4c 8954 | 2410 4c89 

  0x00007f0d3877de84: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877de84: 7424 18e8 

  0x00007f0d3877de88: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Bits::reserveMemory@3 (line 111)
                      ; - java.nio.Buffer$2::reserveMemory@2 (line 910)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@54 (line 127)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877de88: f406 81ff 

  0x00007f0d3877de8c: ;   {other}
  0x00007f0d3877de8c: 0f1f 8400 | fc14 0023 | be45 ffff | ff4c 8954 | 2410 4c89 

  0x00007f0d3877dea0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dea0: 7424 18e8 

  0x00007f0d3877dea4: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Bits::tryReserveMemory@30 (line 195)
                      ; - java.nio.Bits::reserveMemory@25 (line 117)
                      ; - java.nio.Buffer$2::reserveMemory@2 (line 910)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@54 (line 127)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877dea4: d806 81ff 

  0x00007f0d3877dea8: ;   {other}
  0x00007f0d3877dea8: 0f1f 8400 | 1815 0024 | 4533 d249 | 3bc2 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d3877dec8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dec8: ffff 90e8 

  0x00007f0d3877decc: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::allocateMemory@28 (line 631)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@64 (line 129)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877decc: b006 81ff 

  0x00007f0d3877ded0: ;   {other}
  0x00007f0d3877ded0: 0f1f 8400 | 4015 0025 | be45 ffff | ff4c 8b54 | 2418 4c89 | 5424 104c | 895c 2418 | 4c8b 5424 
  0x00007f0d3877def0: 304c 8954 | 2420 4889 | 4424 284c | 894c 2438 | 4889 5c24 

  0x00007f0d3877df04: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877df04: 4066 90e8 

  0x00007f0d3877df08: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [56]=Oop [64]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.MemorySessionImpl::addInternal@1 (line 129)
                      ; - jdk.internal.foreign.MemorySessionImpl::addOrCleanupIfFail@2 (line 121)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@124 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877df08: 7406 81ff 

  0x00007f0d3877df0c: ;   {other}
  0x00007f0d3877df0c: 0f1f 8400 | 7c15 0026 | be45 ffff | ff4c 8b54 | 2418 4c89 | 5424 104c | 895c 2418 | 4c8b 5424 
  0x00007f0d3877df2c: 304c 8954 | 2420 4889 | 4424 2848 | 895c 2430 

  0x00007f0d3877df3c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877df3c: 6666 90e8 

  0x00007f0d3877df40: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [40]=Oop [48]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession$ConfinedResourceList::add@7 (line 99)
                      ; - jdk.internal.foreign.MemorySessionImpl::addInternal@9 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::addOrCleanupIfFail@2 (line 121)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@124 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877df40: 3c06 81ff 

  0x00007f0d3877df44: ;   {other}
  0x00007f0d3877df44: 0f1f 8400 | b415 0027 | be45 ffff | ff4c 8b5c | 2418 4c89 | 5c24 084c | 8954 2410 | 4c89 4c24 
  0x00007f0d3877df64: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877df64: 2066 90e8 

  0x00007f0d3877df68: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@44
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877df68: 1406 81ff 

  0x00007f0d3877df6c: ;   {other}
  0x00007f0d3877df6c: 0f1f 8400 | dc15 0028 | be45 ffff | ff48 8b6c | 2418 4c89 | 5424 084c | 894c 2418 | 4c89 4424 
  0x00007f0d3877df8c: 2844 895c 

  0x00007f0d3877df90: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877df90: 2430 90e8 

  0x00007f0d3877df94: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::acquire0@1 (line 61)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@48
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877df94: e805 81ff 

  0x00007f0d3877df98: ;   {other}
  0x00007f0d3877df98: 0f1f 8400 | 0816 0029 | be45 ffff | ff48 8b6c | 2418 4c89 | 5424 084c | 894c 2418 | 4c89 4424 
  0x00007f0d3877dfb8: 2044 895c 

  0x00007f0d3877dfbc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dfbc: 2428 90e8 

  0x00007f0d3877dfc0: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::acquire0@10 (line 62)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@48
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877dfc0: bc05 81ff 

  0x00007f0d3877dfc4: ;   {other}
  0x00007f0d3877dfc4: 0f1f 8400 | 3416 002a | be45 ffff | ff48 8b6c | 2418 4889 | 5c24 084c | 8954 2410 | 4c89 4424 
  0x00007f0d3877dfe4: 1889 4c24 

  0x00007f0d3877dfe8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877dfe8: 2c66 90e8 

  0x00007f0d3877dfec: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [44]=NarrowOop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@77
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877dfec: 9005 81ff 

  0x00007f0d3877dff0: ;   {other}
  0x00007f0d3877dff0: 0f1f 8400 | 6016 002b | be45 ffff | ff4c 8b54 | 2418 4c89 | 1424 4489 | 5c24 1048 | 894c 2418 
  0x00007f0d3877e010: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e010: 6666 90e8 

  0x00007f0d3877e014: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.misc.ScopedMemoryAccess::getByteInternal@5 (line 526)
                      ; - jdk.internal.misc.ScopedMemoryAccess::getByte@4 (line 516)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::get@43 (line 109)
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0112000::invokeStatic@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@52
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877e014: 6805 81ff 

  0x00007f0d3877e018: ;   {other}
  0x00007f0d3877e018: 0f1f 8400 | 8816 002c | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c89 

  0x00007f0d3877e030: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e030: 4424 10e8 

  0x00007f0d3877e034: ; ImmutableOopMap {[0]=Oop [16]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::justClose@1 (line 83)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@1 (line 242)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e034: 4805 81ff 

  0x00007f0d3877e038: ;   {other}
  0x00007f0d3877e038: 0f1f 8400 | a816 002d | be45 ffff | ff48 8b6c | 2408 4c89 | 4424 0844 | 895c 2414 

  0x00007f0d3877e054: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e054: 6666 90e8 

  0x00007f0d3877e058: ; ImmutableOopMap {rbp=Oop [8]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::justClose@20 (line 85)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@1 (line 242)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e058: 2405 81ff 

  0x00007f0d3877e05c: ;   {other}
  0x00007f0d3877e05c: 0f1f 8400 | cc16 002e | be45 ffff 

  0x00007f0d3877e068: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e068: ff66 90e8 

  0x00007f0d3877e06c: ; ImmutableOopMap {rbp=NarrowOop [8]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@7 (line 109)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e06c: 1005 81ff 

  0x00007f0d3877e070: ;   {other}
  0x00007f0d3877e070: 0f1f 8400 | e016 002f | 4533 db49 | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d3877e090: ffff 4c8b | 5c24 084c | 891c 244c | 8954 2410 

  0x00007f0d3877e0a0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e0a0: 6666 90e8 

  0x00007f0d3877e0a4: ; ImmutableOopMap {[0]=Oop [16]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::freeMemory@8 (line 920)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl$1::cleanup@7 (line 139)
                      ; - jdk.internal.foreign.MemorySessionImpl$ResourceList::cleanup@7 (line 272)
                      ; - jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@23 (line 112)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e0a4: d804 81ff 

  0x00007f0d3877e0a8: ;   {other}
  0x00007f0d3877e0a8: 0f1f 8400 | 1817 0030 | be45 ffff | ff4c 8b54 | 2418 4c89 | 1424 4c89 

  0x00007f0d3877e0c0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e0c0: 4424 18e8 

  0x00007f0d3877e0c4: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::release0@7 (line 71)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@160
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e0c4: b804 81ff 

  0x00007f0d3877e0c8: ;   {other}
  0x00007f0d3877e0c8: 0f1f 8400 | 3817 0031 | be45 ffff | ff4c 8b5c | 2418 4c89 | 1c24 4889 | 5c24 104c | 8954 2418 
  0x00007f0d3877e0e8: 4c89 4424 | 204c 894c | 2428 4889 

  0x00007f0d3877e0f4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e0f4: 4c24 38e8 

  0x00007f0d3877e0f8: ; ImmutableOopMap {[0]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@25 (line 205)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::acquire0@1 (line 61)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@87
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e0f8: 8404 81ff 

  0x00007f0d3877e0fc: ;   {other}
  0x00007f0d3877e0fc: 0f1f 8400 | 6c17 0032 | be45 ffff | ff4c 8b5c | 2418 4c89 | 1c24 4889 | 5c24 104c | 8954 2418 
  0x00007f0d3877e11c: 4c89 4424 | 204c 894c | 2428 4889 

  0x00007f0d3877e128: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e128: 4c24 30e8 

  0x00007f0d3877e12c: ; ImmutableOopMap {[0]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::acquire0@10 (line 62)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@87
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e12c: 5004 81ff 

  0x00007f0d3877e130: ;   {other}
  0x00007f0d3877e130: 0f1f 8400 | a017 0033 | be45 ffff | ff4c 8954 | 2410 4c89 

  0x00007f0d3877e144: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e144: 7424 18e8 

  0x00007f0d3877e148: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@2 (line 119)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877e148: 3404 81ff 

  0x00007f0d3877e14c: ;   {other}
  0x00007f0d3877e14c: 0f1f 8400 | bc17 0034 | be45 ffff | ff4c 8b44 | 2418 4c89 | 4424 104c | 895c 2418 | 4c8b 5c24 
  0x00007f0d3877e16c: 304c 895c | 2420 4889 | 4424 284c | 894c 2438 | 4889 5c24 | 404c 8954 

  0x00007f0d3877e184: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e184: 2448 90e8 

  0x00007f0d3877e188: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [40]=Oop [56]=Oop [64]=Oop [72]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.MemorySessionImpl::addInternal@1 (line 129)
                      ; - jdk.internal.foreign.MemorySessionImpl::addOrCleanupIfFail@2 (line 121)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@124 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877e188: f403 81ff 

  0x00007f0d3877e18c: ;   {other}
  0x00007f0d3877e18c: 0f1f 8400 | fc17 0035 | be45 ffff | ff4c 8b5c | 2418 4c89 | 5c24 084c | 8954 2410 | 4c89 4c24 
  0x00007f0d3877e1ac: 204c 8944 | 2430 4889 

  0x00007f0d3877e1b4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e1b4: 7c24 38e8 

  0x00007f0d3877e1b8: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::acquire0@1 (line 61)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@48
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e1b8: c403 81ff 

  0x00007f0d3877e1bc: ;   {other}
  0x00007f0d3877e1bc: 0f1f 8400 | 2c18 0036 | be45 ffff | ff4c 8b54 | 2418 4c89 | 1424 4489 | 5c24 1048 | 894c 2418 
  0x00007f0d3877e1dc: 4c89 4424 

  0x00007f0d3877e1e0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e1e0: 2066 90e8 

  0x00007f0d3877e1e4: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=NarrowOop [32]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.misc.ScopedMemoryAccess::getByteInternal@5 (line 526)
                      ; - jdk.internal.misc.ScopedMemoryAccess::getByte@4 (line 516)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::get@43 (line 109)
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0112000::invokeStatic@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@52
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877e1e4: 9803 81ff 

  0x00007f0d3877e1e8: ;   {other}
  0x00007f0d3877e1e8: 0f1f 8400 | 5818 0037 | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c89 | 4424 104c | 895c 2418 
  0x00007f0d3877e208: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e208: 6666 90e8 

  0x00007f0d3877e20c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [24]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::justClose@1 (line 83)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@1 (line 242)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e20c: 7003 81ff 

  0x00007f0d3877e210: ;   {other}
  0x00007f0d3877e210: 0f1f 8400 | 8018 0038 | be45 ffff | ff4c 8b5c | 2418 4c89 | 1c24 4889 | 5c24 104c | 8954 2418 
  0x00007f0d3877e230: 4c89 4424 | 204c 894c | 2428 4889 | 4c24 3848 | 897c 2440 

  0x00007f0d3877e244: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e244: 6666 90e8 

  0x00007f0d3877e248: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.MemorySessionImpl::checkValidStateRaw@14 (line 202)
                      ; - jdk.internal.foreign.MemorySessionImpl::checkValidState@1 (line 217)
                      ; - jdk.internal.foreign.ConfinedSession::acquire0@1 (line 61)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@87
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e248: 3403 81ff 

  0x00007f0d3877e24c: ;   {other}
  0x00007f0d3877e24c: 0f1f 8400 | bc18 0039 | bec6 ffff | ff4c 8904 

  0x00007f0d3877e25c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e25c: 2466 90e8 

  0x00007f0d3877e260: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*invokevirtual cleanup {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl$ResourceList::cleanup@7 (line 272)
                      ; - jdk.internal.foreign.ConfinedSession$ConfinedResourceList::cleanup@23 (line 112)
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e260: 1c03 81ff 

  0x00007f0d3877e264: ;   {other}
  0x00007f0d3877e264: 0f1f 8400 | d418 003a | 4c8b c541 | 8b68 144c | 8bdd 49c1 | e303 4c8b | 0c24 4d3b | cb75 7141 
  0x00007f0d3877e284: ff48 0c4c | 8b44 2410 

  0x00007f0d3877e28c: ; implicit exception: dispatches to 0x00007f0d3877e2a0
  0x00007f0d3877e28c: 418b 6814 | 4c8b dd49 | c1e3 034d | 3bcb 752c | 41ff 480c | be23 0000 | 0048 8b6c | 2418 4c8b 
  0x00007f0d3877e2ac: 5c24 084c | 891c 2448 | 8944 2408 

  0x00007f0d3877e2b8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e2b8: 6666 90e8 

  0x00007f0d3877e2bc: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.tester.slave_h::do_test@18 (line 233)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e2bc: c002 81ff 

  0x00007f0d3877e2c0: ;   {other}
  0x00007f0d3877e2c0: 0f1f 8400 | 3019 003b | be45 ffff | ff4c 8b5c | 2418 4c89 | 1c24 4889 | 4424 104c | 8944 2418 
  0x00007f0d3877e2e0: 4c89 4c24 

  0x00007f0d3877e2e4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e2e4: 2066 90e8 

  0x00007f0d3877e2e8: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::release0@7 (line 71)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@201
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e2e8: 9402 81ff 

  0x00007f0d3877e2ec: ;   {other}
  0x00007f0d3877e2ec: 0f1f 8400 | 5c19 003c | be45 ffff | ff4c 8b5c | 2418 4c89 | 1c24 4889 | 4424 184c | 8944 2420 
  0x00007f0d3877e30c: 4c89 4c24 

  0x00007f0d3877e310: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e310: 2866 90e8 

  0x00007f0d3877e314: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.ConfinedSession::release0@7 (line 71)
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@191
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e314: 6802 81ff 

  0x00007f0d3877e318: ;   {other}
  0x00007f0d3877e318: 0f1f 8400 | 8819 003d | bef6 ffff | ff48 8b2c | 244c 8b54 | 2408 4c89 | 1424 4c8b | 5424 184c 
  0x00007f0d3877e338: 8954 2408 | 4c89 5c24 | 104c 8b54 | 2430 4c89 | 5424 1848 | 8944 2420 | 4889 5c24 

  0x00007f0d3877e354: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e354: 3066 90e8 

  0x00007f0d3877e358: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [48]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl::addInternal@9 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::addOrCleanupIfFail@2 (line 121)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeNativeSegment@124 (line 136)
                      ; - jdk.internal.foreign.MemorySessionImpl::allocate@8 (line 158)
                      ; - java.lang.foreign.Arena::allocate@11 (line 273)
                      ; - java.lang.foreign.SegmentAllocator::allocate@18 (line 318)
                      ; - ax.xz.fuzz.tester.execution_result::allocate@4 (line 60)
                      ; - ax.xz.fuzz.Tester::runBlock@5 (line 37)
  0x00007f0d3877e358: 2402 81ff 

  0x00007f0d3877e35c: ;   {other}
  0x00007f0d3877e35c: 0f1f 8400 | cc19 003e | bef6 ffff | ff48 8b6c 

  0x00007f0d3877e36c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e36c: 2418 90e8 

  0x00007f0d3877e370: ; ImmutableOopMap {rbp=Oop [0]=Oop }
                      ;*invokeinterface byteSize {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@19 (line 39)
  0x00007f0d3877e370: 0c02 81ff 

  0x00007f0d3877e374: ;   {other}
  0x00007f0d3877e374: 0f1f 8400 | e419 003f | bef6 ffff | ff48 8b6c | 2418 4c89 | 5424 084c | 894c 2418 

  0x00007f0d3877e390: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e390: 6666 90e8 

  0x00007f0d3877e394: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop }
                      ;*invokevirtual acquire0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@48
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e394: e801 81ff 

  0x00007f0d3877e398: ;   {other}
  0x00007f0d3877e398: 0f1f 8400 | 081a 0040 | be5c ffff | ff48 8b6c | 2418 4c89 | 0c24 4889 

  0x00007f0d3877e3b0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e3b0: 4c24 08e8 

  0x00007f0d3877e3b4: ; ImmutableOopMap {rbp=Oop [0]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.ScopedMemoryAccess::getByteInternal@1 (line 525)
                      ; - jdk.internal.misc.ScopedMemoryAccess::getByte@4 (line 516)
                      ; - java.lang.invoke.VarHandleSegmentAsBytes::get@43 (line 109)
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0112000::invokeStatic@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0113400::invoke@52
                      ; - java.lang.invoke.VarHandleGuards::guard_L_I@70 (line 112)
                      ; - ax.xz.fuzz.tester.execution_result::faulted$get@4 (line 36)
                      ; - ax.xz.fuzz.ExecutionResult::ofStruct@1 (line 17)
                      ; - ax.xz.fuzz.Tester::runBlock@29 (line 41)
  0x00007f0d3877e3b4: c801 81ff 

  0x00007f0d3877e3b8: ;   {other}
  0x00007f0d3877e3b8: 0f1f 8400 | 281a 0041 | bef6 ffff 

  0x00007f0d3877e3c4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e3c4: ff66 90e8 

  0x00007f0d3877e3c8: ; ImmutableOopMap {[8]=Oop }
                      ;*invokevirtual close {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e3c8: b401 81ff 

  0x00007f0d3877e3cc: ;   {other}
  0x00007f0d3877e3cc: 0f1f 8400 | 3c1a 0042 | bef6 ffff 

  0x00007f0d3877e3d8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e3d8: ff66 90e8 

  0x00007f0d3877e3dc: ; ImmutableOopMap {[8]=Oop }
                      ;*invokevirtual cleanup {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.MemorySessionImpl::close@8 (line 243)
                      ; - jdk.internal.foreign.MemorySessionImpl$1::close@4 (line 88)
                      ; - ax.xz.fuzz.Tester::runBlock@39 (line 42)
  0x00007f0d3877e3dc: a001 81ff 

  0x00007f0d3877e3e0: ;   {other}
  0x00007f0d3877e3e0: 0f1f 8400 | 501a 0043 | bef6 ffff | ff48 8b6c | 2418 4889 | 5c24 084c | 8954 2410 | 4c89 4424 
  0x00007f0d3877e400: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d3877e400: 1866 90e8 

  0x00007f0d3877e404: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop }
                      ;*invokevirtual acquire0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.abi.DowncallStub/0x00007f0cd010d000::invoke@87
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd010d400::invokeStatic@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0118000::invoke@67
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0111400::invokeExact_MT@23
                      ; - ax.xz.fuzz.tester.slave_h::do_test@10 (line 231)
                      ; - ax.xz.fuzz.Tester::runBlock@25 (line 39)
  0x00007f0d3877e404: 7801 81ff 

  0x00007f0d3877e408: ;   {other}
  0x00007f0d3877e408: 0f1f 8400 | 781a 0044 | 488b f0eb | 5b48 8bf5 

  0x00007f0d3877e418: ;   {optimized virtual_call}
  0x00007f0d3877e418: 488b d0e8 

  0x00007f0d3877e41c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@66 (line 35)
  0x00007f0d3877e41c: 6073 80ff 

  0x00007f0d3877e420: ;   {other}
  0x00007f0d3877e420: 0f1f 8400 | 901a 0045 | eb3e eb21 | eb1f 488b | e8eb 22eb | 13eb 11eb | 02eb 0048 | 8bf0 eb30 
  0x00007f0d3877e440: eb0b eb09 | eb27 eb00 | 488b e8eb | 0848 8be8 | eb03 488b | e848 8b74 

  0x00007f0d3877e458: ;   {optimized virtual_call}
  0x00007f0d3877e458: 2418 90e8 

  0x00007f0d3877e45c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Tester::runBlock@53 (line 35)
  0x00007f0d3877e45c: 2073 80ff 

  0x00007f0d3877e460: ;   {other}
  0x00007f0d3877e460: 0f1f 8400 | d01a 0046 | 488b f5eb | 0348 8bf0 | 4883 c460 

  0x00007f0d3877e474: ;   {runtime_call _rethrow_Java}
  0x00007f0d3877e474: 5de9 86bd 

  0x00007f0d3877e478: ;   {internal_word}
  0x00007f0d3877e478: 8eff 49ba | aed6 7738 | 0d7f 0000 | 4d89 9768 

  0x00007f0d3877e488: ;   {runtime_call SafepointBlob}
  0x00007f0d3877e488: 0400 00e9 | 70ef 80ff 

  0x00007f0d3877e490: ;   {runtime_call StubRoutines (final stubs)}
  0x00007f0d3877e490: e84b ee7e | ffe9 a0e8 | ffff f4f4 | f4f4 f4f4 
[Stub Code]
  0x00007f0d3877e4a0: ;   {no_reloc}
  0x00007f0d3877e4a0: 48bb 0000 | 0000 0000 

  0x00007f0d3877e4a8: ;   {runtime_call}
  0x00007f0d3877e4a8: 0000 e9fb 

  0x00007f0d3877e4ac: ;   {static_stub}
  0x00007f0d3877e4ac: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d3877e4b8: ;   {runtime_call}
  0x00007f0d3877e4b8: 00e9 fbff 

  0x00007f0d3877e4bc: ;   {static_stub}
  0x00007f0d3877e4bc: ffff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d3877e4c8: ;   {runtime_call}
  0x00007f0d3877e4c8: e9fb ffff 

  0x00007f0d3877e4cc: ;   {static_stub}
  0x00007f0d3877e4cc: ff48 bb00 | 0000 0000 

  0x00007f0d3877e4d4: ;   {runtime_call}
  0x00007f0d3877e4d4: 0000 00e9 | fbff ffff 

  0x00007f0d3877e4dc: ;   {static_stub}
  0x00007f0d3877e4dc: 48bb b0bb | 6fc4 0c7f 

  0x00007f0d3877e4e4: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d3877e4e4: 0000 e998 

  0x00007f0d3877e4e8: ;   {static_stub}
  0x00007f0d3877e4e8: c280 ff48 | bb00 0000 | 0000 0000 

  0x00007f0d3877e4f4: ;   {runtime_call}
  0x00007f0d3877e4f4: 00e9 fbff 

  0x00007f0d3877e4f8: ;   {static_stub}
  0x00007f0d3877e4f8: ffff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d3877e504: ;   {runtime_call}
  0x00007f0d3877e504: e9fb ffff 

  0x00007f0d3877e508: ;   {static_stub}
  0x00007f0d3877e508: ff48 bb00 | 0000 0000 

  0x00007f0d3877e510: ;   {runtime_call}
  0x00007f0d3877e510: 0000 00e9 | fbff ffff 

  0x00007f0d3877e518: ;   {static_stub}
  0x00007f0d3877e518: 48bb 0000 | 0000 0000 

  0x00007f0d3877e520: ;   {runtime_call}
  0x00007f0d3877e520: 0000 e9fb 

  0x00007f0d3877e524: ;   {static_stub}
  0x00007f0d3877e524: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d3877e530: ;   {runtime_call}
  0x00007f0d3877e530: 00e9 fbff 

  0x00007f0d3877e534: ;   {runtime_call ExceptionBlob}
  0x00007f0d3877e534: ffff e945 | ef8d ffe8 | 0000 0000 | 4883 2c24 

  0x00007f0d3877e544: ;   {runtime_call DeoptimizationBlob}
  0x00007f0d3877e544: 05e9 5603 | 81ff f4f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)   69837 4054 % !   4       ax.xz.fuzz.Main::main @ 562 (966 bytes)
 total in heap  [0x00007f0d387c0f90,0x00007f0d387cd518] = 50568
 relocation     [0x00007f0d387c10e8,0x00007f0d387c17b0] = 1736
 constants      [0x00007f0d387c17c0,0x00007f0d387c17e0] = 32
 main code      [0x00007f0d387c17e0,0x00007f0d387c81c8] = 27112
 stub code      [0x00007f0d387c81c8,0x00007f0d387c83c0] = 504
 oops           [0x00007f0d387c83c0,0x00007f0d387c8528] = 360
 metadata       [0x00007f0d387c8528,0x00007f0d387c8aa8] = 1408
 scopes data    [0x00007f0d387c8aa8,0x00007f0d387cbd88] = 13024
 scopes pcs     [0x00007f0d387cbd88,0x00007f0d387ccb08] = 3456
 dependencies   [0x00007f0d387ccb08,0x00007f0d387ccba8] = 160
 handler table  [0x00007f0d387ccba8,0x00007f0d387cd400] = 2136
 nul chk table  [0x00007f0d387cd400,0x00007f0d387cd518] = 280


[Constant Pool]
             Address          hex4                    hex8      
  0x00007f0d387c17c0:   0x00000000      0x408f400000000000      
  0x00007f0d387c17c4:   0x408f4000                              
  0x00007f0d387c17c8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f0d387c17cc:   0xf4f4f4f4                              
  0x00007f0d387c17d0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f0d387c17d4:   0xf4f4f4f4                              
  0x00007f0d387c17d8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00007f0d387c17dc:   0xf4f4f4f4                              

[MachCode]
[Verified Entry Point]
  # {method} {0x00007f0cc440b6d0} 'main' '([Ljava/lang/String;)V' in 'ax/xz/fuzz/Main'
  0x00007f0d387c17e0: ;   {no_reloc}
  0x00007f0d387c17e0: e84b 8e8f | 1666 6666 | 0f1f 8400 | 0000 0000 | 8984 2400 | c0fe ff55 | 4881 ec40 | 0100 0090 
  0x00007f0d387c1800: 4181 7f20 | 0100 0000 | 0f85 ae69 | 0000 488b | 9e88 0000 | 004c 8bae | 8000 0000 | 448b 5610 
  0x00007f0d387c1820: 4489 9424 | a800 0000 | 4c8b 7678 | 4c8b 5670 | 4c89 5424 | 384c 8b56 | 584c 8954 | 2440 4c8b 
  0x00007f0d387c1840: 5650 4c89 | 5424 484c | 8b56 484c | 8954 2450 | 4c8b 5640 | 4c89 5424 | 584c 8b56 | 384c 8954 
  0x00007f0d387c1860: 2460 4c8b | 5628 4c89 | 5424 6848 | 8b6e 1848 | 896c 2430 | 4c8b 96a8 | 0000 004c | 8954 2410 
  0x00007f0d387c1880: 4c8b 96a0 | 0000 004c | 8994 2480 | 0000 004c | 8b96 9000 | 0000 4c89 | 9424 8800 | 0000 448b 
  0x00007f0d387c18a0: 5e68 4489 | 5c24 7c44 | 8b56 6044 | 8994 2490 | 0000 004c | 8b56 304c | 8954 2470 | 448b 5e20 
  0x00007f0d387c18c0: 4489 9c24 | 9400 0000 | 4c8b 9698 | 0000 004c | 8994 2498 | 0000 0048 | 8bfe 49ba 

  0x00007f0d387c18dc: ;   {no_reloc}
  0x00007f0d387c18dc: 9098 174f | 0d7f 0000 

  0x00007f0d387c18e4: ;   {other}
  0x00007f0d387c18e4: 41ff d20f | 1f84 0000 | 0000 0048 | 85db 0f84 | 6f46 0000 | 448b 5b08 

  0x00007f0d387c18fc: ;   {metadata('java/util/Random')}
  0x00007f0d387c18fc: 4181 fb80 | 2b18 000f | 8597 5500 | 004c 8bd3 | 4c89 9424 | 0801 0000 | 4d85 ed0f | 845a 4600 
  0x00007f0d387c191c: 0045 8b55 

  0x00007f0d387c1920: ;   {metadata('ax/xz/fuzz/ResourcePartition'[])}
  0x00007f0d387c1920: 0841 81fa | 10d1 0c01 | 0f85 7255 | 0000 4d8b | d54c 8994 | 24a0 0000 | 004d 85f6 | 0f84 4546 
  0x00007f0d387c1940: 0000 458b 

  0x00007f0d387c1944: ;   {metadata('ax/xz/fuzz/BlockGenerator')}
  0x00007f0d387c1944: 5e08 4181 | fbf8 d60c | 010f 854d | 5500 004d | 8bd6 4c89 | 9424 1001 | 0000 4c8b | 5424 384d 
  0x00007f0d387c1964: 85d2 0f84 | 2b46 0000 | 458b 5208 

  0x00007f0d387c1970: ;   {metadata('ax/xz/fuzz/BlockGenerator')}
  0x00007f0d387c1970: 4181 faf8 | d60c 010f | 8523 5500 | 004c 8b54 | 2438 4c89 | 9424 1801 | 0000 4c8b | 5424 404d 
  0x00007f0d387c1990: 85d2 0f84 | 0f46 0000 | 458b 5a08 

  0x00007f0d387c199c: ;   {metadata('java/time/Instant')}
  0x00007f0d387c199c: 4181 fb68 | aa26 000f | 85f7 5400 | 004c 8994 | 2420 0100 | 004c 8b54 | 2448 4d85 | d20f 84f8 
  0x00007f0d387c19bc: 4500 0045 

  0x00007f0d387c19c0: ;   {metadata('java/time/Instant')}
  0x00007f0d387c19c0: 8b52 0841 | 81fa 68aa | 2600 0f85 | d054 0000 | 4c8b 5424 | 484c 8994 | 24b0 0000 

  0x00007f0d387c19dc: ;   {metadata('ax/xz/fuzz/BasicBlock'[])}
  0x00007f0d387c19dc: 0049 b8a0 | 7410 d00c | 7f00 004c | 8b54 2450 | 4d85 d20f | 84d2 4500 | 0045 8b5a | 0849 ba00 
  0x00007f0d387c19fc: 0000 cf0c | 7f00 004d | 03d3 4d8b | 5240 4d3b | d00f 858d | 5400 004c | 8b54 2450 | 4c89 9424 
  0x00007f0d387c1a1c: b800 0000 | 4c8b 5424 | 584d 85d2 | 0f84 a945 | 0000 458b | 5208 49bb | 0000 00cf | 0c7f 0000 
  0x00007f0d387c1a3c: 4d03 da4d | 8b53 404d | 3bd0 0f85 | 5454 0000 | 4c8b 5424 | 584c 8994 | 24c0 0000 | 004c 8b54 
  0x00007f0d387c1a5c: 2460 4d85 | d20f 8480 | 4500 0045 

  0x00007f0d387c1a68: ;   {metadata('ax/xz/fuzz/TestCase$Branch'[])}
  0x00007f0d387c1a68: 8b5a 0841 | 81fb e87a | 1001 0f85 | 2854 0000 | 4c89 9424 | c800 0000 | 4c8b 5424 | 684d 85d2 
  0x00007f0d387c1a88: 0f84 6945 | 0000 458b 

  0x00007f0d387c1a90: ;   {metadata('ax/xz/fuzz/TestCase')}
  0x00007f0d387c1a90: 5208 4181 | fa00 9c0f | 010f 8501 | 5400 004c | 8b54 2468 | 4c89 9424 | d000 0000 | 4885 ed0f 
  0x00007f0d387c1ab0: 8452 4500 | 0044 8b5d 

  0x00007f0d387c1ab8: ;   {metadata('ax/xz/fuzz/InterleavedBlock'[])}
  0x00007f0d387c1ab8: 0841 81fb | 202a 1301 | 0f85 da53 | 0000 4c8b | d54c 8994 | 2400 0100 | 0045 33d2 | 490f ca4c 
  0x00007f0d387c1ad8: 8954 2418 | e911 1500 | 0049 8bf7 | 49ba 20cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c1af0: ;   {other}
  0x00007f0d387c1af0: d20f 1f84 | 0000 0000 | 004d 8b97 

  0x00007f0d387c1afc: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@593 (line 74)
  0x00007f0d387c1afc: 5804 0000 

  0x00007f0d387c1b00: ;   {poll}
  0x00007f0d387c1b00: 4185 02e9 | ea14 0000 | 0f1f 8400 | 0000 0000 | 458b c34c | 8b94 24e8 | 0000 0043 | 8b4c 8210 
  0x00007f0d387c1b20: ; implicit exception: dispatches to 0x00007f0d387c5412
  0x00007f0d387c1b20: 458b 5ccc | 0c45 8d53 | f945 85d2 | 0f8c 823c | 0000 4183 | fb07 0f84 | d138 0000 | 4183 fa38 
  0x00007f0d387c1b40: 0f86 763c | 0000 4c8b | 5424 184d | 8954 cc10 | 4c8b 9424 | e800 0000 | 478b 5482 | 144c 8b5c 
  0x00007f0d387c1b60: 2418 4d89 | 5ccc 184d | 895c cc20 | 4d89 5ccc | 284d 895c | cc30 4d89 | 5ccc 384d | 895c cc40 
  0x00007f0d387c1b80: 4d89 5ccc | 4845 85d2 | 0f84 3a39 | 0000 478b | 5cd4 0c41 | 8d4b f985 | c90f 8c25 | 3c00 0041 
  0x00007f0d387c1ba0: 83fb 070f | 8427 3900 | 0083 f938 | 0f86 1a3c | 0000 4c8b | 5c24 184f | 895c d410 | 4f89 5cd4 
  0x00007f0d387c1bc0: 184f 895c | d420 4f89 | 5cd4 284f | 895c d430 | 4f89 5cd4 | 384f 895c | d440 4f89 | 5cd4 484d 
  0x00007f0d387c1be0: 8b97 5804 | 0000 458d 

  0x00007f0d387c1be8: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.CPUState$VectorRegisters::filledWith@62 (line 99)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
                      ;   {poll}
  0x00007f0d387c1be8: 5802 4185 | 0241 83fb | 1f0f 8c19 | ffff ff41 | 83fb 207d | 7841 83c0 | 0266 6690 | 4c8b 9424 
  0x00007f0d387c1c08: e800 0000 | 478b 5482 | 1047 8b5c | d40c 418d | 4bf9 85c9 | 0f8c f337 | 0000 4183 | fb07 0f84 
  0x00007f0d387c1c28: e937 0000 | 83f9 380f | 86e0 3700 | 004c 8b5c | 2418 4f89 | 5cd4 104f | 895c d418 | 4f89 5cd4 
  0x00007f0d387c1c48: 204f 895c | d428 4f89 | 5cd4 304f | 895c d438 | 4f89 5cd4 | 404f 895c | d448 4d8b | 9758 0400 
  0x00007f0d387c1c68: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.CPUState$VectorRegisters::filledWith@62 (line 99)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c1c68: 0041 ffc0 

  0x00007f0d387c1c6c: ;   {poll}
  0x00007f0d387c1c6c: 4185 0241 | 83f8 207c | 8f4d 8b87 | b801 0000 | 4d8b d049 | 83c2 104d | 3b97 c801 | 0000 0f83 
  0x00007f0d387c1c8c: ac36 0000 | 4d89 97b8 | 0100 0041 | 0f0d 8ac0 | 0000 0049 | c700 0100 

  0x00007f0d387c1ca4: ;   {metadata('ax/xz/fuzz/CPUState$VectorRegisters')}
  0x00007f0d387c1ca4: 0000 41c7 | 4008 60b4 | 0f01 4c8b | 9424 e800 | 0000 4d8b | da49 c1eb | 0345 8958 | 0c4c 8904 
  0x00007f0d387c1cc4: 244d 8b87 | b801 0000 | 4d8b d049 | 83c2 504d | 3b97 c801 | 0000 0f83 | 7c36 0000 | 4d89 97b8 
  0x00007f0d387c1ce4: 0100 0041 | 0f0d 8ac0 | 0000 0049 | c700 0100 | 0000 410f | 0d8a 0001 

  0x00007f0d387c1cfc: ;   {metadata({type array long})}
  0x00007f0d387c1cfc: 0000 41c7 | 4008 802a | 0000 410f | 0d8a 4001 | 0000 41c7 | 400c 0800 | 0000 410f | 0d8a 8001 
  0x00007f0d387c1d1c: 0000 4d8b | d049 83c2 | 10c5 fdef | c0c4 c17e | 7f02 c4c1 | 7e7f 4220 | 4c89 4424 | 084d 8baf 
  0x00007f0d387c1d3c: b801 0000 | 4d8b d549 | 83c2 104d | 3b97 c801 | 0000 0f83 | 2c36 0000 | 4d89 97b8 | 0100 0041 
  0x00007f0d387c1d5c: 0f0d 8ac0 | 0000 0049 | c745 0001 

  0x00007f0d387c1d68: ;   {metadata('ax/xz/fuzz/CPUState$MMXRegisters')}
  0x00007f0d387c1d68: 0000 0041 | c745 0868 | b60f 014c | 8bdd 49c1 | eb03 4c8b | 1424 498b | da48 c1eb | 034c 8b54 
  0x00007f0d387c1d88: 2408 49c1 | ea03 4589 | 550c 4c8b | 9424 a800 | 0000 4589 | 5a0c 4d8b | f549 c1ee | 034c 8bd5 
  0x00007f0d387c1da8: 4c8b 9c24 | a800 0000 | 4d33 d349 | c1ea 164d | 85d2 741a | 49c1 eb09 | 48bf 0000 | a02c 0d7f 
  0x00007f0d387c1dc8: 0000 4903 | fb80 3f02 | 0f85 452e | 0000 4180 | 7f40 000f | 8505 2c00 | 004c 8b94 | 24a8 0000 
  0x00007f0d387c1de8: 0041 895a | 184c 8b14 | 244c 8b9c | 24a8 0000 | 004d 33d3 | 49c1 ea16 | 4d85 d274 | 1a49 c1eb 
  0x00007f0d387c1e08: 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fb 803f | 020f 8560 | 2d00 0041 | 807f 4000 | 0f85 7d2b 
  0x00007f0d387c1e28: 0000 4c8b | 9424 a800 | 0000 4589 | 721c 4d8b | d54c 8b9c | 24a8 0000 | 004d 33d3 | 49c1 ea16 
  0x00007f0d387c1e48: 4d85 d274 | 1a49 c1eb | 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fb 803f | 020f 8566 | 2d00 004c 
  0x00007f0d387c1e68: ;   {no_reloc}
  0x00007f0d387c1e68: 8b94 24a8 | 0000 004d | 8962 104c | 8b94 24f0 | 0000 0045 | 8b5a 184c | 8b94 24d8 | 0000 004d 
  0x00007f0d387c1e88: 8b42 104d | 63d3 4c89 | 9424 e800 | 0000 4d2b | c245 85db | 0f8e 0e28 | 0000 4983 | c001 4d85 
  0x00007f0d387c1ea8: c00f 8c41 | 3d00 004d | 85c0 0f86 | c03d 0000 | 498b 97b8 | 0100 004c | 8b94 24d8 | 0000 0045 
  0x00007f0d387c1ec8: 0fb6 5a0c | 4489 1c24 | 4c8b d249 | 83c2 284c | 8b9c 24d8 | 0000 0041 | 8b6b 184d | 3b97 c801 
  0x00007f0d387c1ee8: 0000 0f83 | b034 0000 | 4d89 97b8 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c702 0100 | 0000 4c8b 
  0x00007f0d387c1f08: d249 83c2 

  0x00007f0d387c1f0c: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d387c1f0c: 10c7 4208 | e89f 0501 | 4489 620c | c5fd efc0 | 41bb 0700 | 0000 c4c1 | 7892 fb62 | d1fe 2f7f 
  0x00007f0d387c1f2c: 024c 8b94 | 24e8 0000 | 004c 8952 | 1044 8b1c | 2444 885a | 0c89 6a18 | 4c8b 9424 | d800 0000 
  0x00007f0d387c1f4c: 4d8b 5220 | 4c89 5220 | 488b b424 | a800 0000 

  0x00007f0d387c1f5c: ;   {static_call}
  0x00007f0d387c1f5c: 6666 90e8 

  0x00007f0d387c1f60: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic runBlock {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@664 (line 82)
  0x00007f0d387c1f60: bcad fbff 

  0x00007f0d387c1f64: ;   {other}
  0x00007f0d387c1f64: 0f1f 8400 | d40f 0003 | 4889 8424 | a800 0000 

  0x00007f0d387c1f74: ; implicit exception: dispatches to 0x00007f0d387c7a37
  0x00007f0d387c1f74: 448b 5008 | 4489 1424 | 49bb 0000 | 00cf 0c7f | 0000 4d03 | da4c 895c | 2408 4d8b | 5320 4c89 
  0x00007f0d387c1f94: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c1f94: 5424 2049 | bb90 5810 | d00c 7f00 | 004d 3bd3 | 0f85 cb1d | 0000 448b | 5424 7c41 | ffc2 4489 
  0x00007f0d387c1fb4: ;   {oop(a 'java/lang/Class'{0x00000007ffca91c0} = 'java/time/Clock')}
  0x00007f0d387c1fb4: 5424 7c49 | bac0 91ca | ff07 0000 | 004d 8b52 | 784c 8994 | 24e8 0000 | 0049 8bf2 

  0x00007f0d387c1fd0: ;   {static_call}
  0x00007f0d387c1fd0: 6666 90e8 

  0x00007f0d387c1fd4: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic getNanoTimeAdjustment {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Clock::currentInstant@5 (line 498)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c1fd4: e867 f3ff 

  0x00007f0d387c1fd8: ;   {other}
  0x00007f0d387c1fd8: 0f1f 8400 | 4810 0004 | 4c8b c848 | 83f8 ff0f | 84eb 4300 | 0048 b8b3 | 94d6 26e8 | 0b2e 1149 
  0x00007f0d387c1ff8: f7e9 4d8b | d149 c1fa | 3f48 c1fa | 1a49 2bd2 | 4d8b d149 | 81f2 00ca | 9a3b 4d85 | d20f 8c25 
  0x00007f0d387c2018: 4400 0048 | 8b84 24e8 | 0000 0048 | 03c2 0f80 | 833a 0000 | 4c8b c24c | 0384 24e8 | 0000 004c 
  0x00007f0d387c2038: 69d2 00ca | 9a3b 4d2b | ca45 8bc9 | 4d63 d14d | 0bd0 4d85 | d20f 8499 | 4400 0049 | ba00 1464 
  0x00007f0d387c2058: 1410 e38f | ff4d 3bc2 | 0f8c c63d | 0000 49ba | ff78 95fa | d21c 7000 | 4d3b c20f | 8fd7 4400 
  0x00007f0d387c2078: 004c 8b94 | 24b0 0000 | 004d 8b52 | 1049 8bc2 | 4883 c001 | 0f80 8e3a | 0000 4c8b | 9c24 b000 
  0x00007f0d387c2098: 0000 418b | 5b0c 4983 | c201 4c63 | db4d 0bda | 4d85 db0f | 8403 4500 | 0049 bb00 | 1464 1410 
  0x00007f0d387c20b8: e38f ff4d | 3bd3 0f8c | cc3d 0000 | 49bb ff78 | 95fa d21c | 7000 4d3b | d30f 8f61 

  0x00007f0d387c20d4: ;   {no_reloc}
  0x00007f0d387c20d4: 4500 004d | 3bc2 0f8d | cf15 0000 | 4c8b 5424 | 704d 85d2 | 0f84 3a01 | 0000 458b | 5208 48be 
  0x00007f0d387c20f4: 0000 00cf | 0c7f 0000 | 4903 f24c 

  0x00007f0d387c2100: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c2100: 8b5e 2049 | b890 5810 | d00c 7f00 | 004d 3bd8 | 0f85 a61c | 0000 41bb | 0100 0000 | 4c8b 4424 
  0x00007f0d387c2120: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c2120: 2049 b990 | 5810 d00c | 7f00 004d | 3bc1 0f85 | ba1c 0000 | b901 0000 | 0044 3bd9 | 0f85 ba46 
  0x00007f0d387c2140: ;   {metadata('ax/xz/fuzz/ExecutionResult$Success')}
  0x00007f0d387c2140: 0000 4181 | fa20 5010 | 010f 85d9 | 0000 004c | 8b54 2470 | 4c89 9424 | e800 0000 | 4c8b 9c24 
  0x00007f0d387c2160: a800 0000 | 4d3b d30f | 84df 4600 | 0044 8b1c 

  0x00007f0d387c2170: ;   {metadata('ax/xz/fuzz/ExecutionResult$Success')}
  0x00007f0d387c2170: 2441 81fb | 2050 1001 | 0f85 fa56 | 0000 488b | ac24 a800 | 0000 458b | 520c 448b | 450c 453b 
  0x00007f0d387c2190: d00f 8491 | 0000 0045 | 85d2 0f84 | 104c 0000 | 498b d048 | c1e2 034b 

  0x00007f0d387c21a8: ;   {optimized virtual_call}
  0x00007f0d387c21a8: 8d34 d4e8 

  0x00007f0d387c21ac: ; ImmutableOopMap {rbp=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Objects::equals@11 (line 64)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d2c00::invoke@44
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3800::invoke@52
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@74
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@94
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3c00::linkToTargetMethod@6
                      ; - ax.xz.fuzz.ExecutionResult$Success::equals@2 (line 81)
                      ; - ax.xz.fuzz.Main::main@785 (line 96)
  0x00007f0d387c21ac: 90f8 fbff 

  0x00007f0d387c21b0: ;   {other}
  0x00007f0d387c21b0: 0f1f 8400 | 2012 0005 | 85c0 756c | becd ffff | ff4c 8b54 | 2410 4c89 | 1424 4c8b | 9424 8000 
  0x00007f0d387c21d0: 0000 4c89 | 5424 084c | 8b94 2498 | 0000 004c | 8954 2410 | 448b 5c24 | 7c44 895c | 2440 448b 
  0x00007f0d387c21f0: 9424 9000 | 0000 4489 | 5424 444c | 8b94 24e8 | 0000 004c | 8954 2470 | 448b 9c24 | 9400 0000 
  0x00007f0d387c2210: 4489 9c24 | 8000 0000 

  0x00007f0d387c2218: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c2218: 6666 90e8 

  0x00007f0d387c221c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [112]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic profileBoolean {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3800::invoke@66
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@74
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@94
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3c00::linkToTargetMethod@6
                      ; - ax.xz.fuzz.ExecutionResult$Success::equals@2 (line 81)
                      ; - ax.xz.fuzz.Main::main@785 (line 96)
  0x00007f0d387c221c: 60c3 7cff 

  0x00007f0d387c2220: ;   {other}
  0x00007f0d387c2220: 0f1f 8400 | 9012 0006 | 4d8b 9758 | 0400 0044 | 8b9c 2494 | 0000 0041 | ffc3 4489 | 9c24 9400 
  0x00007f0d387c2240: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@938 (line 69)
                      ;   {poll}
  0x00007f0d387c2240: 0000 4185 | 0241 83fb | 020f 8c95 | 0100 004d | 8b97 5804 

  0x00007f0d387c2254: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@941 (line 127)
                      ;   {poll}
  0x00007f0d387c2254: 0000 4185 | 02be 0100 | 0000 488b | 9424 0801 | 0000 488b | 8c24 8000 | 0000 4c8b | 8424 9800 
  0x00007f0d387c2274: ;   {static_call}
  0x00007f0d387c2274: 0000 90e8 

  0x00007f0d387c2278: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic partitioned {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@346 (line 50)
  0x00007f0d387c2278: 246e f5ff 

  0x00007f0d387c227c: ;   {other}
  0x00007f0d387c227c: 0f1f 8400 | ec12 0009 | 4889 8424 | a000 0000 

  0x00007f0d387c228c: ; implicit exception: dispatches to 0x00007f0d387c7b20
  0x00007f0d387c228c: 448b 580c | 4489 5c24 | 0845 85db | 0f86 1e45 | 0000 448b | 5010 4489 | 5424 6047 | 8b5c d410 
  0x00007f0d387c22ac: 4489 5c24 | 6445 33c9 

  0x00007f0d387c22b4: ;   {oop(a {type array int}[56] {0x000000060e97e5c8})}
  0x00007f0d387c22b4: 49ba c8e5 | 970e 0600 | 0000 438b | 4c8a 1041 | 8b6c cc0c | 85ed 0f86 | d600 0000 | 448d 5dff 
  0x00007f0d387c22d4: 443b dd0f | 8323 3a00 | 0045 8b54 | cc10 4d8d | 04cc 4183 | fa44 0f84 | 341b 0000 | 8d5d fd83 
  0x00007f0d387c22f4: fb01 0f8e | 503a 0000 | 41ba 0100 | 0000 8bd5 | 412b d283 | c2fd 33ff | 413b da0f | 4cd7 81fa 
  0x00007f0d387c2314: a00f 0000 | bfa0 0f00 | 000f 47d7 | 4103 d266 | 0f1f 8400 | 0000 0000 | 6666 6690 | 478b 5c90 
  0x00007f0d387c2334: 1041 83fb | 440f 84e5 | 1a00 0047 | 8b5c 9014 | 4183 fb44 | 0f84 d61a | 0000 478b | 5c90 1841 
  0x00007f0d387c2354: 83fb 440f | 84c7 1a00 | 0047 8b5c | 901c 4183 | fb44 0f84 | b81a 0000 | 4183 c204 | 443b d27c 
  0x00007f0d387c2374: bb4d 8b9f 

  0x00007f0d387c2378: ; ImmutableOopMap {r8=Oop rcx=NarrowOop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@45 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c2378: 5804 0000 

  0x00007f0d387c237c: ;   {poll}
  0x00007f0d387c237c: 4185 0344 | 3bd3 0f8c | 7aff ffff | 443b d57d | 1966 6690 | 438b 5c90 | 1083 fb44 | 0f84 861a 
  0x00007f0d387c239c: 0000 41ff | c244 3bd5 | 7cea 4d8b | 9758 0400 

  0x00007f0d387c23ac: ; ImmutableOopMap {[16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@51 (line 224)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c23ac: 0041 ffc1 

  0x00007f0d387c23b0: ;   {poll}
  0x00007f0d387c23b0: 4185 0241 | 83f9 380f | 8cf7 feff | ffbe 45ff | ffff 488b | 6c24 1044 | 8b5c 2460 | 4489 5c24 
  0x00007f0d387c23d0: 5844 894c 

  0x00007f0d387c23d4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c23d4: 2460 90e8 

  0x00007f0d387c23d8: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@11 (line 224)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c23d8: a4c1 7cff 

  0x00007f0d387c23dc: ;   {other}
  0x00007f0d387c23dc: 0f1f 8400 | 4c14 000c | 4c8b 9424 | e000 0000 | 4c89 9424 | d000 0000 | 4c8b 9424 | a800 0000 
  0x00007f0d387c23fc: 4c89 5424 | 70e9 020b | 0000 4d8b | 87b8 0100 | 004d 8bd0 | 4983 c228 | 4d3b 97c8 | 0100 000f 
  0x00007f0d387c241c: 83df 3100 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 | 49c7 0001 | 0000 004d | 8bd0 4983 
  0x00007f0d387c243c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007f0d387c243c: c220 41c7 | 4008 8077 | 0801 4589 | 600c c5fd | efc0 c4c1 | 79d6 0249 | c740 10ff | ffff ff49 
  0x00007f0d387c245c: ba00 0000 | 0050 4400 | 004d 8950 | 184c 8904 | 2441 8968 | 1845 8958 | 2049 8b8f | b801 0000 
  0x00007f0d387c247c: 4c8b d149 | 83c2 384d | 3b97 c801 | 0000 0f83 | 9d31 0000 | 4d89 97b8 | 0100 0041 | 0f0d 8ac0 
  0x00007f0d387c249c: 0000 0048 | c701 0100 | 0000 4c8b | d149 83c2 

  0x00007f0d387c24ac: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007f0d387c24ac: 30c7 4108 | 0819 3500 | 4c8b d949 | 83c3 1044 | 8961 0cc5 | fdef c041 | b907 0000 | 00c4 c178 
  0x00007f0d387c24cc: 92f9 62d1 | fe2f 7f03 | 4489 612c | c5fd efc0 | c4c1 79d6 | 024c 8b14 | 244d 8bda | 49c1 eb03 
  0x00007f0d387c24ec: 4489 5928 | 4889 4c24 | 6848 8bd9 | 48c1 eb03 | 4c8b d94d | 33d3 49c1 | ea16 4d85 | d274 1a49 
  0x00007f0d387c250c: c1eb 0948 | bf00 00a0 | 2c0d 7f00 | 0049 03fb | 803f 020f | 850d 2c00 | 0041 807f | 4000 0f85 
  0x00007f0d387c252c: a529 0000 | 4c8b 5424 | 6841 895a | 1c45 8862 | 1a41 c742 | 0c50 0000 | 0045 8962 | 1041 c742 
  0x00007f0d387c254c: 145f 0000 | 004d 8b9f | b801 0000 | 4d8b d349 | 83c2 104d | 3b97 c801 | 0000 0f83 | e830 0000 
  0x00007f0d387c256c: 4d89 97b8 | 0100 0041 | 0f0d 8ac0 | 0000 0049 | c703 0100 

  0x00007f0d387c2580: ;   {metadata('java/util/stream/IntPipeline$$Lambda+0x00007f0cd0087ca0')}
  0x00007f0d387c2580: 0000 41c7 | 4308 a07c 

  0x00007f0d387c2588: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000bc90'{0x000000060dd319c8})}
  0x00007f0d387c2588: 0801 41c7 | 430c 3963 | bac1 4c89 | 9c24 a800 | 0000 4c8b | 5424 6845 | 0fb6 4218 | 4585 c00f 
  0x00007f0d387c25a8: 854b 4500 | 0041 c642 | 1801 418b | 6a28 85ed | 0f84 6245 | 0000 4180 | 7f40 000f | 8548 2900 
  0x00007f0d387c25c8: 004c 8b54 | 2468 4589 | 6228 498b | 87b8 0100 | 004c 8bd0 | 4983 c220 | 4d3b 97c8 | 0100 000f 
  0x00007f0d387c25e8: 838b 3000 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 | 48c7 0001 | 0000 004c | 8bd0 4983 
  0x00007f0d387c2608: ;   {metadata('java/util/stream/ReduceOps$7ReducingSink')}
  0x00007f0d387c2608: c218 c740 | 0850 8108 | 0144 8960 | 0cc5 fdef | c0c4 c179 

  0x00007f0d387c261c: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000b860'{0x000000060dd31b20})}
  0x00007f0d387c261c: d602 c740 | 1064 63ba 

  0x00007f0d387c2624: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000ba78'{0x000000060dd31ae8})}
  0x00007f0d387c2624: c1c7 4014 | 5d63 bac1 | 4889 0424 | 4c8b 9424 | a800 0000 | 4d8b da49 | c1eb 0344 

  0x00007f0d387c2640: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000060e84e008})}
  0x00007f0d387c2640: 8958 1849 | ba08 e084 | 0e06 0000 | 0045 8b5a | 2445 8b52 | 1c48 8bcd | 48c1 e103 | 4183 e35f 
  0x00007f0d387c2660: 453b da0f | 8430 2100 | 0048 8bf1 | 9048 b880 | 7708 d00c 

  0x00007f0d387c2674: ;   {virtual_call}
  0x00007f0d387c2674: 7f00 00e8 

  0x00007f0d387c2678: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@20 (line 508)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c2678: 2482 ecff 

  0x00007f0d387c267c: ;   {other}
  0x00007f0d387c267c: 0f1f 8400 | ec16 000d | 488b 3424 

  0x00007f0d387c2688: ;   {optimized virtual_call}
  0x00007f0d387c2688: 488b d0e8 

  0x00007f0d387c268c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@25 (line 508)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c268c: d02c fbff 

  0x00007f0d387c2690: ;   {other}
  0x00007f0d387c2690: 0f1f 8400 | 0017 000e | 498d 34ec | 488b 1424 | 488b ea66 | 9048 b880 | 7708 d00c 

  0x00007f0d387c26ac: ;   {virtual_call}
  0x00007f0d387c26ac: 7f00 00e8 

  0x00007f0d387c26b0: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface forEachRemaining {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c26b0: 0ca5 f1ff 

  0x00007f0d387c26b4: ;   {other}
  0x00007f0d387c26b4: 0f1f 8400 | 2417 000f | 488b f566 | 9048 b850 | 8108 d00c 

  0x00007f0d387c26c8: ;   {virtual_call}
  0x00007f0d387c26c8: 7f00 00e8 

  0x00007f0d387c26cc: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface end {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@38 (line 510)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c26cc: b0e3 ddff 

  0x00007f0d387c26d0: ;   {other}
  0x00007f0d387c26d0: 0f1f 8400 | 4017 0010 | 4c8b 1424 | 458b 520c 

  0x00007f0d387c26e0: ; implicit exception: dispatches to 0x00007f0d387c7c28
  0x00007f0d387c26e0: 478b 44d4 

  0x00007f0d387c26e4: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c26e4: 0841 81f8 | 283a 0801 | 0f85 3651 | 0000 49c1 | e203 4c89 | 9424 a800 | 0000 448b | 5424 6445 
  0x00007f0d387c2704: 85d2 0f84 | ec3f 0000 | 4d8b 9fb8 | 0100 004d | 8bd3 4983 | c210 4d3b | 97c8 0100 | 000f 836e 
  0x00007f0d387c2724: 2f00 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 49c7 | 0301 0000 

  0x00007f0d387c273c: ;   {metadata('ax/xz/fuzz/RegisterSet')}
  0x00007f0d387c273c: 0041 c743 | 0858 b600 | 0145 8963 | 0c4c 895c | 2468 448b | 5424 6443 | 8b6c d40c 

  0x00007f0d387c2758: ; implicit exception: dispatches to 0x00007f0d387c7c40
  0x00007f0d387c2758: 450f b644 | ec10 4585 | c00f 85be | 4200 0045 | 8b5c ec14 

  0x00007f0d387c276c: ; implicit exception: dispatches to 0x00007f0d387c7c58
  0x00007f0d387c276c: 478b 54dc | 0c41 8b54 | ec0c 4d8d | 04ec 4c89 | 0424 413b | d20f 85c6 | 3000 0045 | 8b5c ec08 
  0x00007f0d387c278c: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c278c: 4181 fb28 | 3a08 010f | 85b7 5000 | 004c 8b14 | 244c 8954 | 2470 4d8b | 9fb8 0100 | 004d 8bd3 
  0x00007f0d387c27ac: 4983 c218 | 4d3b 97c8 | 0100 000f | 8303 2f00 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 
  0x00007f0d387c27cc: 49c7 0301 

  0x00007f0d387c27d0: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c27d0: 0000 0041 | c743 0828 | 3a08 014c | 899c 24b8 | 0000 004c | 8b54 2470 | 458b 5a14 | 4c8b 9424 
  0x00007f0d387c27f0: b800 0000 | 4589 5a14 | 4c8b 5424 | 7045 8b52 | 0c4c 8b9c | 24b8 0000 | 0045 8953 | 0c4c 8b54 
  0x00007f0d387c2810: 2470 450f | b65a 104c | 8b94 24b8 | 0000 0045 | 885a 104c | 8b54 2470 | 458b 5a14 | 4489 5c24 
  0x00007f0d387c2830: 5c47 8b5c | dc0c 448b | 4424 5c4b | 8d2c c44d | 63d3 4c89 | 1424 4181 | fb00 0002 | 000f 8791 
  0x00007f0d387c2850: 2e00 0049 | 8b9f b801 | 0000 4e8d | 54d3 104d | 3b97 c801 | 0000 0f83 | 782e 0000 | 4d89 97b8 
  0x00007f0d387c2870: 0100 0041 | 0f0d 8ac0 | 0000 0048 | c703 0100 | 0000 410f | 0d8a 0001 

  0x00007f0d387c2888: ;   {metadata({type array long})}
  0x00007f0d387c2888: 0000 c743 | 0880 2a00 | 0044 895b | 0c41 0f0d | 8a40 0100 | 0041 0f0d | 8a80 0100 | 0044 8b54 
  0x00007f0d387c28a8: 245c 4b8d | 7cd4 1048 | 8bf3 4883 | c610 488b | 1424 49ba | 809a f637 | 0d7f 0000 

  0x00007f0d387c28c4: ;   {other}
  0x00007f0d387c28c4: 41ff d20f | 1f84 0000 | 0000 0041 | 807f 4000 | 0f85 6e26 | 0000 4c8b | 9424 b800 | 0000 4c8b 
  0x00007f0d387c28e4: 9c24 b800 | 0000 498b | eb48 c1ed | 034c 8bc3 | 49c1 e803 | 4589 4314 | 4c8b db4d | 33da 49c1 
  0x00007f0d387c2904: eb16 4d85 | db74 1a49 | c1ea 0948 | bf00 00a0 | 2c0d 7f00 | 0049 03fa | 803f 020f | 855b 2800 
  0x00007f0d387c2924: 0041 807f | 4000 0f85 | 5726 0000 | 4c8b 5424 | 6841 896a | 0c4c 8b94 | 24b8 0000 | 004c 8b5c 
  0x00007f0d387c2944: 2468 4d33 | d349 c1ea | 164d 85d2 | 741a 49c1 | eb09 48bf | 0000 a02c | 0d7f 0000 | 4903 fb80 
  0x00007f0d387c2964: 3f02 0f85 | 6228 0000 | 4c8b 5424 | 6845 8b52 | 0c43 8b4c | d40c 438b | 7cd4 144c | 8b9c 24a8 
  0x00007f0d387c2984: 0000 0045 | 8b5b 0c44 | 3bd9 440f | 4fd9 4b8d | 14d4 41ff | cb45 85db | 0f8c 9300 | 0000 458b 
  0x00007f0d387c29a4: 4cfc 0c45 | 85c9 0f86 | 483f 0000 | 453b d90f | 833f 3f00 | 004c 8b84 | 24a8 0000 | 0045 8b40 
  0x00007f0d387c29c4: ;   {no_reloc}
  0x00007f0d387c29c4: 1443 8b5c | c40c 85db | 0f86 263f | 0000 443b | db0f 831d | 3f00 0049 | 8d34 fc4b | 8d04 c445 
  0x00007f0d387c29e4: 8d4b 0133 | db41 83fb | ff44 0f4c | cb41 81f9 | e803 0000 | bbe8 0300 | 0044 0f47 | cb45 8bc3 
  0x00007f0d387c2a04: 452b c166 | 0f1f 8400 | 0000 0000 | 4e8b 4cd8 | 1049 f7d1 | 4e21 4cde | 1041 ffcb | 453b d87f 
  0x00007f0d387c2a24: eb4d 8b87 

  0x00007f0d387c2a28: ; ImmutableOopMap {r10=NarrowOop rdi=NarrowOop rdx=Oop rsi=Oop rax=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::andNot@40 (line 1010)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c2a28: 5804 0000 

  0x00007f0d387c2a2c: ;   {poll}
  0x00007f0d387c2a2c: 4185 0041 | 83fb ff7f | aeff c985 | c90f 8c6a | 2300 0045 | 8b44 fc0c | 4585 c00f | 863b 3d00 
  0x00007f0d387c2a4c: 0041 3bc8 | 0f83 323d | 0000 4d8d | 1cfc 8bf9 | 4d8b 44fb | 104d 85c0 | 0f84 ca1d | 0000 498b 
  0x00007f0d387c2a6c: 9fb8 0100 | 004c 8bdb | 4983 c318 | ffc7 4389 | 7cd4 0c4d | 3b9f c801 | 0000 0f83 | 7c2c 0000 
  0x00007f0d387c2a8c: 4d89 9fb8 | 0100 0041 | 0f0d 8bc0 | 0000 0048 | c703 0100 | 0000 4c8b | d349 83c2 

  0x00007f0d387c2aa8: ;   {metadata('ax/xz/fuzz/ResourcePartition')}
  0x00007f0d387c2aa8: 10c7 4308 | 50b4 0001 | 4489 630c | c5fd efc0 | c4c1 79d6 | 0244 8b54 | 2460 478b | 5cd4 1444 
  0x00007f0d387c2ac8: 895b 1445 | 8bda 478b | 54dc 0c44 | 8953 0c4c | 8b54 2468 | 4d8b da49 | c1eb 0344 | 895b 104c 
  0x00007f0d387c2ae8: 8b94 2418 | 0100 004d | 85d2 0f84 | 243c 0000 | 4180 7f40 | 000f 85c0 | 2400 004c | 8b94 2418 
  0x00007f0d387c2b08: 0100 004c | 8bdb 49c1 | eb03 4c8b | 8424 1801 | 0000 4589 | 5810 4c8b | db4d 33da | 49c1 eb16 
  0x00007f0d387c2b28: 4d85 db74 | 1a49 c1ea | 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fa 803f | 020f 85d5 | 2600 004d 
  0x00007f0d387c2b48: 8b9f b801 | 0000 4d8b | d349 83c2 | 184d 3b97 | c801 0000 | 0f83 ce2b | 0000 4d89 | 97b8 0100 
  0x00007f0d387c2b68: 0041 0f0d | 8ac0 0000 | 0049 c703 | 0100 0000 | 410f 0d8a | 0001 0000 

  0x00007f0d387c2b80: ;   {metadata('ax/xz/fuzz/BasicBlock'[])}
  0x00007f0d387c2b80: 41c7 4308 | a074 1001 | 410f 0d8a | 4001 0000 | 41c7 430c | 0200 0000 | 410f 0d8a | 8001 0000 
  0x00007f0d387c2ba0: 4d8b d349 | 83c2 10c5 | fdef c0c4 | c179 d602 | 4c89 9c24 | b800 0000 | 4d8b 87b8 | 0100 004d 
  0x00007f0d387c2bc0: 8bd0 4983 | c218 4d3b | 97c8 0100 | 000f 8389 | 2b00 004d | 8997 b801 | 0000 410f | 0d8a c000 
  0x00007f0d387c2be0: 0000 49c7 | 0001 0000 | 0041 0f0d | 8a00 0100 

  0x00007f0d387c2bf0: ;   {metadata('ax/xz/fuzz/BasicBlock'[])}
  0x00007f0d387c2bf0: 0041 c740 | 08a0 7410 | 0141 0f0d | 8a40 0100 | 0041 c740 | 0c02 0000 | 0041 0f0d | 8a80 0100 
  0x00007f0d387c2c10: 004d 8bd0 | 4983 c210 | c5fd efc0 | c4c1 79d6 | 024c 8984 | 24c0 0000 | 0033 ed0f | 1f44 0000 
  0x00007f0d387c2c30: 488b b424 | 1001 0000 | 488b 9424 | 0801 0000 

  0x00007f0d387c2c40: ;   {optimized virtual_call}
  0x00007f0d387c2c40: 6666 90e8 

  0x00007f0d387c2c44: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual createBasicBlock {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@436 (line 58)
  0x00007f0d387c2c44: 3843 fcff 

  0x00007f0d387c2c48: ;   {other}
  0x00007f0d387c2c48: 0f1f 8400 | b81c 0012 | 488b d84c | 63d5 49c1 | e202 4c89 | 1424 4c8b | 9424 b800 | 0000 4c8b 
  0x00007f0d387c2c68: 1c24 4f8d | 6c1a 1041 | 807f 4000 | 0f85 ab1d | 0000 4c8b | db49 c1eb | 0345 895d | 004d 8bd5 
  0x00007f0d387c2c88: 4c8b db4d | 33da 49c1 | eb16 4d85 | db74 1f48 | 85db 741a | 49c1 ea09 | 48bf 0000 | a02c 0d7f 
  0x00007f0d387c2ca8: 0000 4903 | fa80 3f02 | 0f85 4f20 | 0000 488b | b424 1801 | 0000 488b | 9424 0801 

  0x00007f0d387c2cc4: ;   {optimized virtual_call}
  0x00007f0d387c2cc4: 0000 90e8 

  0x00007f0d387c2cc8: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual createBasicBlock {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@448 (line 59)
  0x00007f0d387c2cc8: b442 fcff 

  0x00007f0d387c2ccc: ;   {other}
  0x00007f0d387c2ccc: 0f1f 8400 | 3c1d 0013 | 488b d84c | 8b94 24c0 | 0000 004c | 8b1c 244f | 8d6c 1a10 | 4180 7f40 
  0x00007f0d387c2cec: 000f 8569 | 1d00 004c | 8bd3 ffc5 | 4c8b c349 | c1e8 0345 | 8945 004d | 8bdd 4d33 | d349 c1ea 
  0x00007f0d387c2d0c: 164d 85d2 | 741f 4885 | db74 1a49 | c1eb 0948 | bf00 00a0 | 2c0d 7f00 | 0049 03fb | 803f 020f 
  0x00007f0d387c2d2c: 8522 2000 | 0083 fd02 | 0f8c f6fe | ffff 4d8b | 87b8 0100 | 004d 8bd0 | 4983 c218 | 4d3b 97c8 
  0x00007f0d387c2d4c: 0100 000f | 8333 2a00 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 | 49c7 0001 | 0000 0041 
  0x00007f0d387c2d6c: 0f0d 8a00 

  0x00007f0d387c2d70: ;   {metadata('ax/xz/fuzz/TestCase$Branch'[])}
  0x00007f0d387c2d70: 0100 0041 | c740 08e8 | 7a10 0141 | 0f0d 8a40 | 0100 0041 | c740 0c02 | 0000 0041 | 0f0d 8a80 
  0x00007f0d387c2d90: 0100 004d | 8bd0 4983 | c210 c5fd | efc0 c4c1 | 79d6 024c | 8984 24c8 | 0000 004c | 8b94 2408 
  0x00007f0d387c2db0: 0100 004d | 85d2 0f84 | 7c39 0000 | 33ed 6690 | 498b 87b8 | 0100 004c | 8bd0 4983 | c218 4d3b 
  0x00007f0d387c2dd0: 97c8 0100 | 000f 8316 | 2600 004d | 8997 b801 | 0000 4c8b | d849 83c3 | 1048 c700 | 0100 0000 
  0x00007f0d387c2df0: 410f 0d8a | c000 0000 

  0x00007f0d387c2df8: ;   {metadata('ax/xz/fuzz/TestCase$Branch')}
  0x00007f0d387c2df8: c740 08e0 | 7810 0144 | 8960 0cc5 | fdef c0c4 | c179 d603 | 4889 0424 | 488b b424 | 0801 0000 
  0x00007f0d387c2e18: ;   {static_call}
  0x00007f0d387c2e18: 6666 90e8 

  0x00007f0d387c2e1c: ; ImmutableOopMap {[0]=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic randomBranch {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@487 (line 64)
  0x00007f0d387c2e1c: 0054 faff 

  0x00007f0d387c2e20: ;   {other}
  0x00007f0d387c2e20: 0f1f 8400 | 901e 0014 | 4889 4424 | 0848 8bb4 | 2408 0100 | 0033 d2b9 | 0300 0000 

  0x00007f0d387c2e3c: ;   {optimized virtual_call}
  0x00007f0d387c2e3c: 6666 90e8 

  0x00007f0d387c2e40: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@498 (line 64)
  0x00007f0d387c2e40: 7cdb f6ff 

  0x00007f0d387c2e44: ;   {other}
  0x00007f0d387c2e44: 0f1f 8400 | b41e 0015 | 8944 2420 | 488b b424 | 0801 0000 | 33d2 b903 

  0x00007f0d387c2e5c: ;   {optimized virtual_call}
  0x00007f0d387c2e5c: 0000 00e8 

  0x00007f0d387c2e60: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@509 (line 64)
  0x00007f0d387c2e60: 5cdb f6ff 

  0x00007f0d387c2e64: ;   {other}
  0x00007f0d387c2e64: 0f1f 8400 | d41e 0016 | 488b 3424 | 488b 5424 | 088b 4c24 | 2044 8bc0 

  0x00007f0d387c2e7c: ;   {optimized virtual_call}
  0x00007f0d387c2e7c: 6666 90e8 

  0x00007f0d387c2e80: ; ImmutableOopMap {[0]=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@512 (line 64)
  0x00007f0d387c2e80: 9cd4 faff 

  0x00007f0d387c2e84: ;   {other}
  0x00007f0d387c2e84: 0f1f 8400 | f41e 0017 | 4c8b 9424 | c800 0000 | 498d 5caa | 1041 807f | 4000 0f85 | ef1b 0000 
  0x00007f0d387c2ea4: 4c8b 1424 | ffc5 4c8b | 1c24 4d8b | c349 c1e8 | 0344 8903 | 4c8b db4d | 33d3 49c1 | ea16 4d85 
  0x00007f0d387c2ec4: d274 1a49 | c1eb 0948 | bf00 00a0 | 2c0d 7f00 | 0049 03fb | 803f 020f | 8588 1d00 | 0083 fd02 
  0x00007f0d387c2ee4: 0f8c d6fe | ffff 4533 | d245 33c0 | 4533 db4c | 8954 2470 | 4489 8424 | 9400 0000 | 4c89 9c24 
  0x00007f0d387c2f04: d000 0000 | 4c8b 9424 | 8000 0000 

  0x00007f0d387c2f10: ; implicit exception: dispatches to 0x00007f0d387c7aa8
  0x00007f0d387c2f10: 458b 5208 

  0x00007f0d387c2f14: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d387c2f14: 4181 fae8 | 9f05 010f | 857b 2c00 | 004c 8b94 | 2480 0000 | 004c 8914 | 2449 8bf2 

  0x00007f0d387c2f30: ;   {optimized virtual_call}
  0x00007f0d387c2f30: 33d2 90e8 

  0x00007f0d387c2f34: ; ImmutableOopMap {[0]=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@539 (line 70)
  0x00007f0d387c2f34: c8cc f7ff 

  0x00007f0d387c2f38: ;   {other}
  0x00007f0d387c2f38: 0f1f 8400 | a81f 0018 | 4c8b 9424 | 9800 0000 

  0x00007f0d387c2f48: ; implicit exception: dispatches to 0x00007f0d387c7acc
  0x00007f0d387c2f48: 458b 5208 

  0x00007f0d387c2f4c: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d387c2f4c: 4181 fae8 | 9f05 010f | 8567 2c00 | 004c 8b94 | 2498 0000 | 004c 8954 | 2408 498b 

  0x00007f0d387c2f68: ;   {optimized virtual_call}
  0x00007f0d387c2f68: f233 d2e8 

  0x00007f0d387c2f6c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@547 (line 71)
  0x00007f0d387c2f6c: 90cc f7ff 

  0x00007f0d387c2f70: ;   {other}
  0x00007f0d387c2f70: 0f1f 8400 | e01f 0019 | 498b 87b8 | 0100 004c | 8bd0 4983 | c218 4d3b | 97c8 0100 | 000f 832d 
  0x00007f0d387c2f90: 2400 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 48c7 | 0001 0000 | 0041 0f0d | 8a00 0100 
  0x00007f0d387c2fb0: ;   {metadata('ax/xz/fuzz/InterleavedBlock'[])}
  0x00007f0d387c2fb0: 00c7 4008 | 202a 1301 | 410f 0d8a | 4001 0000 | c740 0c02 | 0000 0041 | 0f0d 8a80 | 0100 004c 
  0x00007f0d387c2fd0: 8bd0 4983 | c210 c5fd | efc0 c4c1 | 79d6 0248 | 8984 2400 | 0100 0045 | 33d2 4489 | 9424 a800 
  0x00007f0d387c2ff0: 0000 4c8b | 9424 0001 | 0000 458b | 520c 4489 | 9424 ac00 | 0000 8bac | 24a8 0000 | 0041 3bea 
  0x00007f0d387c3010: 0f8c 7f05 | 0000 4c8b | 9424 8800 | 0000 458b 

  0x00007f0d387c3020: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d387c3020: 5208 4181 | fae8 9f05 | 010f 8510 | 2a00 004c | 8b94 2488 | 0000 004c | 8994 24d8 | 0000 004d 
  0x00007f0d387c3040: 8b52 1049 | 81fa f7ff | ff7f 0f8f | c72f 0000 | 4c8b 9c24 | d800 0000 | 4d8b 5b20 | 4c89 9c24 
  0x00007f0d387c3060: e000 0000 | 4c8b 9c24 | d800 0000 | 458b 4318 | 458b da44 | 899c 24e8 

  0x00007f0d387c3078: ;   {oop(a 'jdk/internal/foreign/GlobalSession'{0x000000060e7b3740})}
  0x00007f0d387c3078: 0000 0041 | 81f8 e866 | cfc1 0f84 | 1030 0000 | 498b 87b8 | 0100 004c | 8bd8 4983 | c340 4d3b 
  0x00007f0d387c3098: 9fc8 0100 | 000f 83e0 | 2100 004d | 899f b801 | 0000 4c8b | d049 83c2 | 1048 c700 | 0100 0000 
  0x00007f0d387c30b8: 410f 0d8b | c000 0000 

  0x00007f0d387c30c0: ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0d387c30c0: c740 08f0 | e41b 00c5 | fdef c062 | d1fe 287f | 0262 d1fe | 087f 4202 | c740 0cff | ffff ff48 
  0x00007f0d387c30e0: 8984 24f0 | 0000 0044 | 8b9c 24e8 | 0000 0045 | 85db 0f8c | 1430 0000 | 448b 9424 | e800 0000 
  0x00007f0d387c3100: 4489 5020 | 4c8b 9424 | d800 0000 | 49c1 ea03 | 4489 5024 | 4c8b 9424 | d800 0000 | 4d8b da4c 
  0x00007f0d387c3120: 8bd0 4d33 | da49 c1eb | 164d 85db | 0f84 4a17 | 0000 49c1 | ea09 48bf | 0000 a02c | 0d7f 0000 
  0x00007f0d387c3140: 4903 fa80 | 3f02 0f85 | 7d19 0000 | 4533 db44 | 3b9c 24e8 | 0000 000f | 8f0d 2100 | 004c 8b94 
  0x00007f0d387c3160: 24f0 0000 | 0044 8b84 | 24e8 0000 | 0045 8942 | 1c45 8b52 | 0c45 3bd0 | 0f8f 4630 | 0000 4585 
  0x00007f0d387c3180: d20f 8f0d | 3100 004c | 8b94 24f0 | 0000 0045 | 8962 1841 | 807f 4000 | 0f85 e616 | 0000 4c8b 
  0x00007f0d387c31a0: 9424 f000 | 0000 4589 | 6230 4589 | 6228 41c6 | 422d 0145 | 8862 2e41 | 807f 4000 

  0x00007f0d387c31bc: ;   {no_reloc}
  0x00007f0d387c31bc: 0f85 f916 | 0000 4c8b | 9424 f000 | 0000 4589 | 6234 4588 | 622f 4180 | 7f40 000f | 8515 1700 
  0x00007f0d387c31dc: 0041 807f | 4000 0f85 | 4117 0000 | 4c8b 9424 | f000 0000 | 4c8b 9c24 | e000 0000 | 4d89 5a10 
  0x00007f0d387c31fc: 4589 623c | 4589 6238 | 4c8b 9424 | d800 0000 | 450f b652 | 0c45 85d2 | 0f85 4a31 | 0000 498b 
  0x00007f0d387c321c: 87b8 0100 | 004c 8bd0 | 4983 c218 | 4d3b 97c8 | 0100 000f | 837c 2000 | 004d 8997 | b801 0000 
  0x00007f0d387c323c: 410f 0d8a | c000 0000 | 48c7 0001 | 0000 004c | 8bd0 4983 

  0x00007f0d387c3250: ;   {metadata('ax/xz/fuzz/TestCase')}
  0x00007f0d387c3250: c210 c740 | 0800 9c0f | 0144 8960 | 0cc5 fdef | c0c4 c179 | d602 4889 | 8424 e000 | 0000 448b 
  0x00007f0d387c3270: 9424 ac00 | 0000 4585 | d20f 8621 | 3100 004c | 8b94 2400 | 0100 004c | 8b9c 24c8 | 0000 004d 
  0x00007f0d387c3290: 8beb 49c1 | ed03 4c8b | 9c24 0001 | 0000 4d8b | c349 c1e8 | 0344 8940 | 0c4c 8b9c | 24f0 0000 
  0x00007f0d387c32b0: 0049 8beb | 48c1 ed03 | 4c8b d84d | 33d3 49c1 | ea16 4d85 | d274 1a49 | c1eb 0948 | bf00 00a0 
  0x00007f0d387c32d0: 2c0d 7f00 | 0049 03fb | 803f 020f | 8550 1800 | 0041 807f | 4000 0f85 | 7c16 0000 | 4c8b 9424 
  0x00007f0d387c32f0: e000 0000 | 4589 6a10 | 4c8b 9424 | c800 0000 | 4c8b 9c24 | e000 0000 | 4d33 d349 | c1ea 164d 
  0x00007f0d387c3310: 85d2 7427 | 4c8b 9424 | c800 0000 | 4d85 d274 | 1a49 c1eb | 0948 bf00 | 00a0 2c0d | 7f00 0049 
  0x00007f0d387c3330: 03fb 803f | 020f 857c | 1900 0049 | 8b8f b801 | 0000 4c8b | 9424 d800 | 0000 4d8b | 5220 4c89 
  0x00007f0d387c3350: ;   {no_reloc}
  0x00007f0d387c3350: 1424 4c8b | d149 83c2 | 104d 3b97 | c801 0000 | 0f83 6f1f | 0000 4d89 | 97b8 0100 | 0041 0f0d 
  0x00007f0d387c3370: 8ac0 0000 | 0048 c701 | 0100 0000 

  0x00007f0d387c337c: ;   {metadata('ax/xz/fuzz/Main$$Lambda+0x00007f0cd0132c10')}
  0x00007f0d387c337c: c741 0810 | 2c13 0144 | 8961 0c89 | 690c 488b | b424 e000 | 0000 488b | 1424 41b8 | 4400 0000 
  0x00007f0d387c339c: 41b9 6400 

  0x00007f0d387c33a0: ;   {optimized virtual_call}
  0x00007f0d387c33a0: 0000 90e8 

  0x00007f0d387c33a4: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual encode {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@643 (line 80)
  0x00007f0d387c33a4: b8a7 f8ff 

  0x00007f0d387c33a8: ;   {other}
  0x00007f0d387c33a8: 0f1f 8400 | 1824 001a | 498b 87b8 | 0100 004c | 8bd0 4983 | c220 4d3b | 97c8 0100 | 000f 8329 
  0x00007f0d387c33c8: 1f00 004d | 8997 b801 | 0000 4c8b | d849 83c3 | 1048 c700 | 0100 0000 | 410f 0d8a | c000 0000 
  0x00007f0d387c33e8: ;   {metadata('ax/xz/fuzz/CPUState')}
  0x00007f0d387c33e8: c740 0850 | b00f 0144 | 8960 0cc5 | fdef c062 | d1fe 087f | 0348 8984 | 24a8 0000 | 0049 8baf 
  0x00007f0d387c3408: b801 0000 | 4c8b d549 | 81c2 9000 | 0000 4d3b | 97c8 0100 | 000f 83f2 | 1e00 004d | 8997 b801 
  0x00007f0d387c3428: 0000 410f | 0d8a c000 | 0000 48c7 | 4500 0100 | 0000 488b | fd48 83c7 

  0x00007f0d387c3440: ;   {metadata('ax/xz/fuzz/CPUState$GeneralPurposeRegisters')}
  0x00007f0d387c3440: 10c7 4508 | 60b2 0f01 | 4489 650c | b910 0000 | 00c5 fdef | c0e9 0d00 | 0000 c5fe | 7f07 c5fe 
  0x00007f0d387c3460: 7f47 2048 | 83c7 4048 | 83e9 087d | ed48 83c1 | 047c 0cc5 | fe7f 0748 | 83c7 2048 | 83e9 0448 
  0x00007f0d387c3480: 83c1 047e | 1a48 b8ff | ffff ffff | ffff ffc4 | e2f0 f5c0 | c4e1 fb92 | f862 f1fe 

  0x00007f0d387c349c: ;   {metadata({type array byte}[])}
  0x00007f0d387c349c: 2f7f 0748 | be98 500b | d00c 7f00 | 00ba 2000 | 0000 b940 

  0x00007f0d387c34b0: ;   {runtime_call _multianewarray2_Java}
  0x00007f0d387c34b0: 0000 00e8 

  0x00007f0d387c34b4: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*multianewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState$VectorRegisters::filledWith@4 (line 98)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c34b4: 481b 8aff 

  0x00007f0d387c34b8: ;   {other}
  0x00007f0d387c34b8: 0f1f 8400 | 2825 001b | 4889 8424 | e800 0000 | 448b 5010 

  0x00007f0d387c34cc: ; implicit exception: dispatches to 0x00007f0d387c7a24
  0x00007f0d387c34cc: 478b 44d4 | 0c45 8d58 | f945 85db | 0f8c 8e25 | 0000 4183 | f807 0f84 | 4425 0000 | 4183 fb38 
  0x00007f0d387c34ec: 0f86 8225 | 0000 4c8b | 5c24 184f | 895c d410 | 4f89 5cd4 | 184f 895c | d420 4f89 | 5cd4 284f 
  0x00007f0d387c350c: 895c d430 | 4f89 5cd4 | 384f 895c | d440 4f89 | 5cd4 484d | 8b97 5804 

  0x00007f0d387c3524: ; ImmutableOopMap {rax=Oop rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.CPUState$VectorRegisters::filledWith@62 (line 99)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
                      ;   {poll}
  0x00007f0d387c3524: 0000 4185 | 0244 8b50 | 1447 8b5c | d40c 458d | 4bf9 4585 | c90f 8c3d | 2500 0041 | 83fb 070f 
  0x00007f0d387c3544: 84eb 2400 | 0041 83f9 | 380f 8651 | 2500 004c | 8b5c 2418 | 4f89 5cd4 | 104f 895c | d418 4f89 
  0x00007f0d387c3564: 5cd4 204f | 895c d428 | 4f89 5cd4 | 304f 895c | d438 4f89 | 5cd4 404f | 895c d448 | 4d8b 9758 
  0x00007f0d387c3584: ; ImmutableOopMap {rax=Oop rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.CPUState$VectorRegisters::filledWith@62 (line 99)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
                      ;   {poll}
  0x00007f0d387c3584: 0400 0041 | 8502 41b8 | 0200 0000 | e97e e5ff | ff4c 8b94 | 24b8 0000 | 0045 8b52 | 0c41 3bea 
  0x00007f0d387c35a4: 0f83 1f23 | 0000 4c8b | 9424 b800 | 0000 458b | 54aa 104c | 8b9c 24c0 | 0000 0045 | 8b43 0c41 
  0x00007f0d387c35c4: 3be8 0f83 | 7823 0000 | 4c8b 8424 | c000 0000 | 458b 44a8 | 1049 8bd2 | 48c1 e203 | 498b c848 
  0x00007f0d387c35e4: c1e1 0348 | 8bb4 2408 

  0x00007f0d387c35ec: ;   {static_call}
  0x00007f0d387c35ec: 0100 00e8 

  0x00007f0d387c35f0: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic randomlyInterleaved {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@586 (line 75)
  0x00007f0d387c35f0: aceb f3ff 

  0x00007f0d387c35f4: ;   {other}
  0x00007f0d387c35f4: 0f1f 8400 | 6426 001e | 4c8b e83b | ac24 ac00 | 0000 0f83 | b823 0000 | 4c8b 9424 | 0001 0000 
  0x00007f0d387c3614: 498d 5caa | 1041 807f | 4000 0f85 | 9111 0000 | 4d8b d544 | 8b9c 24a8 | 0000 0041 | ffc3 4489 
  0x00007f0d387c3634: 9c24 a800 | 0000 4d8b | dd49 c1eb | 0344 891b | 4c8b db4d | 33d3 49c1 | ea16 4d85 | d20f 84a2 
  0x00007f0d387c3654: e4ff ff4d | 85ed 0f84 | 99e4 ffff | 49c1 eb09 | 48bf 0000 | a02c 0d7f | 0000 4903 | fb80 3f02 
  0x00007f0d387c3674: 0f84 7fe4 | ffff 4d8b | 5758 4d8b | 5f48 f083 | 4424 c000 | 803f 000f | 8468 e4ff | ff44 8827 
  0x00007f0d387c3694: 4d85 db0f | 8444 e4ff | ff4b 897c | 1af8 4983 | c3f8 4d89 | 5f48 e94a | e4ff ff4d | 3bc2 0f85 
  0x00007f0d387c36b4: 9034 0000 | 442b cb45 | 85c9 0f8e | 1cea ffff | be15 0000 

  0x00007f0d387c36c8: ;   {oop(a 'java/lang/Class'{0x00000007ffc7fc60} = 'java/lang/System')}
  0x00007f0d387c36c8: 0049 ba60 | fcc7 ff07 | 0000 0041 | 8b6a 748b | 9424 9000 

  0x00007f0d387c36dc: ;   {static_call java.lang.StringConcatHelper::mix}
  0x00007f0d387c36dc: 0000 90e8 

  0x00007f0d387c36e0: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L@16
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181800::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@16
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c36e0: 894b 0000 

  0x00007f0d387c36e4: ;   {other}
  0x00007f0d387c36e4: 0f1f 8400 | 5427 001f | 488b f08b 

  0x00007f0d387c36f0: ;   {static_call java.lang.StringConcatHelper::mix}
  0x00007f0d387c36f0: 5424 7ce8 

  0x00007f0d387c36f4: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181800::invoke@42
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@16
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c36f4: 754b 0000 

  0x00007f0d387c36f8: ;   {other}
  0x00007f0d387c36f8: 0f1f 8400 | 6827 0020 | 4889 8424 | b000 0000 | 4c8b d049 | c1fa 2044 | 8bd8 458b | c245 0fbe 
  0x00007f0d387c3718: d0c4 4229 | f7db 458b | cb45 85db | 0f8c 1e3c | 0000 4181 | fb00 0010 | 000f 87d7 | 3800 004d 
  0x00007f0d387c3738: 63d3 4181 | fb00 0010 | 000f 87dd | 3600 0049 | 8b87 b801 | 0000 4983 | c217 4983 | e2f8 4c8b 
  0x00007f0d387c3758: d84d 03da | 4d3b 9fc8 | 0100 000f | 83bb 3600 | 004d 899f | b801 0000 | 410f 0d8b | c000 0000 
  0x00007f0d387c3778: 48c7 0001 | 0000 0041 | 0f0d 8b00 

  0x00007f0d387c3784: ;   {metadata({type array byte})}
  0x00007f0d387c3784: 0100 00c7 | 4008 c022 | 0000 4489 | 480c 410f | 0d8b 4001 | 0000 410f | 0d8b 8001 | 0000 4c8b 
  0x00007f0d387c37a4: d04c 8954 

  0x00007f0d387c37a8: ;   {oop(" Succeeded: "{0x0000000614e99dd0})}
  0x00007f0d387c37a8: 2428 49b8 | d09d e914 | 0600 0000 | 488b b424 | b000 0000 | 498b d28b | 8c24 9000 

  0x00007f0d387c37c4: ;   {static_call java.lang.StringConcatHelper::prepend}
  0x00007f0d387c37c4: 0000 90e8 

  0x00007f0d387c37c8: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [40]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@17
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd011a000::invoke@28
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0180400::invoke@20
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@56
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c37c8: 464b 0000 

  0x00007f0d387c37cc: ;   {other}
  0x00007f0d387c37cc: 0f1f 8400 | 3c28 0021 

  0x00007f0d387c37d4: ;   {oop("Faulted: "{0x0000000614e99de8})}
  0x00007f0d387c37d4: 49b8 e89d | e914 0600 | 0000 488b | f048 8b54 | 2428 8b4c 

  0x00007f0d387c37e8: ;   {static_call java.lang.StringConcatHelper::prepend}
  0x00007f0d387c37e8: 247c 90e8 

  0x00007f0d387c37ec: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [40]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@17
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd011a000::invoke@28
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0180400::invoke@41
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@56
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c37ec: 224b 0000 

  0x00007f0d387c37f0: ;   {other}
  0x00007f0d387c37f0: 0f1f 8400 | 6028 0022 | 488b 7424 | 2848 8bd0 

  0x00007f0d387c3800: ;   {static_call java.lang.StringConcatHelper::newString}
  0x00007f0d387c3800: 6666 90e8 

  0x00007f0d387c3804: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@76
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c3804: f88e 96f8 

  0x00007f0d387c3808: ;   {other}
  0x00007f0d387c3808: 0f1f 8400 | 7828 0023 | 85ed 0f84 | fe37 0000 

  0x00007f0d387c3818: ;   {static_call}
  0x00007f0d387c3818: 488b f0e8 

  0x00007f0d387c381c: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.io.PrintStream::println@11 (line 1168)
                      ; - ax.xz.fuzz.Main::main@713 (line 88)
  0x00007f0d387c381c: 2088 74f8 

  0x00007f0d387c3820: ;   {other}
  0x00007f0d387c3820: 0f1f 8400 | 9028 0024 | 498d 34ec | 488b d048 | 8b6c 2410 

  0x00007f0d387c3834: ;   {optimized virtual_call}
  0x00007f0d387c3834: 6666 90e8 

  0x00007f0d387c3838: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual writeln {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.PrintStream::println@14 (line 1168)
                      ; - ax.xz.fuzz.Main::main@713 (line 88)
  0x00007f0d387c3838: e4de 96f8 

  0x00007f0d387c383c: ;   {other}
  0x00007f0d387c383c: 0f1f 8400 | ac28 0025 

  0x00007f0d387c3844: ;   {oop(a 'java/lang/Class'{0x00000007ffc7fc60} = 'java/lang/System')}
  0x00007f0d387c3844: 49ba 60fc | c7ff 0700 | 0000 458b | 5274 4489 | 9424 b000 | 0000 448b | 5424 7c44 | 0394 2490 
  0x00007f0d387c3864: ;   {oop(a 'java/lang/Class'{0x00000007ffca91c0} = 'java/time/Clock')}
  0x00007f0d387c3864: 0000 0049 | bbc0 91ca | ff07 0000 | 004d 8b5b | 784c 899c | 24e8 0000 | 00c4 c17b | 2ac2 c5fb 
  0x00007f0d387c3884: 1184 24f0 | 0000 0049 

  0x00007f0d387c388c: ;   {static_call}
  0x00007f0d387c388c: 8bf3 90e8 

  0x00007f0d387c3890: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic getNanoTimeAdjustment {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Clock::currentInstant@5 (line 498)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c3890: 2c4f f3ff 

  0x00007f0d387c3894: ;   {other}
  0x00007f0d387c3894: 0f1f 8400 | 0429 0026 | 4c8b c048 | 83f8 ff0f | 84f3 3a00 | 0048 b8b3 | 94d6 26e8 | 0b2e 1149 
  0x00007f0d387c38b4: f7e8 4d8b | d849 c1fb | 3f4c 8bd2 | 49c1 fa1a | 4d2b d34d | 8bca 4d8b | d049 81f2 | 00ca 9a3b 
  0x00007f0d387c38d4: 4d85 d20f | 8c3b 3b00 | 0048 8b84 | 24e8 0000 | 004d 8bd1 | 4903 c20f | 801b 3800 | 004c 0394 
  0x00007f0d387c38f4: 24e8 0000 | 004c 8954 | 2428 4d69 | d100 ca9a | 3b4d 8bd8 | 4d2b da41 | 8beb 4c63 | d54c 0b54 
  0x00007f0d387c3914: 2428 4d85 | d20f 84b9 | 3b00 004c | 8b5c 2428 | 49ba 0014 | 6414 10e3 | 8fff 4d3b | da0f 8c39 
  0x00007f0d387c3934: 3900 0049 | baff 7895 | fad2 1c70 | 004d 3bda | 0f8f 063c | 0000 498b | 87b8 0100 | 004c 8bd0 
  0x00007f0d387c3954: 4983 c218 | 4d3b 97c8 | 0100 000f | 83e0 3400 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 
  0x00007f0d387c3974: 48c7 0001 

  0x00007f0d387c3978: ;   {metadata('java/time/Instant')}
  0x00007f0d387c3978: 0000 00c7 | 4008 68aa | 2600 8968 | 0c4c 8b54 | 2428 4c89 | 5010 4c8b | d04c 8994 | 24e8 0000 
  0x00007f0d387c3998: 004c 8b94 | 2420 0100 | 004d 85d2 | 0f84 ae36 

  0x00007f0d387c39a8: ;   {oop(a 'java/time/temporal/ChronoUnit'{0x0000000614e99e00})}
  0x00007f0d387c39a8: 0000 48b9 | 009e e914 | 0600 0000 | 488b b424 | 2001 0000 | 488b 9424 | e800 0000 | 488b 6c24 
  0x00007f0d387c39c8: ;   {optimized virtual_call}
  0x00007f0d387c39c8: 1066 90e8 

  0x00007f0d387c39cc: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface until {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@5 (line 490)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c39cc: 7f48 0000 

  0x00007f0d387c39d0: ;   {other}
  0x00007f0d387c39d0: 0f1f 8400 | 402a 0027 

  0x00007f0d387c39d8: ;   {static_call}
  0x00007f0d387c39d8: 488b f0e8 

  0x00007f0d387c39dc: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic ofNanos {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.time.Duration::between@10 (line 490)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c39dc: ab48 0000 

  0x00007f0d387c39e0: ;   {other}
  0x00007f0d387c39e0: 0f1f 8400 | 502a 0028 

  0x00007f0d387c39e8: ; implicit exception: dispatches to 0x00007f0d387c7df8
  0x00007f0d387c39e8: 488b 7010 | 4863 680c | 4885 f67d | 0b48 83c6 | 0148 81c5 | 0036 65c4 | bae8 0300 

  0x00007f0d387c3a04: ;   {static_call}
  0x00007f0d387c3a04: 0066 90e8 

  0x00007f0d387c3a08: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic multiplyExact {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::toMillis@31 (line 1240)
                      ; - ax.xz.fuzz.Main::main@733 (line 89)
  0x00007f0d387c3a08: 5248 0000 

  0x00007f0d387c3a0c: ;   {other}
  0x00007f0d387c3a0c: 0f1f 8400 | 7c2a 0029 | 4c8b c04c | 8bdd 49c1 | fb3f 48b8 | db34 b6d7 | 82de 1b43 | 48f7 ed4c 
  0x00007f0d387c3a2c: 8bd2 49c1 | fa12 4d2b | d34d 8bca | 498b c049 | 03c2 0f80 | 5037 0000 | 4f8d 1408 | c4c1 fb2a 
  0x00007f0d387c3a4c: ;   {section_word}
  0x00007f0d387c3a4c: c2c5 fb5e | 056b ddff | ffc5 fb10 | 8c24 f000 | 0000 c5f3 | 5ec0 488b 

  0x00007f0d387c3a64: ;   {static_call}
  0x00007f0d387c3a64: 6c24 10e8 

  0x00007f0d387c3a68: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic toString {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Double::toString@1 (line 452)
                      ; - java.lang.String::valueOf@1 (line 4610)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@15
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3a68: 6a48 0000 

  0x00007f0d387c3a6c: ;   {other}
  0x00007f0d387c3a6c: 0f1f 8400 | dc2a 002a | 4889 8424 | e800 0000 | be06 0000 | 0048 8bd0 

  0x00007f0d387c3a84: ;   {static_call java.lang.StringConcatHelper::mix}
  0x00007f0d387c3a84: 6666 90e8 

  0x00007f0d387c3a88: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183400::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@33
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3a88: 542e 55f8 

  0x00007f0d387c3a8c: ;   {other}
  0x00007f0d387c3a8c: 0f1f 8400 | fc2a 002b | 4889 8424 | f000 0000 

  0x00007f0d387c3a9c: ;   {oop(" per second"{0x0000000614e99e20})}
  0x00007f0d387c3a9c: 48be 209e | e914 0600 

  0x00007f0d387c3aa4: ;   {optimized virtual_call}
  0x00007f0d387c3aa4: 0000 90e8 

  0x00007f0d387c3aa8: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper::newArrayWithSuffix@2 (line 489)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182c00::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@51
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3aa8: 740d d1ff 

  0x00007f0d387c3aac: ;   {other}
  0x00007f0d387c3aac: 0f1f 8400 | 1c2b 002c | 4c63 d04c | 0394 24f0 | 0000 004d | 8bda 49c1 | fb20 458b | d245 8bc3 
  0x00007f0d387c3acc: 450f bed8 | c442 21f7 | da45 8bc3 | 4585 db0f | 8cf3 3a00 | 0041 81fb | 0000 1000 | 0f87 da35 
  0x00007f0d387c3aec: 0000 4d63 | d341 81fb | 0000 1000 | 0f87 6333 | 0000 498b | 87b8 0100 | 0049 83c2 | 1749 83e2 
  0x00007f0d387c3b0c: f84c 8bd8 | 4d03 da4d | 3b9f c801 | 0000 0f83 | 4133 0000 | 4d89 9fb8 | 0100 0041 | 0f0d 8bc0 
  0x00007f0d387c3b2c: 0000 0048 | c700 0100 | 0000 410f | 0d8b 0001 

  0x00007f0d387c3b3c: ;   {metadata({type array byte})}
  0x00007f0d387c3b3c: 0000 c740 | 08c0 2200 | 0044 8940 | 0c41 0f0d | 8b40 0100 | 0041 0f0d | 8b80 0100 | 004c 8bd0 
  0x00007f0d387c3b5c: 498b ea4c | 8b94 24f0 | 0000 0041 | 8bca 49ba | 0000 0000 | 0100 0000 | 4c8b 9c24 | f000 0000 
  0x00007f0d387c3b7c: 4d3b da0f | 8ccc 0100 

  0x00007f0d387c3b84: ;   {oop(" per second"{0x0000000614e99e20})}
  0x00007f0d387c3b84: 0048 be20 | 9ee9 1406 | 0000 0048 | 8bd5 41b8 | 0100 0000 

  0x00007f0d387c3b98: ;   {optimized virtual_call}
  0x00007f0d387c3b98: 6666 90e8 

  0x00007f0d387c3b9c: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper::newArrayWithSuffix@35 (line 493)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182c00::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@51
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3b9c: e01b 7cff 

  0x00007f0d387c3ba0: ;   {other}
  0x00007f0d387c3ba0: 0f1f 8400 | 102c 002d 

  0x00007f0d387c3ba8: ;   {oop("Rate: "{0x0000000614e99e38})}
  0x00007f0d387c3ba8: 49b8 389e | e914 0600 | 0000 488b | b424 f000 | 0000 488b | d548 8b8c | 24e8 0000 

  0x00007f0d387c3bc4: ;   {static_call java.lang.StringConcatHelper::prepend}
  0x00007f0d387c3bc4: 0066 90e8 

  0x00007f0d387c3bc8: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@17
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182400::invoke@28
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@73
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3bc8: 8247 0000 

  0x00007f0d387c3bcc: ;   {other}
  0x00007f0d387c3bcc: 0f1f 8400 | 3c2c 002e | 488b f548 | 8bd0 488b 

  0x00007f0d387c3bdc: ;   {static_call java.lang.StringConcatHelper::newString}
  0x00007f0d387c3bdc: 6c24 10e8 

  0x00007f0d387c3be0: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToStatic {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@93
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3be0: 1c8b 96f8 

  0x00007f0d387c3be4: ;   {other}
  0x00007f0d387c3be4: 0f1f 8400 | 542c 002f | 448b 9424 | b000 0000 | 4585 d20f | 84d3 3400 | 0048 8bf0 

  0x00007f0d387c3c00: ;   {static_call}
  0x00007f0d387c3c00: 6666 90e8 

  0x00007f0d387c3c04: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.io.PrintStream::println@11 (line 1168)
                      ; - ax.xz.fuzz.Main::main@747 (line 89)
  0x00007f0d387c3c04: 3884 74f8 

  0x00007f0d387c3c08: ;   {other}
  0x00007f0d387c3c08: 0f1f 8400 | 782c 0030 | 448b 8424 | b000 0000 | 4b8d 34c4 

  0x00007f0d387c3c1c: ;   {optimized virtual_call}
  0x00007f0d387c3c1c: 488b d0e8 

  0x00007f0d387c3c20: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual writeln {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.PrintStream::println@14 (line 1168)
                      ; - ax.xz.fuzz.Main::main@747 (line 89)
  0x00007f0d387c3c20: fcda 96f8 

  0x00007f0d387c3c24: ;   {other}
  0x00007f0d387c3c24: 0f1f 8400 | 942c 0031 

  0x00007f0d387c3c2c: ;   {oop(a 'java/lang/Class'{0x00000007ffca91c0} = 'java/time/Clock')}
  0x00007f0d387c3c2c: 49ba c091 | caff 0700 | 0000 4d8b | 5278 4c89 | 9424 b000 | 0000 498b 

  0x00007f0d387c3c44: ;   {static_call}
  0x00007f0d387c3c44: f266 90e8 

  0x00007f0d387c3c48: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic getNanoTimeAdjustment {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Clock::currentInstant@5 (line 498)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c3c48: 744b f3ff 

  0x00007f0d387c3c4c: ;   {other}
  0x00007f0d387c3c4c: 0f1f 8400 | bc2c 0032 | 4c8b c048 | 83f8 ff0f | 84f3 3900 | 0048 b8b3 | 94d6 26e8 | 0b2e 1149 
  0x00007f0d387c3c6c: f7e8 4d8b | d849 c1fb | 3f4c 8bd2 | 49c1 fa1a | 4d2b d34d | 8bca 4d8b | d049 81f2 | 00ca 9a3b 
  0x00007f0d387c3c8c: 4d85 d20f | 8c0b 3a00 | 0048 8b84 | 24b0 0000 | 004d 8bd1 | 4903 c20f | 805b 3500 | 004c 0394 
  0x00007f0d387c3cac: 24b0 0000 | 0049 8bea | 4d69 d100 | ca9a 3b4d | 8bd8 4d2b | da45 8bd3 | 4489 5424 | 044d 63d2 
  0x00007f0d387c3ccc: 4c0b d54d | 85d2 0f84 | 643a 0000 | 49ba 0014 | 6414 10e3 | 8fff 493b | ea0f 8c09 | 3600 0049 
  0x00007f0d387c3cec: baff 7895 | fad2 1c70 | 0049 3bea | 0f8f 863a | 0000 4d8b | 97b8 0100 | 004d 8bda | 4983 c318 
  0x00007f0d387c3d0c: 4d3b 9fc8 | 0100 000f | 8368 3100 | 004d 899f | b801 0000 | 410f 0d8b | c000 0000 | 49c7 0201 
  0x00007f0d387c3d2c: ;   {metadata('java/time/Instant')}
  0x00007f0d387c3d2c: 0000 0041 | c742 0868 | aa26 0044 | 8b5c 2404 | 4589 5a0c | 4989 6a10 | 4c89 9424 | b000 0000 
  0x00007f0d387c3d4c: e98f e3ff 

  0x00007f0d387c3d50: ;   {oop(" per second"{0x0000000614e99e20})}
  0x00007f0d387c3d50: ff48 be20 | 9ee9 1406 | 0000 0048 | 8bd5 4533 

  0x00007f0d387c3d60: ;   {optimized virtual_call}
  0x00007f0d387c3d60: c066 90e8 

  0x00007f0d387c3d64: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.StringConcatHelper::newArrayWithSuffix@24 (line 491)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182c00::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@51
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c3d64: 58f4 e6ff 

  0x00007f0d387c3d68: ;   {other}
  0x00007f0d387c3d68: 0f1f 8400 | d82d 0033 | e933 feff | ff48 8b74 

  0x00007f0d387c3d78: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c3d78: 2408 48b8 | 9058 10d0 | 0c7f 0000 | 488b 7e28 | 8b0f 4883 | c708 4885 | c0f2 48af | 0f85 0400 
  0x00007f0d387c3d98: 0000 4889 | 4620 0f84 | 06e2 ffff | 448b 9c24 | 9000 0000 | 41ff c344 | 899c 2490 | 0000 00e9 
  0x00007f0d387c3db8: fbe1 ffff 

  0x00007f0d387c3dbc: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c3dbc: 48b8 9058 | 10d0 0c7f | 0000 488b | 7e28 8b0f | 4883 c708 | 4885 c0f2 | 48af 0f85 | 0400 0000 
  0x00007f0d387c3ddc: 4889 4620 | 0f84 30e3 | ffff 4533 | dbe9 2ee3 | ffff 488b 

  0x00007f0d387c3df0: ;   {metadata('ax/xz/fuzz/ExecutionResult$Fault')}
  0x00007f0d387c3df0: 7424 0848 | b890 5810 | d00c 7f00 | 0048 8b7e | 288b 0f48 | 83c7 0848 | 85c0 f248 | af0f 8504 
  0x00007f0d387c3e10: 0000 0048 | 8946 200f | 8417 e3ff | ff33 c9e9 | 15e3 ffff | 4d8b 9fb8 | 0100 004d | 8bd3 4983 
  0x00007f0d387c3e30: c228 4d3b | 97c8 0100 | 000f 8399 | 1600 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 49c7 
  0x00007f0d387c3e50: 0301 0000 

  0x00007f0d387c3e54: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007f0d387c3e54: 0041 c743 | 0880 7708 | 0145 8963 | 0c45 8963 | 2449 c743 | 10ff ffff | ff41 896b | 1841 c743 
  0x00007f0d387c3e74: 1c50 4400 | 0041 894b | 2049 8beb | 498b 8fb8 | 0100 004c | 8bd1 4983 | c238 4d3b | 97c8 0100 
  0x00007f0d387c3e94: 000f 8369 | 1600 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 48c7 | 0101 0000 | 004c 8bd1 
  0x00007f0d387c3eb4: 4983 c230 

  0x00007f0d387c3eb8: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007f0d387c3eb8: c741 0808 | 1935 004c | 8bd9 4983 | c310 4489 | 610c c5fd | efc0 41b9 | 0700 0000 | c4c1 7892 
  0x00007f0d387c3ed8: f962 d1fe | 2f7f 0344 | 8961 2cc5 | fdef c0c4 | c179 d602 | 4c8b dd49 | c1eb 0344 | 8959 2848 
  0x00007f0d387c3ef8: 894c 2468 | 4c8b d548 | 8be9 48c1 | ed03 4c8b | d94d 33d3 | 49c1 ea16 | 4d85 d274 | 1a49 c1eb 
  0x00007f0d387c3f18: 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fb 803f | 020f 85cb | 1000 0041 | 807f 4000 | 0f85 760e 
  0x00007f0d387c3f38: 0000 4c8b | 5424 6841 | 896a 1c45 | 8862 1a41 | c742 0c50 | 0000 0045 | 8962 1041 | c742 145f 
  0x00007f0d387c3f58: 0000 004d | 8b9f b801 | 0000 4d8b | d349 83c2 | 104d 3b97 | c801 0000 | 0f83 ae15 | 0000 4d89 
  0x00007f0d387c3f78: 97b8 0100 | 0041 0f0d | 8ac0 0000 | 0049 c703 | 0100 0000 

  0x00007f0d387c3f8c: ;   {metadata('java/util/stream/IntPipeline$$Lambda+0x00007f0cd0087ca0')}
  0x00007f0d387c3f8c: 41c7 4308 | a07c 0801 

  0x00007f0d387c3f94: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000bc90'{0x000000060dd319c8})}
  0x00007f0d387c3f94: 41c7 430c | 3963 bac1 | 4c89 9c24 | a800 0000 | 4c8b 5424 | 6845 0fb6 | 5218 4585 | d20f 85f0 
  0x00007f0d387c3fb4: 2a00 004c | 8b54 2468 | 41c6 4218 | 0141 8b6a | 2885 ed0f | 8403 2b00 | 0041 807f | 4000 0f85 
  0x00007f0d387c3fd4: 140e 0000 | 4c8b 5424 | 6845 8962 | 2849 8b87 | b801 0000 | 4c8b d049 | 83c2 204d | 3b97 c801 
  0x00007f0d387c3ff4: 0000 0f83 | 4c15 0000 | 4d89 97b8 | 0100 0041 | 0f0d 8ac0 | 0000 0048 | c700 0100 | 0000 4c8b 
  0x00007f0d387c4014: d049 83c2 

  0x00007f0d387c4018: ;   {metadata('java/util/stream/ReduceOps$7ReducingSink')}
  0x00007f0d387c4018: 18c7 4008 | 5081 0801 | 4489 600c | c5fd efc0 | c4c1 79d6 

  0x00007f0d387c402c: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000b860'{0x000000060dd31b20})}
  0x00007f0d387c402c: 02c7 4010 | 6463 bac1 

  0x00007f0d387c4034: ;   {oop(a 'ax/xz/fuzz/RegisterSet$$Lambda+0x00007f0cd000ba78'{0x000000060dd31ae8})}
  0x00007f0d387c4034: c740 145d | 63ba c148 | 8904 244c | 8b94 24a8 | 0000 004d | 8bda 49c1 | eb03 4489 

  0x00007f0d387c4050: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000060e84e008})}
  0x00007f0d387c4050: 5818 49ba | 08e0 840e | 0600 0000 | 458b 5a1c | 458b 5224 | 488b cd48 | c1e1 0341 | 83e2 5f45 
  0x00007f0d387c4070: 3bd3 0f84 | 0407 0000 | 488b f166 | 9048 b880 | 7708 d00c 

  0x00007f0d387c4084: ;   {virtual_call}
  0x00007f0d387c4084: 7f00 00e8 

  0x00007f0d387c4088: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@20 (line 508)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c4088: 1468 ecff 

  0x00007f0d387c408c: ;   {other}
  0x00007f0d387c408c: 0f1f 8400 | fc30 0034 | 488b 3424 

  0x00007f0d387c4098: ;   {optimized virtual_call}
  0x00007f0d387c4098: 488b d0e8 

  0x00007f0d387c409c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@25 (line 508)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c409c: c012 fbff 

  0x00007f0d387c40a0: ;   {other}
  0x00007f0d387c40a0: 0f1f 8400 | 1031 0035 | 498d 34ec | 488b 1424 | 488b ea66 | 9048 b880 | 7708 d00c 

  0x00007f0d387c40bc: ;   {virtual_call}
  0x00007f0d387c40bc: 7f00 00e8 

  0x00007f0d387c40c0: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface forEachRemaining {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c40c0: fc8a f1ff 

  0x00007f0d387c40c4: ;   {other}
  0x00007f0d387c40c4: 0f1f 8400 | 3431 0036 | 488b f566 | 9048 b850 | 8108 d00c 

  0x00007f0d387c40d8: ;   {virtual_call}
  0x00007f0d387c40d8: 7f00 00e8 

  0x00007f0d387c40dc: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface end {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@38 (line 510)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c40dc: a0c9 ddff 

  0x00007f0d387c40e0: ;   {other}
  0x00007f0d387c40e0: 0f1f 8400 | 5031 0037 | 4c8b 1424 | 458b 420c 

  0x00007f0d387c40f0: ; implicit exception: dispatches to 0x00007f0d387c7b50
  0x00007f0d387c40f0: 478b 5cc4 

  0x00007f0d387c40f4: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c40f4: 0841 81fb | 283a 0801 | 0f85 d636 | 0000 4f8d | 14c4 4c89 | 9424 a800 | 0000 448b | 5424 6445 
  0x00007f0d387c4114: 85d2 0f84 | 9c25 0000 | 4d8b 9fb8 | 0100 004d | 8bd3 4983 | c210 4d3b | 97c8 0100 | 000f 832e 
  0x00007f0d387c4134: 1400 004d | 8997 b801 | 0000 410f | 0d8a c000 | 0000 49c7 | 0301 0000 

  0x00007f0d387c414c: ;   {metadata('ax/xz/fuzz/RegisterSet')}
  0x00007f0d387c414c: 0041 c743 | 0858 b600 | 0145 8963 | 0c4c 895c | 2468 448b | 5424 6443 | 8b6c d40c 

  0x00007f0d387c4168: ; implicit exception: dispatches to 0x00007f0d387c7b68
  0x00007f0d387c4168: 450f b64c | ec10 4585 | c90f 85f3 | 2700 0045 | 8b5c ec14 

  0x00007f0d387c417c: ; implicit exception: dispatches to 0x00007f0d387c7b80
  0x00007f0d387c417c: 478b 54dc | 0c41 8b54 | ec0c 4d8d | 04ec 4c89 | 0424 413b | d20f 853d | 1600 0045 | 8b5c ec08 
  0x00007f0d387c419c: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c419c: 4181 fb28 | 3a08 010f | 8557 3600 | 004c 8b14 | 244c 8954 | 2470 4d8b | 9fb8 0100 | 004d 8bd3 
  0x00007f0d387c41bc: 4983 c218 | 4d3b 97c8 | 0100 000f | 83c3 1300 | 004d 8997 | b801 0000 | 410f 0d8a | c000 0000 
  0x00007f0d387c41dc: 49c7 0301 

  0x00007f0d387c41e0: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c41e0: 0000 0041 | c743 0828 | 3a08 014c | 899c 24b8 | 0000 004c | 8b54 2470 | 458b 5a14 | 4c8b 9424 
  0x00007f0d387c4200: b800 0000 | 4589 5a14 | 4c8b 5424 | 7045 8b52 | 0c4c 8b9c | 24b8 0000 | 0045 8953 | 0c4c 8b54 
  0x00007f0d387c4220: 2470 450f | b65a 104c | 8b94 24b8 | 0000 0045 | 885a 104c | 8b54 2470 | 458b 5214 | 4489 5424 
  0x00007f0d387c4240: 5c47 8b5c | d40c 4d63 | d34c 8914 | 2444 8b44 | 245c 4b8d | 2cc4 4181 | fb00 0002 | 000f 8751 
  0x00007f0d387c4260: 1300 004d | 8baf b801 | 0000 4f8d | 54d5 104d | 3b97 c801 | 0000 0f83 | 3813 0000 | 4d89 97b8 
  0x00007f0d387c4280: 0100 0041 | 0f0d 8ac0 | 0000 0049 | c745 0001 | 0000 0041 | 0f0d 8a00 

  0x00007f0d387c4298: ;   {metadata({type array long})}
  0x00007f0d387c4298: 0100 0041 | c745 0880 | 2a00 0045 | 895d 0c41 | 0f0d 8a40 | 0100 0041 | 0f0d 8a80 | 0100 0044 
  0x00007f0d387c42b8: 8b54 245c | 4b8d 7cd4 | 1049 8bf5 | 4883 c610 | 488b 1424 | 49ba 809a | f637 0d7f | 0000 41ff 
  0x00007f0d387c42d8: ;   {other}
  0x00007f0d387c42d8: d20f 1f84 | 0000 0000 | 0041 807f | 4000 0f85 | 370b 0000 | 4c8b 9424 | b800 0000 | 4c8b 9c24 
  0x00007f0d387c42f8: b800 0000 | 498b db48 | c1eb 034d | 8bc5 49c1 | e803 4589 | 4314 4d8b | dd4d 33da | 49c1 eb16 
  0x00007f0d387c4318: 4d85 db74 | 1a49 c1ea | 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fa 803f | 020f 8511 | 0d00 0041 
  0x00007f0d387c4338: 807f 4000 | 0f85 200b | 0000 4c8b | 5424 6841 | 895a 0c4c | 8b94 24b8 | 0000 004c | 8b5c 2468 
  0x00007f0d387c4358: 4d33 d349 | c1ea 164d | 85d2 741a | 49c1 eb09 | 48bf 0000 | a02c 0d7f | 0000 4903 | fb80 3f02 
  0x00007f0d387c4378: 0f85 180d | 0000 4c8b | 5424 6845 | 8b52 0c47 | 8b4c d40c | 438b 7cd4 | 144c 8b9c | 24a8 0000 
  0x00007f0d387c4398: 0045 8b5b | 0c45 3bd9 | 450f 4fd9 | 4b8d 14d4 | 41ff cb45 | 85db 0f8c | 9100 0000 

  0x00007f0d387c43b4: ; implicit exception: dispatches to 0x00007f0d387c68c0
  0x00007f0d387c43b4: 418b 4cfc | 0c85 c90f | 86ff 2400 | 0044 3bd9 | 0f83 f624 | 0000 4c8b | 8424 a800 | 0000 458b 
  0x00007f0d387c43d4: 4014 438b 

  0x00007f0d387c43d8: ;   {no_reloc}
  0x00007f0d387c43d8: 5cc4 0c85 | db0f 86dd | 2400 0044 | 3bdb 0f83 | d424 0000 | 498d 34fc | 4b8d 04c4 | 458d 4301 
  0x00007f0d387c43f8: 33db 4183 | fbff 440f | 4cc3 4181 | f8e8 0300 | 00bb e803 | 0000 440f | 47c3 418b | cb41 2bc8 
  0x00007f0d387c4418: 0f1f 8400 | 0000 0000 | 4e8b 44d8 | 1049 f7d0 | 4e21 44de | 1041 ffcb | 443b d97f | eb4d 8b87 
  0x00007f0d387c4438: ; ImmutableOopMap {r10=NarrowOop rdi=NarrowOop rdx=Oop rsi=Oop rax=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::andNot@40 (line 1010)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c4438: 5804 0000 

  0x00007f0d387c443c: ;   {poll}
  0x00007f0d387c443c: 4185 0041 | 83fb ff7f | af41 ffc9 | 4585 c90f | 8c50 0900 | 0045 8b44 | fc0c 4585 | c00f 86f1 
  0x00007f0d387c445c: 2200 0045 | 3bc8 0f83 | e822 0000 | 4d8d 1cfc | 418b f94d | 8b44 fb10 | 4d85 c00f | 846e 0300 
  0x00007f0d387c447c: 0049 8b9f | b801 0000 | 4c8b db49 | 83c3 18ff | c743 897c | d40c 4d3b | 9fc8 0100 | 000f 8339 
  0x00007f0d387c449c: 1100 004d | 899f b801 | 0000 410f | 0d8b c000 | 0000 48c7 | 0301 0000 | 004c 8bd3 | 4983 c210 
  0x00007f0d387c44bc: ;   {metadata('ax/xz/fuzz/ResourcePartition')}
  0x00007f0d387c44bc: c743 0850 | b400 0144 | 8963 0cc5 | fdef c0c4 | c179 d602 | 448b 5424 | 6047 8b5c | d414 4489 
  0x00007f0d387c44dc: 5b14 478b | 54d4 0c44 | 8953 0c4c | 8b54 2468 | 4d8b da49 | c1eb 0344 | 895b 104c | 8b94 2410 
  0x00007f0d387c44fc: 0100 004d | 85d2 0f84 | d421 0000 | 4180 7f40 | 000f 858b | 0900 004c | 8b94 2410 | 0100 004c 
  0x00007f0d387c451c: 8bdb 49c1 | eb03 4c8b | 8424 1001 | 0000 4589 | 5810 4c8b | db4d 33da | 49c1 eb16 | 4d85 db74 
  0x00007f0d387c453c: 1a49 c1ea | 0948 bf00 | 00a0 2c0d | 7f00 0049 | 03fa 803f | 020f 858d | 0b00 0044 | 8b54 2408 
  0x00007f0d387c455c: 4183 fa01 | 0f86 7222 | 0000 4c8b | 9424 a000 | 0000 458b | 5a14 4489 | 5c24 6047 | 8b54 dc10 
  0x00007f0d387c457c: 4489 5424 | 6445 33c0 

  0x00007f0d387c4584: ;   {oop(a {type array int}[56] {0x000000060e97e5c8})}
  0x00007f0d387c4584: 49ba c8e5 | 970e 0600 | 0000 478b | 5c82 1043 | 8b6c dc0c | 85ed 0f86 | d100 0000 | 448d 55ff 
  0x00007f0d387c45a4: 443b d50f | 8377 1700 | 0047 8b4c | dc10 4b8d | 0cdc 4183 | f944 0f84 | 46de ffff | 448d 4dfd 
  0x00007f0d387c45c4: 4183 f901 | 0f8e 8917 | 0000 bf01 | 0000 008b | dd2b df83 | c3fd 33f6 | 443b cf0f | 4cde 81fb 
  0x00007f0d387c45e4: a00f 0000 | baa0 0f00 | 000f 47da | 03df 6666 | 0f1f 8400 | 0000 0000 | 6666 6690 | 448b 54b9 
  0x00007f0d387c4604: 1041 83fa | 440f 84f7 | ddff ff44 | 8b54 b914 | 4183 fa44 | 0f84 e8dd | ffff 448b | 54b9 1841 
  0x00007f0d387c4624: 83fa 440f | 84d9 ddff | ff44 8b54 | b91c 4183 | fa44 0f84 | cadd ffff | 83c7 043b | fb7c bd4d 
  0x00007f0d387c4644: 8b97 5804 

  0x00007f0d387c4648: ; ImmutableOopMap {r11=NarrowOop rcx=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@45 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
                      ;   {poll}
  0x00007f0d387c4648: 0000 4185 | 0241 3bf9 | 0f8c 7dff | ffff 3bfd | 7d17 6690 | 448b 54b9 | 1041 83fa | 440f 849b 
  0x00007f0d387c4668: ddff ffff | c73b fd7c | eb4d 8b97 | 5804 0000 

  0x00007f0d387c4678: ; ImmutableOopMap {[16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@51 (line 224)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
                      ;   {poll}
  0x00007f0d387c4678: 41ff c041 | 8502 4183 | f838 0f8c | fcfe ffff | be45 ffff | ff48 8b6c | 2410 448b | 5c24 6044 
  0x00007f0d387c4698: 895c 2458 | 4489 4424 

  0x00007f0d387c46a0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c46a0: 6066 90e8 

  0x00007f0d387c46a4: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@11 (line 224)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c46a4: d89e 7cff 

  0x00007f0d387c46a8: ;   {other}
  0x00007f0d387c46a8: 0f1f 8400 | 1837 003b | 4585 db0f | 8c37 2500 | 004d 85c0 | 0f8d f6d7 | ffff 4533 | d24d 3bd0 
  0x00007f0d387c46c8: bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 edbe | 45ff ffff | 4c8b 5424 | 104c 8914 | 244c 8b94 
  0x00007f0d387c46e8: 2480 0000 | 004c 8954 | 2408 4c8b | 9424 9800 | 0000 4c89 | 5424 104c | 8b94 24d8 | 0000 004c 
  0x00007f0d387c4708: 8954 2418 | 4c8b 9424 | a000 0000 | 4c89 5424 | 2844 8b5c | 247c 4489 | 5c24 4044 | 8b94 2490 
  0x00007f0d387c4728: 0000 0044 | 8954 2444 | 4c8b 9424 | b000 0000 | 4c89 5424 | 5044 8b9c | 2494 0000 | 0044 899c 
  0x00007f0d387c4748: 2480 0000 | 004c 8b94 | 24a8 0000 | 004c 8994 | 2490 0000 | 004c 8b94 | 24e8 0000 | 004c 8994 
  0x00007f0d387c4768: 24a0 0000 

  0x00007f0d387c476c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c476c: 0066 90e8 

  0x00007f0d387c4770: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [80]=Oop [112]=Oop [144]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@43 (line 397)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.Main::main@659 (line 82)
  0x00007f0d387c4770: 0c9e 7cff 

  0x00007f0d387c4774: ;   {other}
  0x00007f0d387c4774: 0f1f 8400 | e437 003c | 488b 7424 | 6848 8bd0 

  0x00007f0d387c4784: ;   {optimized virtual_call}
  0x00007f0d387c4784: 6666 90e8 

  0x00007f0d387c4788: ; ImmutableOopMap {[0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual copyIntoWithCancel {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c4788: f40f 7cff 

  0x00007f0d387c478c: ;   {other}
  0x00007f0d387c478c: 0f1f 8400 | fc37 003d | e94f f9ff | ff48 8b74 | 2468 488b 

  0x00007f0d387c47a0: ;   {optimized virtual_call}
  0x00007f0d387c47a0: d066 90e8 

  0x00007f0d387c47a4: ; ImmutableOopMap {[0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual copyIntoWithCancel {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c47a4: d80f 7cff 

  0x00007f0d387c47a8: ;   {other}
  0x00007f0d387c47a8: 0f1f 8400 | 1838 003e | e923 dfff | ff44 8b13 | 4585 d20f | 8463 eeff | ff4d 8b5f | 2849 8bfa 
  0x00007f0d387c47c8: 48c1 e703 | 4d85 db0f | 84b2 1200 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e939 
  0x00007f0d387c47e8: eeff ff45 | 8d41 0133 | c941 83f9 | ff44 0f4c | c141 81f8 | e803 0000 | b9e8 0300 | 0044 0f47 
  0x00007f0d387c4808: c141 8bd9 | 412b d8ff | cf3b fb0f | 8f56 fcff | ff4d 8b87 

  0x00007f0d387c481c: ; ImmutableOopMap {r10=NarrowOop r11=Oop rdx=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::recalculateWordsInUse@28 (line 135)
                      ; - java.util.BitSet::andNot@44 (line 1013)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c481c: 5804 0000 

  0x00007f0d387c4820: ;   {poll}
  0x00007f0d387c4820: 4185 0083 | ffff 0f8e | 51fc ffff | 448b cfe9 | 38fc ffff | 448d 4101 | 4533 c983 | f9ff 450f 
  0x00007f0d387c4840: 4cc1 4181 | f8e8 0300 | 0041 b9e8 | 0300 0045 | 0f47 c18b | d941 2bd8 | ffcf 3bfb | 0f8f fae1 
  0x00007f0d387c4860: ffff 4d8b | 8758 0400 

  0x00007f0d387c4868: ; ImmutableOopMap {r10=NarrowOop r11=Oop rdx=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::recalculateWordsInUse@28 (line 135)
                      ; - java.util.BitSet::andNot@44 (line 1013)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
                      ;   {poll}
  0x00007f0d387c4868: 0041 8500 | 83ff ff0f | 8ef5 e1ff | ff8b cfe9 | dee1 ffff | 4533 dbe9 | cbe8 ffff | 458b 5a30 
  0x00007f0d387c4888: 4585 db0f | 840d e9ff | ff4d 8b57 | 2849 8bfb | 48c1 e703 | 4d85 d20f | 84bc 1400 | 004d 8b5f 
  0x00007f0d387c48a8: 384b 897c | 13f8 4983 | c2f8 4d89 | 5728 e9e3 | e8ff ff45 | 8b5a 3445 | 85db 0f84 | fae8 ffff 
  0x00007f0d387c48c8: 4d8b 5728 | 498b fb48 | c1e7 034d | 85d2 0f84 | a214 0000 | 4d8b 5f38 | 4b89 7c13 | f849 83c2 
  0x00007f0d387c48e8: f84d 8957 | 28e9 d0e8 | ffff 458b | 5a3c 4585 | db0f 84de | e8ff ff4d | 8b57 2849 | 8bfb 48c1 
  0x00007f0d387c4908: e703 4d85 | d20f 8488 | 1400 004d | 8b5f 384b | 897c 13f8 | 4983 c2f8 | 4d89 5728 | e9b4 e8ff 
  0x00007f0d387c4928: ff4c 8b94 | 24f0 0000 | 0045 8b5a | 3845 85db | 0f84 aae8 | ffff 4d8b | 5728 498b | fb48 c1e7 
  0x00007f0d387c4948: 034d 85d2 | 0f84 6614 | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d | 8957 28e9 | 80e8 ffff 
  0x00007f0d387c4968: ;   {no_reloc}
  0x00007f0d387c4968: 4c8b 9424 | e000 0000 | 458b 5a10 | 4585 db0f | 846f e9ff | ff4d 8b57 | 2849 8bfb | 48c1 e703 
  0x00007f0d387c4988: 4d85 d20f | 8444 1400 | 004d 8b5f | 384b 897c | 13f8 4983 | c2f8 4d89 | 5728 e945 | e9ff ff4c 
  0x00007f0d387c49a8: 8b94 24a8 | 0000 0045 | 8b52 1c45 | 85d2 0f84 | 6ed4 ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d 
  0x00007f0d387c49c8: 85db 0f84 | 3f14 0000 | 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 44d4 | ffff 4c8b 
  0x00007f0d387c49e8: 9424 a800 | 0000 458b | 5218 4585 | d20f 84e6 | d3ff ff4d | 8b5f 2849 | 8bfa 48c1 | e703 4d85 
  0x00007f0d387c4a08: db0f 84e3 | 1300 004d | 8b57 384b | 897c 1af8 | 4983 c3f8 | 4d89 5f28 | e9bc d3ff | ff45 8b55 
  0x00007f0d387c4a28: 0045 85d2 | 0f84 48e2 | ffff 4d8b | 5f28 498b | fa48 c1e7 | 034d 85db | 0f84 ca14 | 0000 4d8b 
  0x00007f0d387c4a48: 5738 4b89 | 7c1a f849 | 83c3 f84d | 895f 28e9 | 1ee2 ffff | 458b 5d00 | 4585 db0f 

  0x00007f0d387c4a64: ;   {no_reloc}
  0x00007f0d387c4a64: 848a e2ff | ff4d 8b57 | 2849 8bfb | 48c1 e703 | 4d85 d20f | 84b0 1400 | 004d 8b5f | 384b 897c 
  0x00007f0d387c4a84: 13f8 4983 | c2f8 4d89 | 5728 e960 | e2ff ff44 | 8b1b 4585 | db0f 8405 | e4ff ff4d | 8b57 2849 
  0x00007f0d387c4aa4: 8bfb 48c1 | e703 4d85 | d20f 8497 | 1400 004d | 8b5f 384b | 897c 13f8 | 4983 c2f8 | 4d89 5728 
  0x00007f0d387c4ac4: e9db e3ff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3f00 742f | 4488 274d | 85d2 740f 
  0x00007f0d387c4ae4: 4b89 7c13 | f849 83c2 | f84d 8957 | 48eb 1849 | 8bf7 49ba | 20cb b84e | 0d7f 0000 

  0x00007f0d387c4b00: ;   {other}
  0x00007f0d387c4b00: 41ff d20f | 1f84 0000 | 0000 004c | 8b94 24f0 | 0000 0041 | 8b6a 2044 | 8b9c 24e8 | 0000 0044 
  0x00007f0d387c4b20: 3bdd 0f8f | c423 0000 | 458b 5a18 | e91e e6ff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 
  0x00007f0d387c4b40: 3f00 0f84 | 99e7 ffff | 4488 274d | 85d2 751d | 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 
  0x00007f0d387c4b60: ;   {other}
  0x00007f0d387c4b60: 0f1f 8400 | 0000 0000 | e974 e7ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e962 | e7ff ff4d 
  0x00007f0d387c4b80: 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3f00 | 0f84 89d2 | ffff 4488 | 274d 85d2 | 751d 498b 
  0x00007f0d387c4ba0: f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c4bac: ;   {other}
  0x00007f0d387c4bac: ffd2 0f1f | 8400 0000 | 0000 e964 | d2ff ff4b | 897c 13f8 | 4983 c2f8 | 4d89 5748 | e952 d2ff 
  0x00007f0d387c4bcc: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3f00 0f84 | 83d2 ffff | 4488 274d | 85d2 751d 
  0x00007f0d387c4bec: 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c4bfc: ;   {other}
  0x00007f0d387c4bfc: 0f1f 8400 | 0000 0000 | e95e d2ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e94c | d2ff ff4d 
  0x00007f0d387c4c1c: 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3f00 | 0f84 a4d1 | ffff 4488 | 274d 85d2 | 751d 498b 
  0x00007f0d387c4c3c: f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c4c48: ;   {other}
  0x00007f0d387c4c48: ffd2 0f1f | 8400 0000 | 0000 e97f | d1ff ff4b | 897c 13f8 | 4983 c2f8 | 4d89 5748 | e96d d1ff 
  0x00007f0d387c4c68: ff4d 8b57 | 584d 8b5f | 48f0 8344 | 24c0 0080 | 3f00 0f84 | 61e2 ffff | 4488 274d | 85db 751d 
  0x00007f0d387c4c88: 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c4c98: ;   {other}
  0x00007f0d387c4c98: 0f1f 8400 | 0000 0000 | e93c e2ff | ff4b 897c | 1af8 4983 | c3f8 4d89 | 5f48 e92a | e2ff ff4d 
  0x00007f0d387c4cb8: 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3f00 | 0f84 6de6 | ffff 4488 | 274d 85d2 | 751d 498b 
  0x00007f0d387c4cd8: f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c4ce4: ;   {other}
  0x00007f0d387c4ce4: ffd2 0f1f | 8400 0000 | 0000 e948 | e6ff ff4b | 897c 13f8 | 4983 c2f8 | 4d89 5748 | e936 e6ff 
  0x00007f0d387c4d04: ff4d 8b57 | 584d 8b5f | 48f0 8344 | 24c0 0080 | 3f00 0f84 | 9adf ffff | 4488 274d | 85db 751d 
  0x00007f0d387c4d24: 498b f749 | ba20 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c4d34: ;   {other}
  0x00007f0d387c4d34: 0f1f 8400 | 0000 0000 | e975 dfff | ff4b 897c | 1af8 4983 | c3f8 4d89 | 5f48 e963 | dfff ff4d 
  0x00007f0d387c4d54: 8b57 584d | 8b5f 48f0 | 8344 24c0 | 0080 3f00 | 0f84 c7df | ffff 4488 | 274d 85db | 751d 498b 
  0x00007f0d387c4d74: f749 ba20 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c4d80: ;   {other}
  0x00007f0d387c4d80: ffd2 0f1f | 8400 0000 | 0000 e9a2 | dfff ff4b | 897c 1af8 | 4983 c3f8 | 4d89 5f48 | e990 dfff 
  0x00007f0d387c4da0: ff41 8bf9 | e9d4 f6ff | ff8b f9e9 | badc ffff | 4c8b 5424 | 6845 8b5a | 1c45 85db | 0f84 78f1 
  0x00007f0d387c4dc0: ffff 4d8b | 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 5a1b | 0000 4d8b | 5f38 4b89 | 7c13 f849 
  0x00007f0d387c4de0: 83c2 f84d | 8957 28e9 | 4ef1 ffff | 458b 5a28 | 4585 db0f | 84df f1ff | ff4d 8b57 | 2849 8bfb 
  0x00007f0d387c4e00: 48c1 e703 | 4d85 d20f | 8440 1b00 | 004d 8b5f | 384b 897c | 13f8 4983 | c2f8 4d89 | 5728 e9b5 
  0x00007f0d387c4e20: f1ff ff4c | 8b94 24b8 | 0000 0045 | 8b5a 1445 | 85db 0f84 | b4f4 ffff | 4d8b 5728 | 498b fb48 
  0x00007f0d387c4e40: c1e7 034d | 85d2 0f84 | 481b 0000 | 4d8b 5f38 | 4b89 7c13 | f849 83c2 | f84d 8957 | 28e9 8af4 
  0x00007f0d387c4e60: ffff 4c8b | 5424 6845 | 8b52 0c45 | 85d2 0f84 | cef4 ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d 
  0x00007f0d387c4e80: ;   {no_reloc}
  0x00007f0d387c4e80: 85db 0f84 | 291b 0000 | 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 a4f4 | ffff 458b 
  0x00007f0d387c4ea0: 5a10 4585 | db0f 8468 | f6ff ff4d | 8b57 2849 | 8bfb 48c1 | e703 4d85 | d20f 840f | 1b00 004d 
  0x00007f0d387c4ec0: 8b5f 384b | 897c 13f8 | 4983 c2f8 | 4d89 5728 | e93e f6ff | ff4c 8b54 | 2468 458b | 5a1c 4585 
  0x00007f0d387c4ee0: db0f 8449 | d6ff ff4d | 8b57 2849 | 8bfb 48c1 | e703 4d85 | d20f 84f0 | 1a00 004d | 8b5f 384b 
  0x00007f0d387c4f00: 897c 13f8 | 4983 c2f8 | 4d89 5728 | e91f d6ff | ff45 8b5a | 2845 85db | 0f84 abd6 | ffff 4d8b 
  0x00007f0d387c4f20: 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 d61a | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d 
  0x00007f0d387c4f40: 8957 28e9 | 81d6 ffff | 4c8b 9424 | b800 0000 | 458b 5a14 | 4585 db0f | 847d d9ff | ff4d 8b57 
  0x00007f0d387c4f60: 2849 8bfb | 48c1 e703 | 4d85 d20f | 84fc 1a00 | 004d 8b5f | 384b 897c | 13f8 4983 | c2f8 4d89 
  0x00007f0d387c4f80: ;   {no_reloc}
  0x00007f0d387c4f80: 5728 e953 | d9ff ff4c | 8b54 2468 | 458b 520c | 4585 d20f | 8497 d9ff | ff4d 8b5f | 2849 8bfa 
  0x00007f0d387c4fa0: 48c1 e703 | 4d85 db0f | 84a3 1a00 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e96d 
  0x00007f0d387c4fc0: d9ff ff45 | 8b5a 1045 | 85db 0f84 | 33db ffff | 4d8b 5728 | 498b fb48 | c1e7 034d | 85d2 0f84 
  0x00007f0d387c4fe0: a61a 0000 | 4d8b 5f38 | 4b89 7c13 | f849 83c2 | f84d 8957 | 28e9 09db | ffff 4d8b | 5748 4d8b 
  0x00007f0d387c5000: 5f58 f083 | 4424 c000 | 803f 000f | 841e efff | ff44 8827 | 4d85 d275 | 1d49 8bf7 | 49ba 20cb 
  0x00007f0d387c5020: b84e 0d7f | 0000 41ff 

  0x00007f0d387c5028: ;   {other}
  0x00007f0d387c5028: d20f 1f84 | 0000 0000 | 00e9 f9ee | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | e7ee ffff 
  0x00007f0d387c5048: 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 803f | 000f 84d8 | f2ff ff44 | 8827 4d85 | d275 1d49 
  0x00007f0d387c5068: 8bf7 49ba | 20cb b84e | 0d7f 0000 

  0x00007f0d387c5074: ;   {other}
  0x00007f0d387c5074: 41ff d20f | 1f84 0000 | 0000 00e9 | b3f2 ffff | 4b89 7c13 | f849 83c2 | f84d 8957 | 48e9 a1f2 
  0x00007f0d387c5094: ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 | 803f 000f | 84d1 f2ff | ff44 8827 | 4d85 d275 
  0x00007f0d387c50b4: 1d49 8bf7 | 49ba 20cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c50c4: ;   {other}
  0x00007f0d387c50c4: d20f 1f84 | 0000 0000 | 00e9 acf2 | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | 9af2 ffff 
  0x00007f0d387c50e4: 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 803f | 000f 845c | f4ff ff44 | 8827 4d85 | d275 1d49 
  0x00007f0d387c5104: 8bf7 49ba | 20cb b84e | 0d7f 0000 

  0x00007f0d387c5110: ;   {other}
  0x00007f0d387c5110: 41ff d20f | 1f84 0000 | 0000 00e9 | 37f4 ffff | 4b89 7c13 | f849 83c2 | f84d 8957 | 48e9 25f4 
  0x00007f0d387c5130: ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 | 803f 000f | 84dc d3ff | ff44 8827 | 4d85 d275 
  0x00007f0d387c5150: 1d49 8bf7 | 49ba 20cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c5160: ;   {other}
  0x00007f0d387c5160: d20f 1f84 | 0000 0000 | 00e9 b7d3 | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | a5d3 ffff 
  0x00007f0d387c5180: 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 803f | 000f 848e | d7ff ff44 | 8827 4d85 | d275 1d49 
  0x00007f0d387c51a0: 8bf7 49ba | 20cb b84e | 0d7f 0000 

  0x00007f0d387c51ac: ;   {other}
  0x00007f0d387c51ac: 41ff d20f | 1f84 0000 | 0000 00e9 | 69d7 ffff | 4b89 7c13 | f849 83c2 | f84d 8957 | 48e9 57d7 
  0x00007f0d387c51cc: ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 | 803f 000f | 8487 d7ff | ff44 8827 | 4d85 d275 
  0x00007f0d387c51ec: 1d49 8bf7 | 49ba 20cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c51fc: ;   {other}
  0x00007f0d387c51fc: d20f 1f84 | 0000 0000 | 00e9 62d7 | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | 50d7 ffff 
  0x00007f0d387c521c: 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 803f | 000f 8414 | d9ff ff44 | 8827 4d85 | d275 1d49 
  0x00007f0d387c523c: 8bf7 49ba | 20cb b84e | 0d7f 0000 

  0x00007f0d387c5248: ;   {other}
  0x00007f0d387c5248: 41ff d20f | 1f84 0000 | 0000 00e9 | efd8 ffff | 4b89 7c13 | f849 83c2 | f84d 8957 | 48e9 ddd8 
  0x00007f0d387c5268: ffff 4c8b | 9424 f000 | 0000 448b | 9c24 e800 | 0000 4589 | 5a18 e9da 

  0x00007f0d387c5280: ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0d387c5280: deff ff48 | bef0 e41b | cf0c 7f00 | 0048 8b6c | 2410 4c8b | 9424 d800 | 0000 4c89 

  0x00007f0d387c529c: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c529c: 5424 20e8 

  0x00007f0d387c52a0: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.nio.Buffer$2::newDirectByteBuffer@0 (line 818)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@28 (line 92)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c52a0: 5c78 89ff 

  0x00007f0d387c52a4: ;   {other}
  0x00007f0d387c52a4: 0f1f 8400 | 1443 0041 | e927 deff 

  0x00007f0d387c52b0: ;   {metadata('ax/xz/fuzz/TestCase')}
  0x00007f0d387c52b0: ff48 be00 | 9c0f d00c | 7f00 0048 | 8b6c 2410 

  0x00007f0d387c52c0: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c52c0: 6666 90e8 

  0x00007f0d387c52c4: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@605 (line 79)
  0x00007f0d387c52c4: 3878 89ff 

  0x00007f0d387c52c8: ;   {other}
  0x00007f0d387c52c8: 0f1f 8400 | 3843 0042 | e991 dfff 

  0x00007f0d387c52d4: ;   {metadata('ax/xz/fuzz/Main$$Lambda+0x00007f0cd0132c10')}
  0x00007f0d387c52d4: ff48 be10 | 2c13 d00c 

  0x00007f0d387c52dc: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c52dc: 7f00 00e8 

  0x00007f0d387c52e0: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 501)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@634 (line 80)
  0x00007f0d387c52e0: 1c78 89ff 

  0x00007f0d387c52e4: ;   {other}
  0x00007f0d387c52e4: 0f1f 8400 | 5443 0043 | 488b c8e9 | 93e0 ffff 

  0x00007f0d387c52f4: ;   {metadata('ax/xz/fuzz/CPUState')}
  0x00007f0d387c52f4: 48be 50b0 | 0fd0 0c7f | 0000 488b 

  0x00007f0d387c5300: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5300: 6c24 10e8 

  0x00007f0d387c5304: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState::filledWith@0 (line 40)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c5304: f877 89ff 

  0x00007f0d387c5308: ;   {other}
  0x00007f0d387c5308: 0f1f 8400 | 7843 0044 | e9e8 e0ff 

  0x00007f0d387c5314: ;   {metadata('ax/xz/fuzz/CPUState$GeneralPurposeRegisters')}
  0x00007f0d387c5314: ff48 be60 | b20f d00c | 7f00 0048 | 8b6c 2410 

  0x00007f0d387c5324: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5324: 6666 90e8 

  0x00007f0d387c5328: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState$GeneralPurposeRegisters::filledWith@0 (line 52)
                      ; - ax.xz.fuzz.CPUState::filledWith@5 (line 41)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c5328: d477 89ff 

  0x00007f0d387c532c: ;   {other}
  0x00007f0d387c532c: 0f1f 8400 | 9c43 0045 | 488b e8e9 | 63e1 ffff 

  0x00007f0d387c533c: ;   {metadata('ax/xz/fuzz/CPUState$VectorRegisters')}
  0x00007f0d387c533c: 48be 60b4 | 0fd0 0c7f 

  0x00007f0d387c5344: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5344: 0000 90e8 

  0x00007f0d387c5348: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState$VectorRegisters::filledWith@65 (line 105)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c5348: b477 89ff 

  0x00007f0d387c534c: ;   {other}
  0x00007f0d387c534c: 0f1f 8400 | bc43 0046 | 4c8b c0e9 | 52c9 ffff | ba08 0000 

  0x00007f0d387c5360: ;   {metadata({type array long})}
  0x00007f0d387c5360: 0048 be80 | 2a00 cf0c 

  0x00007f0d387c5368: ;   {runtime_call _new_array_Java}
  0x00007f0d387c5368: 7f00 00e8 

  0x00007f0d387c536c: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState$MMXRegisters::filledWith@2 (line 144)
                      ; - ax.xz.fuzz.CPUState::filledWith@13 (line 43)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c536c: 90f6 89ff 

  0x00007f0d387c5370: ;   {other}
  0x00007f0d387c5370: 0f1f 8400 | e043 0047 | 4c8b c0e9 | b4c9 ffff 

  0x00007f0d387c5380: ;   {metadata('ax/xz/fuzz/CPUState$MMXRegisters')}
  0x00007f0d387c5380: 48be 68b6 | 0fd0 0c7f 

  0x00007f0d387c5388: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5388: 0000 90e8 

  0x00007f0d387c538c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.CPUState$MMXRegisters::filledWith@10 (line 146)
                      ; - ax.xz.fuzz.CPUState::filledWith@13 (line 43)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c538c: 7077 89ff 

  0x00007f0d387c5390: ;   {other}
  0x00007f0d387c5390: 0f1f 8400 | 0044 0048 | 4c8b e8e9 | d3c9 ffff 

  0x00007f0d387c53a0: ;   {metadata('jdk/internal/foreign/NativeMemorySegmentImpl')}
  0x00007f0d387c53a0: 48be e89f | 05d0 0c7f 

  0x00007f0d387c53a8: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c53a8: 0000 90e8 

  0x00007f0d387c53ac: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@0 (line 87)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::dup@7 (line 42)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSliceNoCheck@11 (line 161)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@9 (line 105)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.Main::main@659 (line 82)
  0x00007f0d387c53ac: 5077 89ff 

  0x00007f0d387c53b0: ;   {other}
  0x00007f0d387c53b0: 0f1f 8400 | 2044 0049 | 488b d0e9 | 6dcb ffff 

  0x00007f0d387c53c0: ;   {metadata('ax/xz/fuzz/InterleavedBlock'[])}
  0x00007f0d387c53c0: 48be 202a | 13d0 0c7f | 0000 488b | 2c24 4c8b | 5424 084c | 8914 24ba | 0200 0000 

  0x00007f0d387c53dc: ;   {runtime_call _new_array_Java}
  0x00007f0d387c53dc: 6666 90e8 

  0x00007f0d387c53e0: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@554 (line 73)
  0x00007f0d387c53e0: 1cf6 89ff 

  0x00007f0d387c53e4: ;   {other}
  0x00007f0d387c53e4: 0f1f 8400 | 5444 004a | e9ee dbff 

  0x00007f0d387c53f0: ;   {metadata('ax/xz/fuzz/TestCase$Branch')}
  0x00007f0d387c53f0: ff48 bee0 | 7810 d00c 

  0x00007f0d387c53f8: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c53f8: 7f00 00e8 

  0x00007f0d387c53fc: ; ImmutableOopMap {[16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@481 (line 64)
  0x00007f0d387c53fc: 0077 89ff 

  0x00007f0d387c5400: ;   {other}
  0x00007f0d387c5400: 0f1f 8400 | 7044 004b | e9ff d9ff | ff44 8bd1 | eb03 448b | d1be 76ff | ffff 4c8b | 5c24 104c 
  0x00007f0d387c5420: 891c 244c | 8b9c 2480 | 0000 004c | 895c 2408 | 4c8b 9c24 | 9800 0000 | 4c89 5c24 | 104c 8b9c 
  0x00007f0d387c5440: 24a0 0000 | 004c 895c | 2428 448b | 5c24 7c44 | 895c 2440 | 448b 8c24 | 9000 0000 | 4489 4c24 
  0x00007f0d387c5460: 444c 8b9c | 24b0 0000 | 004c 895c | 2450 4c8b | 9c24 b800 | 0000 4c89 | 5c24 5844 | 8b9c 2494 
  0x00007f0d387c5480: 0000 0044 | 899c 2480 | 0000 004c | 8b9c 24a8 | 0000 004c | 899c 24a0 | 0000 004c | 8b9c 24e8 
  0x00007f0d387c54a0: 0000 004c | 899c 24b0 | 0000 0044 | 8984 2484 | 0000 0044 | 8994 24b8 

  0x00007f0d387c54b8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c54b8: 0000 00e8 

  0x00007f0d387c54bc: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=Oop [80]=Oop [88]=Oop [112]=Oop [160]=Oop [176]=Oop [184]=NarrowOop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.CPUState$VectorRegisters::filledWith@38 (line 100)
                      ; - ax.xz.fuzz.CPUState::filledWith@9 (line 42)
                      ; - ax.xz.fuzz.Main::main@647 (line 82)
  0x00007f0d387c54bc: c090 7cff 

  0x00007f0d387c54c0: ;   {other}
  0x00007f0d387c54c0: 0f1f 8400 | 3045 004c | 41ff c0e9 | 45ff ffff | 41ff c0e9 | 3dff ffff | 894c 2478 

  0x00007f0d387c54dc: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007f0d387c54dc: 48be 8077 | 08d0 0c7f | 0000 4c89 

  0x00007f0d387c54e8: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c54e8: 0424 90e8 

  0x00007f0d387c54ec: ; ImmutableOopMap {[0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [120]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - ax.xz.fuzz.RegisterSet::of@5 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c54ec: 1076 89ff 

  0x00007f0d387c54f0: ;   {other}
  0x00007f0d387c54f0: 0f1f 8400 | 6045 004d | 4c8b d88b | 4c24 78e9 | 61e9 ffff 

  0x00007f0d387c5504: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007f0d387c5504: 48be 0819 | 35cf 0c7f 

  0x00007f0d387c550c: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c550c: 0000 90e8 

  0x00007f0d387c5510: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - ax.xz.fuzz.RegisterSet::of@5 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c5510: ec75 89ff 

  0x00007f0d387c5514: ;   {other}
  0x00007f0d387c5514: 0f1f 8400 | 8445 004e | 488b c8e9 | c8e9 ffff 

  0x00007f0d387c5524: ;   {metadata('java/util/stream/IntPipeline$$Lambda+0x00007f0cd0087ca0')}
  0x00007f0d387c5524: 48be a07c | 08d0 0c7f | 0000 488b 

  0x00007f0d387c5530: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5530: 6c24 10e8 

  0x00007f0d387c5534: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 501)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - java.util.stream.IntPipeline::collect@6 (line 528)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c5534: c875 89ff 

  0x00007f0d387c5538: ;   {other}
  0x00007f0d387c5538: 0f1f 8400 | a845 004f | 4c8b d8e9 | 4cea ffff 

  0x00007f0d387c5548: ;   {metadata('java/util/stream/ReduceOps$7ReducingSink')}
  0x00007f0d387c5548: 48be 5081 | 08d0 0c7f 

  0x00007f0d387c5550: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5550: 0000 90e8 

  0x00007f0d387c5554: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.ReduceOps$8::makeSink@0 (line 408)
                      ; - java.util.stream.ReduceOps$8::makeSink@1 (line 405)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@2 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c5554: a875 89ff 

  0x00007f0d387c5558: ;   {other}
  0x00007f0d387c5558: 0f1f 8400 | c845 0050 | e9c8 eaff | ff44 8b5c | 2464 4b8d 

  0x00007f0d387c556c: ;   {metadata('ax/xz/fuzz/RegisterSet')}
  0x00007f0d387c556c: 2cdc 48be | 58b6 00d0 | 0c7f 0000 

  0x00007f0d387c5578: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5578: 6666 90e8 

  0x00007f0d387c557c: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.RegisterSet::copyOf@0 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c557c: 8075 89ff 

  0x00007f0d387c5580: ;   {other}
  0x00007f0d387c5580: 0f1f 8400 | f045 0051 | 4c8b d8e9 | c9eb ffff 

  0x00007f0d387c5590: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c5590: 48be 283a | 08d0 0c7f | 0000 488b 

  0x00007f0d387c559c: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c559c: 6c24 10e8 

  0x00007f0d387c55a0: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [104]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c55a0: 5c75 89ff 

  0x00007f0d387c55a4: ;   {other}
  0x00007f0d387c55a4: 0f1f 8400 | 1446 0052 | 4c8b d8e9 | 37ec ffff 

  0x00007f0d387c55b4: ;   {metadata({type array long})}
  0x00007f0d387c55b4: 48be 802a | 00cf 0c7f | 0000 418b 

  0x00007f0d387c55c0: ;   {runtime_call _new_array_nozero_Java}
  0x00007f0d387c55c0: d366 90e8 

  0x00007f0d387c55c4: ; ImmutableOopMap {rbp=Oop [16]=Oop [92]=NarrowOop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c55c4: 38f7 89ff 

  0x00007f0d387c55c8: ;   {other}
  0x00007f0d387c55c8: 0f1f 8400 | 3846 0053 | 4c8b e8e9 | dfec ffff | 448b 5c24 | 604b 8d2c 

  0x00007f0d387c55e0: ;   {metadata('ax/xz/fuzz/ResourcePartition')}
  0x00007f0d387c55e0: dc48 be50 | b400 d00c 

  0x00007f0d387c55e8: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c55e8: 7f00 00e8 

  0x00007f0d387c55ec: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.ResourcePartition::withAllowedRegisters@0 (line 71)
                      ; - ax.xz.fuzz.Main::main@372 (line 51)
  0x00007f0d387c55ec: 1075 89ff 

  0x00007f0d387c55f0: ;   {other}
  0x00007f0d387c55f0: 0f1f 8400 | 6046 0054 | 488b d8e9 | d0ee ffff | 4489 5c24 

  0x00007f0d387c5604: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007f0d387c5604: 7848 be80 | 7708 d00c | 7f00 0048 

  0x00007f0d387c5610: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5610: 890c 24e8 

  0x00007f0d387c5614: ; ImmutableOopMap {[0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [120]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - ax.xz.fuzz.RegisterSet::of@5 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c5614: e874 89ff 

  0x00007f0d387c5618: ;   {other}
  0x00007f0d387c5618: 0f1f 8400 | 8846 0055 | 4c8b c044 | 8b5c 2478 | e926 ceff 

  0x00007f0d387c562c: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007f0d387c562c: ff48 be08 | 1935 cf0c | 7f00 0048 | 8b6c 2410 

  0x00007f0d387c563c: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c563c: 6666 90e8 

  0x00007f0d387c5640: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - ax.xz.fuzz.RegisterSet::of@5 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c5640: bc74 89ff 

  0x00007f0d387c5644: ;   {other}
  0x00007f0d387c5644: 0f1f 8400 | b446 0056 | 488b c8e9 | 8dce ffff 

  0x00007f0d387c5654: ;   {metadata('java/util/stream/IntPipeline$$Lambda+0x00007f0cd0087ca0')}
  0x00007f0d387c5654: 48be a07c | 08d0 0c7f | 0000 488b 

  0x00007f0d387c5660: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5660: 6c24 10e8 

  0x00007f0d387c5664: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 501)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - java.util.stream.IntPipeline::collect@6 (line 528)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c5664: 9874 89ff 

  0x00007f0d387c5668: ;   {other}
  0x00007f0d387c5668: 0f1f 8400 | d846 0057 | 4c8b d8e9 | 12cf ffff 

  0x00007f0d387c5678: ;   {metadata('java/util/stream/ReduceOps$7ReducingSink')}
  0x00007f0d387c5678: 48be 5081 | 08d0 0c7f 

  0x00007f0d387c5680: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5680: 0000 90e8 

  0x00007f0d387c5684: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.ReduceOps$8::makeSink@0 (line 408)
                      ; - java.util.stream.ReduceOps$8::makeSink@1 (line 405)
                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@2 (line 921)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c5684: 7874 89ff 

  0x00007f0d387c5688: ;   {other}
  0x00007f0d387c5688: 0f1f 8400 | f846 0058 | e989 cfff | ff44 8b5c | 2464 4b8d 

  0x00007f0d387c569c: ;   {metadata('ax/xz/fuzz/RegisterSet')}
  0x00007f0d387c569c: 2cdc 48be | 58b6 00d0 | 0c7f 0000 

  0x00007f0d387c56a8: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c56a8: 6666 90e8 

  0x00007f0d387c56ac: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.RegisterSet::copyOf@0 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c56ac: 5074 89ff 

  0x00007f0d387c56b0: ;   {other}
  0x00007f0d387c56b0: 0f1f 8400 | 2047 0059 | 4c8b d8e9 | 89d0 ffff 

  0x00007f0d387c56c0: ;   {metadata('java/util/BitSet')}
  0x00007f0d387c56c0: 48be 283a | 08d0 0c7f | 0000 488b 

  0x00007f0d387c56cc: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c56cc: 6c24 10e8 

  0x00007f0d387c56d0: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [104]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c56d0: 2c74 89ff 

  0x00007f0d387c56d4: ;   {other}
  0x00007f0d387c56d4: 0f1f 8400 | 4447 005a | 4c8b d8e9 | f7d0 ffff 

  0x00007f0d387c56e4: ;   {metadata({type array long})}
  0x00007f0d387c56e4: 48be 802a | 00cf 0c7f | 0000 418b 

  0x00007f0d387c56f0: ;   {runtime_call _new_array_nozero_Java}
  0x00007f0d387c56f0: d366 90e8 

  0x00007f0d387c56f4: ; ImmutableOopMap {rbp=Oop [16]=Oop [92]=NarrowOop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=1}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c56f4: 08f6 89ff 

  0x00007f0d387c56f8: ;   {other}
  0x00007f0d387c56f8: 0f1f 8400 | 6847 005b | 488b d8e9 | 9dd1 ffff | 448b 5c24 | 604b 8d2c 

  0x00007f0d387c5710: ;   {metadata('ax/xz/fuzz/ResourcePartition')}
  0x00007f0d387c5710: dc48 be50 | b400 d00c 

  0x00007f0d387c5718: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c5718: 7f00 00e8 

  0x00007f0d387c571c: ; ImmutableOopMap {rbp=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.ResourcePartition::withAllowedRegisters@0 (line 71)
                      ; - ax.xz.fuzz.Main::main@399 (line 52)
  0x00007f0d387c571c: e073 89ff 

  0x00007f0d387c5720: ;   {other}
  0x00007f0d387c5720: 0f1f 8400 | 9047 005c | 488b d8e9 | 8dd3 ffff 

  0x00007f0d387c5730: ;   {metadata('ax/xz/fuzz/BasicBlock'[])}
  0x00007f0d387c5730: 48be a074 | 10d0 0c7f | 0000 ba02 | 0000 0048 | 8b6c 2410 

  0x00007f0d387c5744: ;   {runtime_call _new_array_Java}
  0x00007f0d387c5744: 6666 90e8 

  0x00007f0d387c5748: ; ImmutableOopMap {rbp=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@406 (line 54)
  0x00007f0d387c5748: b4f2 89ff 

  0x00007f0d387c574c: ;   {other}
  0x00007f0d387c574c: 0f1f 8400 | bc47 005d | 4c8b d8e9 | 54d4 ffff 

  0x00007f0d387c575c: ;   {metadata('ax/xz/fuzz/BasicBlock'[])}
  0x00007f0d387c575c: 48be a074 | 10d0 0c7f | 0000 ba02 | 0000 0048 | 8b6c 2410 

  0x00007f0d387c5770: ;   {runtime_call _new_array_Java}
  0x00007f0d387c5770: 6666 90e8 

  0x00007f0d387c5774: ; ImmutableOopMap {rbp=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@412 (line 55)
  0x00007f0d387c5774: 88f2 89ff 

  0x00007f0d387c5778: ;   {other}
  0x00007f0d387c5778: 0f1f 8400 | e847 005e | 4c8b c0e9 | 99d4 ffff 

  0x00007f0d387c5788: ;   {metadata('ax/xz/fuzz/TestCase$Branch'[])}
  0x00007f0d387c5788: 48be e87a | 10d0 0c7f | 0000 ba02 | 0000 0048 | 8b6c 2410 

  0x00007f0d387c579c: ;   {runtime_call _new_array_Java}
  0x00007f0d387c579c: 6666 90e8 

  0x00007f0d387c57a0: ; ImmutableOopMap {rbp=Oop [16]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - ax.xz.fuzz.Main::main@461 (line 62)
  0x00007f0d387c57a0: 5cf2 89ff 

  0x00007f0d387c57a4: ;   {other}
  0x00007f0d387c57a4: 0f1f 8400 | 1448 005f | 4c8b c0e9 | efd5 ffff | 448b d1e9 | 59fc ffff | 448b d1e9 | 51fc ffff 
  0x00007f0d387c57c4: 41ff c0e9 | 49fc ffff | 41ff c0e9 | 41fc ffff | 498b f348 

  0x00007f0d387c57d8: ;   {static_call}
  0x00007f0d387c57d8: c1e6 03e8 

  0x00007f0d387c57dc: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.BitSet::trimToSize@21 (line 1118)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c57dc: 403e ffff 

  0x00007f0d387c57e0: ;   {other}
  0x00007f0d387c57e0: 0f1f 8400 | 5048 0060 | 488b d841 | 807f 4000 | 0f85 ae14 | 0000 4c8b | d349 c1ea | 0345 8954 
  0x00007f0d387c5800: ec14 4c8b | d34c 8b1c | 244d 33d3 | 49c1 ea16 | 4d85 d274 | 1f48 85db | 741a 49c1 | eb09 48bf 
  0x00007f0d387c5820: 0000 a02c | 0d7f 0000 | 4903 fb80 | 3f02 0f85 | e014 0000 | 488b 3424 

  0x00007f0d387c5838: ;   {optimized virtual_call}
  0x00007f0d387c5838: 6666 90e8 

  0x00007f0d387c583c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual checkInvariants {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.BitSet::trimToSize@28 (line 1119)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c583c: e0de edff 

  0x00007f0d387c5840: ;   {other}
  0x00007f0d387c5840: 0f1f 8400 | b048 0061 | e94a e9ff | ff49 8bf3 | 48c1 e603 

  0x00007f0d387c5854: ;   {static_call}
  0x00007f0d387c5854: 6666 90e8 

  0x00007f0d387c5858: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.BitSet::trimToSize@21 (line 1118)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c5858: c43d ffff 

  0x00007f0d387c585c: ;   {other}
  0x00007f0d387c585c: 0f1f 8400 | cc48 0062 | 488b d841 | 807f 4000 | 0f85 6a14 | 0000 4c8b | d349 c1ea | 0345 8954 
  0x00007f0d387c587c: ec14 4c8b | d34c 8b1c | 244d 33d3 | 49c1 ea16 | 4d85 d274 | 1f48 85db | 741a 49c1 | eb09 48bf 
  0x00007f0d387c589c: 0000 a02c | 0d7f 0000 | 4903 fb80 | 3f02 0f85 | b214 0000 | 488b 3424 

  0x00007f0d387c58b4: ;   {optimized virtual_call}
  0x00007f0d387c58b4: 6666 90e8 

  0x00007f0d387c58b8: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [16]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual checkInvariants {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.BitSet::trimToSize@28 (line 1119)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c58b8: 64de edff 

  0x00007f0d387c58bc: ;   {other}
  0x00007f0d387c58bc: 0f1f 8400 | 2c49 0063 | e9be ceff | ffbe e4ff | ffff 488b | 6c24 104c | 8b94 2480 | 0000 004c 
  0x00007f0d387c58dc: 8914 244c | 8b94 2498 | 0000 004c | 8954 2408 | 4c8b 9424 | 8800 0000 | 4c89 5424 | 104c 8b94 
  0x00007f0d387c58fc: 24a0 0000 | 004c 8954 | 2420 448b | 5424 7c44 | 8954 2438 | 448b 9c24 | 9000 0000 | 4489 5c24 
  0x00007f0d387c591c: 3c4c 8b54 | 2470 4c89 | 5424 6844 | 8b94 2494 | 0000 0044 | 8954 2478 

  0x00007f0d387c5934: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5934: 6666 90e8 

  0x00007f0d387c5938: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [104]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@580 (line 75)
  0x00007f0d387c5938: 448c 7cff 

  0x00007f0d387c593c: ;   {other}
  0x00007f0d387c593c: 0f1f 8400 | ac49 0064 | bee4 ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 4c8b 
  0x00007f0d387c595c: 9c24 9800 | 0000 4c89 | 5c24 084c | 8b9c 2488 | 0000 004c | 895c 2410 | 4c8b 9c24 | a000 0000 
  0x00007f0d387c597c: 4c89 5c24 | 2044 8b5c | 247c 4489 | 5c24 3844 | 8b84 2490 | 0000 0044 | 8944 243c | 4c8b 5c24 
  0x00007f0d387c599c: 704c 895c | 2468 448b | 9c24 9400 | 0000 4489 | 5c24 7844 | 8994 2494 

  0x00007f0d387c59b4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c59b4: 0000 00e8 

  0x00007f0d387c59b8: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [104]=Oop [148]=NarrowOop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@585 (line 75)
  0x00007f0d387c59b8: c48b 7cff 

  0x00007f0d387c59bc: ;   {other}
  0x00007f0d387c59bc: 0f1f 8400 | 2c4a 0065 | bee4 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c59dc: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 2488 | 0000 004c | 8954 2410 | 448b 5c24 | 7c44 895c 
  0x00007f0d387c59fc: 2438 448b | 9424 9000 | 0000 4489 | 5424 3c4c | 8b54 2470 | 4c89 5424 | 6848 8984 | 2498 0000 
  0x00007f0d387c5a1c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5a1c: 0066 90e8 

  0x00007f0d387c5a20: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [104]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@589 (line 75)
  0x00007f0d387c5a20: 5c8b 7cff 

  0x00007f0d387c5a24: ;   {other}
  0x00007f0d387c5a24: 0f1f 8400 | 944a 0066 | 4533 c0e9 | e1f9 ffff | 41b8 0100 | 0000 e9d6 | f9ff ffbe | deff ffff 
  0x00007f0d387c5a44: 488b 6c24 | 104c 8b94 | 2480 0000 | 004c 8914 | 244c 8b54 | 2470 4c89 

  0x00007f0d387c5a5c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5a5c: 5424 68e8 

  0x00007f0d387c5a60: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface asByteBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c5a60: 1c8b 7cff 

  0x00007f0d387c5a64: ;   {other}
  0x00007f0d387c5a64: 0f1f 8400 | d44a 0067 | 4533 c0e9 | a1f9 ffff | 4533 c0e9 | 99f9 ffff | 41b8 0100 | 0000 e98e 
  0x00007f0d387c5a84: f9ff ff49 | 8bf7 49ba | 00cb b84e | 0d7f 0000 

  0x00007f0d387c5a94: ;   {other}
  0x00007f0d387c5a94: 41ff d20f | 1f84 0000 | 0000 00e9 | 80db ffff | 41b8 0100 | 0000 e966 | f9ff ffbe | cfff ffff 
  0x00007f0d387c5ab4: 488b 6c24 | 104c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 | 004c 8954 | 2408 4c8b 
  0x00007f0d387c5ad4: 9424 a000 | 0000 4c89 | 5424 2044 | 8b94 2490 | 0000 0044 | 8954 243c | 4c8b 5424 | 704c 8954 
  0x00007f0d387c5af4: 2468 448b | 9c24 9400 | 0000 4489 | 5c24 784c | 898c 2490 | 0000 0048 | 8994 24a0 

  0x00007f0d387c5b10: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5b10: 0000 00e8 

  0x00007f0d387c5b14: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [104]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic addExact {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::ofEpochSecond@8 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c5b14: 688a 7cff 

  0x00007f0d387c5b18: ;   {other}
  0x00007f0d387c5b18: 0f1f 8400 | 884b 0068 | becf ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 4c8b 
  0x00007f0d387c5b38: 9c24 9800 | 0000 4c89 | 5c24 084c | 8b9c 24a0 | 0000 004c | 895c 2420 | 8b4c 247c | 894c 2438 
  0x00007f0d387c5b58: 448b 9c24 | 9000 0000 | 4489 5c24 | 3c4c 8b5c | 2470 4c89 | 5c24 688b | 8c24 9400 | 0000 894c 
  0x00007f0d387c5b78: 2478 4c89 | 9424 9800 | 0000 4489 | 4c24 7c4c | 8984 24a0 

  0x00007f0d387c5b8c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5b8c: 0000 00e8 

  0x00007f0d387c5b90: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [104]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic addExact {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::plusSeconds@13 (line 882)
                      ; - ax.xz.fuzz.Main::main@692 (line 87)
  0x00007f0d387c5b90: ec89 7cff 

  0x00007f0d387c5b94: ;   {other}
  0x00007f0d387c5b94: 0f1f 8400 | 044c 0069 | bede ffff | ff48 8b6c | 2410 4c8b | 5424 704c | 8954 2468 

  0x00007f0d387c5bb0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5bb0: 6666 90e8 

  0x00007f0d387c5bb4: ; ImmutableOopMap {rbp=Oop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@539 (line 70)
  0x00007f0d387c5bb4: c889 7cff 

  0x00007f0d387c5bb8: ;   {other}
  0x00007f0d387c5bb8: 0f1f 8400 | 284c 006a | bede ffff | ff48 8b6c | 2410 4c8b | 9424 9800 | 0000 4c89 | 5424 084c 
  0x00007f0d387c5bd8: 8b54 2470 | 4c89 5424 

  0x00007f0d387c5be0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5be0: 6866 90e8 

  0x00007f0d387c5be4: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [104]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@547 (line 71)
  0x00007f0d387c5be4: 9889 7cff 

  0x00007f0d387c5be8: ;   {other}
  0x00007f0d387c5be8: 0f1f 8400 | 584c 006b | becc ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c5c08: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24d8 | 0000 004c | 8954 2410 | 4c8b 9424 | a000 0000 
  0x00007f0d387c5c28: 4c89 5424 | 2044 8b9c | 2490 0000 | 0044 895c | 243c 4c8b | 5424 704c | 8954 2468 | 448b 9424 
  0x00007f0d387c5c48: 9400 0000 | 4489 5424 | 784c 8b94 | 24a8 0000 | 004c 8994 | 2488 0000 | 004c 8984 | 24a0 0000 
  0x00007f0d387c5c68: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5c68: 0066 90e8 

  0x00007f0d387c5c6c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [104]=Oop [136]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.Main::main@659 (line 82)
  0x00007f0d387c5c6c: 1089 7cff 

  0x00007f0d387c5c70: ;   {other}
  0x00007f0d387c5c70: 0f1f 8400 | e04c 006c | bee4 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c5c90: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24d8 | 0000 004c | 8954 2410 | 4c8b 9424 | a000 0000 
  0x00007f0d387c5cb0: 4c89 5424 | 2044 8b9c | 2490 0000 | 0044 895c | 243c 4c8b | 5424 704c | 8954 2468 | 448b 9424 
  0x00007f0d387c5cd0: 9400 0000 | 4489 5424 | 784c 8b94 | 24a8 0000 | 004c 8994 | 2488 0000 | 004c 8984 | 24a0 0000 
  0x00007f0d387c5cf0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5cf0: 0066 90e8 

  0x00007f0d387c5cf4: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [104]=Oop [136]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@16 (line 396)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.Main::main@659 (line 82)
  0x00007f0d387c5cf4: 8888 7cff 

  0x00007f0d387c5cf8: ;   {other}
  0x00007f0d387c5cf8: 0f1f 8400 | 684d 006d | be76 ffff | ff4c 8b54 | 2410 4c89 | 1424 4489 | 4c24 6889 

  0x00007f0d387c5d14: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5d14: 4c24 6ce8 

  0x00007f0d387c5d18: ; ImmutableOopMap {[0]=Oop [96]=NarrowOop [100]=NarrowOop [108]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@27 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c5d18: 6488 7cff 

  0x00007f0d387c5d1c: ;   {other}
  0x00007f0d387c5d1c: 0f1f 8400 | 8c4d 006e | be76 ffff | ff4c 8b54 | 2410 4c89 | 1424 4489 | 4424 6844 | 895c 246c 
  0x00007f0d387c5d3c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5d3c: 6666 90e8 

  0x00007f0d387c5d40: ; ImmutableOopMap {[0]=Oop [96]=NarrowOop [100]=NarrowOop [108]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.RegisterSet::getAssociatedRegisters@27 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c5d40: 3c88 7cff 

  0x00007f0d387c5d44: ;   {other}
  0x00007f0d387c5d44: 0f1f 8400 | b44d 006f | 41ba 0100 | 0000 e931 | c6ff ffbf | 0100 0000 | e9f5 e8ff | ff49 8bf7 
  0x00007f0d387c5d64: 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c5d70: ;   {other}
  0x00007f0d387c5d70: d20f 1f84 | 0000 0000 | 00e9 20d4 | ffff 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c5d8c: ;   {other}
  0x00007f0d387c5d8c: ffd2 0f1f | 8400 0000 | 0000 e927 | d4ff ff49 | 8bf7 49ba | 00cb b84e | 0d7f 0000 

  0x00007f0d387c5da8: ;   {other}
  0x00007f0d387c5da8: 41ff d20f | 1f84 0000 | 0000 00e9 | 25d4 ffff | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 
  0x00007f0d387c5dc8: ;   {other}
  0x00007f0d387c5dc8: 0f1f 8400 | 0000 0000 | e913 d4ff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c5de4: ;   {other}
  0x00007f0d387c5de4: d20f 1f84 | 0000 0000 | 00e9 fad4 | ffff 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c5e00: ;   {other}
  0x00007f0d387c5e00: ffd2 0f1f | 8400 0000 | 0000 e9d2 | bfff ff49 | 8bf7 49ba | 00cb b84e | 0d7f 0000 

  0x00007f0d387c5e1c: ;   {other}
  0x00007f0d387c5e1c: 41ff d20f | 1f84 0000 | 0000 00e9 | febf ffff | 4d3b c2bd | ffff ffff | 7c08 400f | 95c5 400f 
  0x00007f0d387c5e3c: b6ed be45 | ffff ff4c | 8b54 2410 | 4c89 1424 | 4c8b 9424 | 8000 0000 | 4c89 5424 | 0844 8b5c 
  0x00007f0d387c5e5c: 247c 4489 | 5c24 4044 | 8b94 2490 | 0000 0044 | 8954 2444 | 448b 9c24 | 9400 0000 | 4489 9c24 
  0x00007f0d387c5e7c: 8000 0000 

  0x00007f0d387c5e80: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5e80: 6666 90e8 

  0x00007f0d387c5e84: ; ImmutableOopMap {[0]=Oop [8]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@18 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c5e84: f886 7cff 

  0x00007f0d387c5e88: ;   {other}
  0x00007f0d387c5e88: 0f1f 8400 | f84e 0070 | 4d3b d3bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007f0d387c5ea8: 8b54 2410 | 4c89 1424 | 4c8b 9424 | 8000 0000 | 4c89 5424 | 084c 8b94 | 2498 0000 | 004c 8954 
  0x00007f0d387c5ec8: 2410 448b | 5c24 7c44 | 895c 2440 | 448b 9424 | 9000 0000 | 4489 5424 | 4444 8b9c | 2494 0000 
  0x00007f0d387c5ee8: 0044 899c | 2480 0000 | 0044 898c | 2484 0000 | 004c 8984 | 2498 0000 

  0x00007f0d387c5f00: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c5f00: 0066 90e8 

  0x00007f0d387c5f04: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [112]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@18 (line 413)
                      ; - java.time.Instant::plusSeconds@22 (line 883)
                      ; - ax.xz.fuzz.Main::main@692 (line 87)
  0x00007f0d387c5f04: 7886 7cff 

  0x00007f0d387c5f08: ;   {other}
  0x00007f0d387c5f08: 0f1f 8400 | 784f 0071 | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c5f20: ;   {other}
  0x00007f0d387c5f20: 0f1f 8400 | 0000 0000 | e94d cdff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c5f3c: ;   {other}
  0x00007f0d387c5f3c: d20f 1f84 | 0000 0000 | 00e9 a9cd | ffff 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c5f58: ;   {other}
  0x00007f0d387c5f58: ffd2 0f1f | 8400 0000 | 0000 e93d | cfff ff45 | 33d2 4c89 | 9424 0801 | 0000 e99d | b9ff ff45 
  0x00007f0d387c5f78: 33d2 4c89 | 9424 a000 | 0000 e9b2 | b9ff ff45 | 33d2 4c89 | 9424 1001 | 0000 e9c7 | b9ff ff45 
  0x00007f0d387c5f98: 33d2 4c89 | 9424 1801 | 0000 e9e3 | b9ff ff45 | 33d2 4c89 | 9424 2001 | 0000 e9fa | b9ff ff45 
  0x00007f0d387c5fb8: 33d2 4c89 | 9424 b000 | 0000 e916 | baff ff45 | 33d2 4c89 | 9424 b800 | 0000 e949 | baff ff45 
  0x00007f0d387c5fd8: 33d2 4c89 | 9424 c000 | 0000 e972 | baff ff45 | 33d2 4c89 | 9424 c800 | 0000 e989 | baff ff45 
  0x00007f0d387c5ff8: 33d2 4c89 | 9424 d000 | 0000 e9a5 | baff ff45 | 33d2 4c89 | 9424 0001 | 0000 e9ba | baff ffbe 
  0x00007f0d387c6018: 45ff ffff | 41bb f7ff | ff7f 4d3b | d3bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed | 4c8b 5424 
  0x00007f0d387c6038: 104c 8914 | 244c 8b94 | 2480 0000 | 004c 8954 | 2408 4c8b | 9424 9800 | 0000 4c89 | 5424 104c 
  0x00007f0d387c6058: ;   {no_reloc}
  0x00007f0d387c6058: 8b94 24d8 | 0000 004c | 8954 2418 | 448b 5424 | 7c44 8954 | 2440 448b | 9c24 9000 | 0000 4489 
  0x00007f0d387c6078: 5c24 4444 | 8b94 2494 | 0000 0044 | 8994 2480 

  0x00007f0d387c6088: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6088: 0000 00e8 

  0x00007f0d387c608c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop [112]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.AbstractMemorySegmentImpl::checkArraySize@60 (line 387)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@4 (line 233)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c608c: f084 7cff 

  0x00007f0d387c6090: ;   {other}
  0x00007f0d387c6090: 0f1f 8400 | 0051 0072 | be45 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c60b0: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24d8 | 0000 004c | 8954 2410 | 448b 5424 | 7c44 8954 
  0x00007f0d387c60d0: 2438 448b | 9424 9000 | 0000 4489 | 5424 3c4c | 8b54 2470 | 4c89 5424 | 6844 8b9c | 2494 0000 
  0x00007f0d387c60f0: 0044 895c | 2478 4489 | 8424 9800 

  0x00007f0d387c60fc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c60fc: 0000 90e8 

  0x00007f0d387c6100: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [104]=Oop [152]=NarrowOop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@20 (line 93)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c6100: 7c84 7cff 

  0x00007f0d387c6104: ;   {other}
  0x00007f0d387c6104: 0f1f 8400 | 7451 0073 | be45 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c6124: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24d8 | 0000 004c | 8954 2410 | 4c8b 9424 | a000 0000 
  0x00007f0d387c6144: 4c89 5424 | 2044 8b5c | 247c 4489 | 5c24 3844 | 8b94 2490 | 0000 0044 | 8954 243c | 4c8b 9424 
  0x00007f0d387c6164: b000 0000 | 4c89 5424 | 484c 8b94 | 24b8 0000 | 004c 8954 | 2450 4c8b | 5424 704c | 8954 2468 
  0x00007f0d387c6184: 448b 9c24 | 9400 0000 | 4489 5c24 | 7848 8984 | 2498 0000 | 0048 8984 | 24a8 0000 | 0044 8b94 
  0x00007f0d387c61a4: 24e8 0000 | 0045 8bda | 4489 9c24 | b800 0000 

  0x00007f0d387c61b4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c61b4: 6666 90e8 

  0x00007f0d387c61b8: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [72]=Oop [80]=Oop [104]=Oop [152]=Oop [168]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::<init>@16 (line 252)
                      ; - java.nio.ByteBuffer::<init>@8 (line 316)
                      ; - java.nio.ByteBuffer::<init>@10 (line 324)
                      ; - java.nio.MappedByteBuffer::<init>@8 (line 113)
                      ; - java.nio.DirectByteBuffer::<init>@7 (line 164)
                      ; - java.nio.Buffer$2::newDirectByteBuffer@10 (line 818)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@28 (line 92)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c61b8: c483 7cff 

  0x00007f0d387c61bc: ;   {other}
  0x00007f0d387c61bc: 0f1f 8400 | 2c52 0074 | be45 ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 4c8b 
  0x00007f0d387c61dc: 9c24 9800 | 0000 4c89 | 5c24 084c | 8b9c 24d8 | 0000 004c | 895c 2410 | 4c8b 9c24 | a000 0000 
  0x00007f0d387c61fc: 4c89 5c24 | 2044 8b5c | 247c 4489 | 5c24 3844 | 8b84 2490 | 0000 0044 | 8944 243c | 4c8b 9c24 
  0x00007f0d387c621c: b000 0000 | 4c89 5c24 | 484c 8b9c | 24b8 0000 | 004c 895c | 2450 4c8b | 9c24 c000 | 0000 4c89 
  0x00007f0d387c623c: 5c24 584c | 8b9c 24c8 | 0000 004c | 895c 2460 | 4c8b 5c24 | 704c 895c | 2468 4c8b | 9c24 d000 
  0x00007f0d387c625c: 0000 4c89 | 5c24 7044 | 8b9c 2494 | 0000 0044 | 895c 2478 | 4c8b 9c24 | f000 0000 | 4c89 9c24 
  0x00007f0d387c627c: 9000 0000 | 4489 5424 

  0x00007f0d387c6284: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6284: 7c66 90e8 

  0x00007f0d387c6288: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [144]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::limit@55 (line 383)
                      ; - java.nio.ByteBuffer::limit@2 (line 1565)
                      ; - java.nio.MappedByteBuffer::limit@2 (line 333)
                      ; - java.nio.MappedByteBuffer::limit@2 (line 73)
                      ; - java.nio.Buffer::<init>@39 (line 256)
                      ; - java.nio.ByteBuffer::<init>@8 (line 316)
                      ; - java.nio.ByteBuffer::<init>@10 (line 324)
                      ; - java.nio.MappedByteBuffer::<init>@8 (line 113)
                      ; - java.nio.DirectByteBuffer::<init>@7 (line 164)
                      ; - java.nio.Buffer$2::newDirectByteBuffer@10 (line 818)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@28 (line 92)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c6288: f482 7cff 

  0x00007f0d387c628c: ;   {other}
  0x00007f0d387c628c: 0f1f 8400 | fc52 0075 | be45 ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 4c8b 
  0x00007f0d387c62ac: 9c24 9800 | 0000 4c89 | 5c24 084c | 8b9c 24d8 | 0000 004c | 895c 2410 | 4c8b 9c24 | a000 0000 
  0x00007f0d387c62cc: 4c89 5c24 | 2044 8b44 | 247c 4489 | 4424 3844 | 8b9c 2490 | 0000 0044 | 895c 243c | 4c8b 9c24 
  0x00007f0d387c62ec: b000 0000 | 4c89 5c24 | 484c 8b9c | 24b8 0000 | 004c 895c | 2450 4c8b | 9c24 c000 | 0000 4c89 
  0x00007f0d387c630c: 5c24 584c | 8b9c 24c8 | 0000 004c | 895c 2460 | 4c8b 5c24 | 704c 895c | 2468 4c8b | 9c24 d000 
  0x00007f0d387c632c: 0000 4c89 | 5c24 7044 | 8b84 2494 | 0000 0044 | 8944 2478 | 4c8b 9c24 | f000 0000 | 4c89 9c24 
  0x00007f0d387c634c: 9000 0000 | 4489 5424 

  0x00007f0d387c6354: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6354: 7c66 90e8 

  0x00007f0d387c6358: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [144]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::position@37 (line 328)
                      ; - java.nio.ByteBuffer::position@2 (line 1551)
                      ; - java.nio.MappedByteBuffer::position@2 (line 323)
                      ; - java.nio.MappedByteBuffer::position@2 (line 73)
                      ; - java.nio.Buffer::<init>@45 (line 257)
                      ; - java.nio.ByteBuffer::<init>@8 (line 316)
                      ; - java.nio.ByteBuffer::<init>@10 (line 324)
                      ; - java.nio.MappedByteBuffer::<init>@8 (line 113)
                      ; - java.nio.DirectByteBuffer::<init>@7 (line 164)
                      ; - java.nio.Buffer$2::newDirectByteBuffer@10 (line 818)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@28 (line 92)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c6358: 2482 7cff 

  0x00007f0d387c635c: ;   {other}
  0x00007f0d387c635c: 0f1f 8400 | cc53 0076 | be45 ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 448b 
  0x00007f0d387c637c: 5c24 7c44 | 895c 2438 | 4c8b 5c24 | 704c 895c | 2468 4489 

  0x00007f0d387c6390: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6390: 5424 7ce8 

  0x00007f0d387c6394: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@17 (line 235)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c6394: e881 7cff 

  0x00007f0d387c6398: ;   {other}
  0x00007f0d387c6398: 0f1f 8400 | 0854 0077 | be45 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c63b8: 5424 7c44 | 8954 2438 | 4c8b 5424 | 704c 8954 

  0x00007f0d387c63c8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c63c8: 2468 90e8 

  0x00007f0d387c63cc: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [240]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.TestCase::<init>@6 (line 22)
                      ; - ax.xz.fuzz.Main::main@613 (line 79)
  0x00007f0d387c63cc: b081 7cff 

  0x00007f0d387c63d0: ;   {other}
  0x00007f0d387c63d0: 0f1f 8400 | 4054 0078 | 49c7 c3ff | ffff ff49 | 3bc3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 
  0x00007f0d387c63f0: edbe 45ff | ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 448b 5424 
  0x00007f0d387c6410: 7c44 8954 | 2440 448b | 9c24 9000 | 0000 4489 | 5c24 4444 | 8b94 2494 | 0000 0044 | 8994 2480 
  0x00007f0d387c6430: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6430: 0000 00e8 

  0x00007f0d387c6434: ; ImmutableOopMap {[0]=Oop [8]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Clock::currentInstant@14 (line 500)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c6434: 4881 7cff 

  0x00007f0d387c6438: ;   {other}
  0x00007f0d387c6438: 0f1f 8400 | a854 0079 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c6458: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 | 9800 0000 
  0x00007f0d387c6478: 4c89 5424 | 104c 8b94 | 24a0 0000 | 004c 8954 | 2428 448b | 5424 7c44 | 8954 2440 | 448b 9c24 
  0x00007f0d387c6498: 9000 0000 | 4489 5c24 | 444c 8b94 | 24b0 0000 | 004c 8954 | 2450 448b | 9424 9400 | 0000 4489 
  0x00007f0d387c64b8: 9424 8000 | 0000 4c8b | 9424 a800 | 0000 4c89 | 9424 9000 | 0000 4c89 | 8c24 a800 | 0000 4889 
  0x00007f0d387c64d8: 9424 b000 

  0x00007f0d387c64dc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c64dc: 0000 90e8 

  0x00007f0d387c64e0: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [80]=Oop [112]=Oop [144]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Math::floorDiv@10 (line 1537)
                      ; - java.time.Instant::ofEpochSecond@5 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c64e0: 9c80 7cff 

  0x00007f0d387c64e4: ;   {other}
  0x00007f0d387c64e4: 0f1f 8400 | 5455 007a | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c6504: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 448b 5c24 | 7c44 895c 
  0x00007f0d387c6524: 2440 448b | 9424 9000 | 0000 4489 | 5424 4444 | 8b9c 2494 | 0000 0044 | 899c 2480 

  0x00007f0d387c6540: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6540: 0000 00e8 

  0x00007f0d387c6544: ; ImmutableOopMap {[0]=Oop [8]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@6 (line 410)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c6544: 3880 7cff 

  0x00007f0d387c6548: ;   {other}
  0x00007f0d387c6548: 0f1f 8400 | b855 007b | 4d3b c2bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007f0d387c6568: 8b54 2410 | 4c89 1424 | 4c8b 9424 | 8000 0000 | 4c89 5424 | 0844 8b5c | 247c 4489 | 5c24 4044 
  0x00007f0d387c6588: 8b94 2490 | 0000 0044 | 8954 2444 | 448b 9c24 | 9400 0000 | 4489 9c24 | 8000 0000 

  0x00007f0d387c65a4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c65a4: 6666 90e8 

  0x00007f0d387c65a8: ; ImmutableOopMap {[0]=Oop [8]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@26 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@686 (line 87)
  0x00007f0d387c65a8: d47f 7cff 

  0x00007f0d387c65ac: ;   {other}
  0x00007f0d387c65ac: 0f1f 8400 | 1c56 007c | 4533 d24d | 3bda bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c65cc: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 | 9800 0000 
  0x00007f0d387c65ec: 4c89 5424 | 1044 8b5c | 247c 4489 | 5c24 4044 | 8b94 2490 | 0000 0044 | 8954 2444 | 448b 9c24 
  0x00007f0d387c660c: 9400 0000 | 4489 9c24 | 8000 0000 | 4489 8c24 | 8400 0000 | 4c89 8424 | 9800 0000 

  0x00007f0d387c6628: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6628: 6666 90e8 

  0x00007f0d387c662c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [112]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@6 (line 410)
                      ; - java.time.Instant::plusSeconds@22 (line 883)
                      ; - ax.xz.fuzz.Main::main@692 (line 87)
  0x00007f0d387c662c: 507f 7cff 

  0x00007f0d387c6630: ;   {other}
  0x00007f0d387c6630: 0f1f 8400 | a056 007d | 4d3b d3bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007f0d387c6650: 8b54 2410 | 4c89 1424 | 4c8b 9424 | 8000 0000 | 4c89 5424 | 084c 8b94 | 2498 0000 | 004c 8954 
  0x00007f0d387c6670: 2410 448b | 5c24 7c44 | 895c 2440 | 448b 9424 | 9000 0000 | 4489 5424 | 4444 8b9c | 2494 0000 
  0x00007f0d387c6690: 0044 899c | 2480 0000 | 0044 898c | 2484 0000 | 004c 8984 | 2498 0000 

  0x00007f0d387c66a8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c66a8: 0066 90e8 

  0x00007f0d387c66ac: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [112]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@26 (line 413)
                      ; - java.time.Instant::plusSeconds@22 (line 883)
                      ; - ax.xz.fuzz.Main::main@692 (line 87)
  0x00007f0d387c66ac: d07e 7cff 

  0x00007f0d387c66b0: ;   {other}
  0x00007f0d387c66b0: 0f1f 8400 | 2057 007e | bef6 ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 

  0x00007f0d387c66cc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c66cc: 6666 90e8 

  0x00007f0d387c66d0: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual subtract {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c66d0: ac7e 7cff 

  0x00007f0d387c66d4: ;   {other}
  0x00007f0d387c66d4: 0f1f 8400 | 4457 007f | bef6 ffff | ff48 8b6c | 2410 4889 

  0x00007f0d387c66e8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c66e8: 5c24 48e8 

  0x00007f0d387c66ec: ; ImmutableOopMap {rbp=Oop [72]=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual setPartition {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@375 (line 51)
  0x00007f0d387c66ec: 907e 7cff 

  0x00007f0d387c66f0: ;   {other}
  0x00007f0d387c66f0: 0f1f 8400 | 6057 0080 | bef6 ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 

  0x00007f0d387c670c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c670c: 6666 90e8 

  0x00007f0d387c6710: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual subtract {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c6710: 6c7e 7cff 

  0x00007f0d387c6714: ;   {other}
  0x00007f0d387c6714: 0f1f 8400 | 8457 0081 | bef6 ffff | ff48 8b6c | 2410 4889 

  0x00007f0d387c6728: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6728: 5c24 48e8 

  0x00007f0d387c672c: ; ImmutableOopMap {rbp=Oop [72]=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [288]=Oop }
                      ;*invokevirtual setPartition {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@402 (line 52)
  0x00007f0d387c672c: 507e 7cff 

  0x00007f0d387c6730: ;   {other}
  0x00007f0d387c6730: 0f1f 8400 | a057 0082 | be76 ffff | ff48 8b6c 

  0x00007f0d387c6740: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6740: 2410 90e8 

  0x00007f0d387c6744: ; ImmutableOopMap {rbp=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@474 (line 63)
  0x00007f0d387c6744: 387e 7cff 

  0x00007f0d387c6748: ;   {other}
  0x00007f0d387c6748: 0f1f 8400 | b857 0083 | be76 ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 | 4c8b 5c24 
  0x00007f0d387c6768: 684c 895c | 2460 4489 | 5424 6844 | 894c 2470 

  0x00007f0d387c6778: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6778: 6666 90e8 

  0x00007f0d387c677c: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [96]=Oop [104]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::recalculateWordsInUse@8 (line 135)
                      ; - java.util.BitSet::andNot@44 (line 1013)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c677c: 007e 7cff 

  0x00007f0d387c6780: ;   {other}
  0x00007f0d387c6780: 0f1f 8400 | f057 0084 | be76 ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 | 4c8b 5c24 
  0x00007f0d387c67a0: 684c 895c | 2460 4489 | 5424 6889 

  0x00007f0d387c67ac: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c67ac: 4c24 70e8 

  0x00007f0d387c67b0: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [96]=Oop [104]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::recalculateWordsInUse@8 (line 135)
                      ; - java.util.BitSet::andNot@44 (line 1013)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c67b0: cc7d 7cff 

  0x00007f0d387c67b4: ;   {other}
  0x00007f0d387c67b4: 0f1f 8400 | 2458 0085 | bee4 ffff | ff48 8b6c | 2410 4889 

  0x00007f0d387c67c8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c67c8: 4424 58e8 

  0x00007f0d387c67cc: ; ImmutableOopMap {rbp=Oop [88]=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@356 (line 51)
  0x00007f0d387c67cc: b07d 7cff 

  0x00007f0d387c67d0: ;   {other}
  0x00007f0d387c67d0: 0f1f 8400 | 4058 0086 | bee4 ffff | ff48 8b6c | 2410 4c8b | 9424 a000 | 0000 4c89 

  0x00007f0d387c67ec: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c67ec: 5424 20e8 

  0x00007f0d387c67f0: ; ImmutableOopMap {rbp=Oop [32]=Oop [128]=Oop [152]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@383 (line 52)
  0x00007f0d387c67f0: 8c7d 7cff 

  0x00007f0d387c67f4: ;   {other}
  0x00007f0d387c67f4: 0f1f 8400 | 6458 0087 | be45 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c6814: 4424 7c44 | 8944 2438 | 448b 9424 | 9000 0000 | 4489 5424 | 3c4c 8b54 | 2470 4c89 | 5424 6844 
  0x00007f0d387c6834: 895c 247c | 898c 2490 

  0x00007f0d387c683c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c683c: 0000 00e8 

  0x00007f0d387c6840: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) ax.xz.fuzz.Main::main@770 (line 93)
  0x00007f0d387c6840: 3c7d 7cff 

  0x00007f0d387c6844: ;   {other}
  0x00007f0d387c6844: 0f1f 8400 | b458 0088 | be45 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c6864: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24a0 | 0000 004c | 8954 2420 | 448b 9424 | 9000 0000 
  0x00007f0d387c6884: 4489 5424 | 3c4c 8b94 | 24e8 0000 | 004c 8954 | 2468 448b | 9c24 9400 | 0000 4489 | 5c24 784c 
  0x00007f0d387c68a4: 8b94 24a8 | 0000 004c | 8994 2488 

  0x00007f0d387c68b0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c68b0: 0000 00e8 

  0x00007f0d387c68b4: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [104]=Oop [136]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.runtime.ObjectMethods::eq@2 (line 172)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@34
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3c00::linkToTargetMethod@6
                      ; - ax.xz.fuzz.ExecutionResult$Success::equals@2 (line 81)
                      ; - ax.xz.fuzz.Main::main@785 (line 96)
  0x00007f0d387c68b4: c87c 7cff 

  0x00007f0d387c68b8: ;   {other}
  0x00007f0d387c68b8: 0f1f 8400 | 2859 0089 | be76 ffff | ff48 8b6c | 2410 448b | 4c24 6044 | 894c 2458 | 4c8b 4424 
  0x00007f0d387c68d8: 684c 8944 | 2460 4489 | 5424 5c44 | 895c 2474 

  0x00007f0d387c68e8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c68e8: 6666 90e8 

  0x00007f0d387c68ec: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [92]=NarrowOop [96]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::andNot@15 (line 1010)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c68ec: 907c 7cff 

  0x00007f0d387c68f0: ;   {other}
  0x00007f0d387c68f0: 0f1f 8400 | 6059 008a | be76 ffff | ff48 8b6c | 2410 448b | 4c24 6044 | 894c 2458 | 4c8b 4424 
  0x00007f0d387c6910: 684c 8944 | 2460 4489 | 5424 5c44 | 895c 2474 

  0x00007f0d387c6920: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6920: 6666 90e8 

  0x00007f0d387c6924: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [92]=NarrowOop [96]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::andNot@15 (line 1010)
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c6924: 587c 7cff 

  0x00007f0d387c6928: ;   {other}
  0x00007f0d387c6928: 0f1f 8400 | 9859 008b | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c6940: ;   {other}
  0x00007f0d387c6940: 0f1f 8400 | 0000 0000 | e9ed d5ff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c695c: ;   {other}
  0x00007f0d387c695c: d20f 1f84 | 0000 0000 | 00e9 6ed6 | ffff be45 | ffff ff4c | 8b54 2410 | 4c89 1424 | 448b 5424 
  0x00007f0d387c697c: 7c44 8954 | 2440 4489 

  0x00007f0d387c6984: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6984: 4c24 64e8 

  0x00007f0d387c6988: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@4 (line 1098)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c6988: f47b 7cff 

  0x00007f0d387c698c: ;   {other}
  0x00007f0d387c698c: 0f1f 8400 | fc59 008c | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c69a4: ;   {other}
  0x00007f0d387c69a4: 0f1f 8400 | 0000 0000 | e93b d9ff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c69c0: ;   {other}
  0x00007f0d387c69c0: d20f 1f84 | 0000 0000 | 00e9 74d9 | ffff 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c69dc: ;   {other}
  0x00007f0d387c69dc: ffd2 0f1f | 8400 0000 | 0000 e928 | dbff ff49 | 8bf7 49ba | 00cb b84e | 0d7f 0000 

  0x00007f0d387c69f8: ;   {other}
  0x00007f0d387c69f8: 41ff d20f | 1f84 0000 | 0000 00e9 | 28bb ffff | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 
  0x00007f0d387c6a18: ;   {other}
  0x00007f0d387c6a18: 0f1f 8400 | 0000 0000 | e9a4 bbff | ffbe 45ff | ffff 4c8b | 5424 104c | 8914 2444 | 8b54 247c 
  0x00007f0d387c6a38: 4489 5424 | 4044 8944 

  0x00007f0d387c6a40: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6a40: 2464 90e8 

  0x00007f0d387c6a44: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@4 (line 1098)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c6a44: 387b 7cff 

  0x00007f0d387c6a48: ;   {other}
  0x00007f0d387c6a48: 0f1f 8400 | b85a 008d | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c6a60: ;   {other}
  0x00007f0d387c6a60: 0f1f 8400 | 0000 0000 | e9c3 beff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c6a7c: ;   {other}
  0x00007f0d387c6a7c: d20f 1f84 | 0000 0000 | 00e9 50be | ffff 498b | f749 ba00 | cbb8 4e0d | 7f00 0041 

  0x00007f0d387c6a98: ;   {other}
  0x00007f0d387c6a98: ffd2 0f1f | 8400 0000 | 0000 e95c | c0ff ffbe | 45ff ffff | 488b 6c24 | 1044 8b5c | 2460 4489 
  0x00007f0d387c6ab8: 5c24 5844 | 8954 2460 

  0x00007f0d387c6ac0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6ac0: 6666 90e8 

  0x00007f0d387c6ac4: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c6ac4: b87a 7cff 

  0x00007f0d387c6ac8: ;   {other}
  0x00007f0d387c6ac8: 0f1f 8400 | 385b 008e | be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5c24 7c44 | 895c 2440 
  0x00007f0d387c6ae8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6ae8: 6666 90e8 

  0x00007f0d387c6aec: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c6aec: 907a 7cff 

  0x00007f0d387c6af0: ;   {other}
  0x00007f0d387c6af0: 0f1f 8400 | 605b 008f | be45 ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 | 4489 4424 
  0x00007f0d387c6b10: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6b10: 6066 90e8 

  0x00007f0d387c6b14: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c6b14: 687a 7cff 

  0x00007f0d387c6b18: ;   {other}
  0x00007f0d387c6b18: 0f1f 8400 | 885b 0090 | be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5424 7c44 | 8954 2440 
  0x00007f0d387c6b38: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6b38: 6666 90e8 

  0x00007f0d387c6b3c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::collect@21 (line 532)
                      ; - ax.xz.fuzz.RegisterSet::of@23 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c6b3c: 407a 7cff 

  0x00007f0d387c6b40: ;   {other}
  0x00007f0d387c6b40: 0f1f 8400 | b05b 0091 | 4d3b c2bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007f0d387c6b60: 8b5c 2410 | 4c89 1c24 | 4c8b 9c24 | 8000 0000 | 4c89 5c24 | 084c 8b9c | 2498 0000 | 004c 895c 
  0x00007f0d387c6b80: 2410 4c8b | 9c24 a000 | 0000 4c89 | 5c24 2844 | 8b5c 247c | 4489 5c24 | 4044 8b9c | 2490 0000 
  0x00007f0d387c6ba0: 0044 895c | 2444 8b8c | 2494 0000 | 0089 8c24 | 8000 0000 | 4c8b 9c24 | a800 0000 | 4c89 9c24 
  0x00007f0d387c6bc0: 9000 0000 | 899c 2484 | 0000 004c | 8994 2498 | 0000 0044 | 898c 24a0 | 0000 004c | 8984 24a8 
  0x00007f0d387c6be0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6be0: 0000 00e8 

  0x00007f0d387c6be4: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [112]=Oop [144]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Long::compare@13 (line 1629)
                      ; - java.time.Instant::compareTo@8 (line 1283)
                      ; - java.time.Instant::isAfter@2 (line 1300)
                      ; - ax.xz.fuzz.Main::main@695 (line 87)
  0x00007f0d387c6be4: 9879 7cff 

  0x00007f0d387c6be8: ;   {other}
  0x00007f0d387c6be8: 0f1f 8400 | 585c 0092 | 4d8b c245 | 33d2 4d3b | c2bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed 
  0x00007f0d387c6c08: be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 4c8b | 9424 8000 | 0000 4c89 | 5424 084c | 8b94 2498 
  0x00007f0d387c6c28: 0000 004c | 8954 2410 | 4c8b 9424 | d800 0000 | 4c89 5424 | 184c 8b94 | 24a0 0000 | 004c 8954 
  0x00007f0d387c6c48: 2428 448b | 5c24 7c44 | 895c 2440 | 448b 9424 | 9000 0000 | 4489 5424 | 444c 8b94 | 24b0 0000 
  0x00007f0d387c6c68: 004c 8954 | 2450 448b | 9c24 9400 | 0000 4489 | 9c24 8000 | 0000 4c8b | 9424 a800 | 0000 4c89 
  0x00007f0d387c6c88: 9424 9000 | 0000 4c89 | 8424 b000 

  0x00007f0d387c6c94: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6c94: 0000 90e8 

  0x00007f0d387c6c98: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [80]=Oop [112]=Oop [144]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.foreign.AbstractMemorySegmentImpl::checkBounds@26 (line 397)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 104)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asSlice@3 (line 69)
                      ; - ax.xz.fuzz.Main::main@659 (line 82)
  0x00007f0d387c6c98: e478 7cff 

  0x00007f0d387c6c9c: ;   {other}
  0x00007f0d387c6c9c: 0f1f 8400 | 0c5d 0093 | 458b 5cec | 1445 85db | 0f84 44eb | ffff 4d8b | 5728 498b | fb48 c1e7 
  0x00007f0d387c6cbc: 034d 85d2 | 0f84 0e03 | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d | 8957 28e9 | 1aeb ffff 
  0x00007f0d387c6cdc: 458b 5cec | 1445 85db | 0f84 88eb | ffff 4d8b | 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 f302 
  0x00007f0d387c6cfc: 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d | 8957 28e9 | 5eeb ffff | 4d8b 5758 | 4d8b 5f48 
  0x00007f0d387c6d1c: f083 4424 | c000 803f | 000f 8409 | ebff ff44 | 8827 4d85 | db75 1d49 | 8bf7 49ba | 20cb b84e 
  0x00007f0d387c6d3c: 0d7f 0000 

  0x00007f0d387c6d40: ;   {other}
  0x00007f0d387c6d40: 41ff d20f | 1f84 0000 | 0000 00e9 | e4ea ffff | 4b89 7c1a | f849 83c3 | f84d 895f | 48e9 d2ea 
  0x00007f0d387c6d60: ffff 4d8b | 5758 4d8b | 5f48 f083 | 4424 c000 | 803f 000f | 8437 ebff | ff44 8827 | 4d85 db75 
  0x00007f0d387c6d80: 1d49 8bf7 | 49ba 20cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c6d90: ;   {other}
  0x00007f0d387c6d90: d20f 1f84 | 0000 0000 | 00e9 12eb | ffff 4b89 | 7c1a f849 | 83c3 f84d | 895f 48e9 | 00eb ffff 
  0x00007f0d387c6db0: be5c ffff | ff4c 8b54 | 2410 4c89 | 1424 4c8b | 9424 8000 | 0000 4c89 | 5424 084c | 8b94 2498 
  0x00007f0d387c6dd0: 0000 004c | 8954 2410 | 448b 5424 | 7c44 8954 | 2440 448b | 9424 9000 | 0000 4489 | 5424 444c 
  0x00007f0d387c6df0: 8b94 24e8 | 0000 004c | 8954 2470 | 448b 9c24 | 9400 0000 | 4489 9c24 | 8000 0000 | 4489 8424 
  0x00007f0d387c6e10: 8400 0000 

  0x00007f0d387c6e14: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6e14: 6666 90e8 

  0x00007f0d387c6e18: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [112]=Oop [132]=NarrowOop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Objects::equals@6 (line 64)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@11
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d2c00::invoke@44
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3800::invoke@52
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@74
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@94
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3c00::linkToTargetMethod@6
                      ; - ax.xz.fuzz.ExecutionResult$Success::equals@2 (line 81)
                      ; - ax.xz.fuzz.Main::main@785 (line 96)
  0x00007f0d387c6e18: 6477 7cff 

  0x00007f0d387c6e1c: ;   {other}
  0x00007f0d387c6e1c: 0f1f 8400 | 8c5e 0094 

  0x00007f0d387c6e24: ;   {metadata({type array byte})}
  0x00007f0d387c6e24: 48be c022 | 00cf 0c7f | 0000 418b 

  0x00007f0d387c6e30: ;   {runtime_call _new_array_Java}
  0x00007f0d387c6e30: d166 90e8 

  0x00007f0d387c6e34: ; ImmutableOopMap {rbp=NarrowOop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allocateUninitializedArray0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.misc.Unsafe::allocateUninitializedArray@51 (line 1380)
                      ; - java.lang.StringConcatHelper::newArray@33 (line 511)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@34
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c6e34: c8db 89ff 

  0x00007f0d387c6e38: ;   {other}
  0x00007f0d387c6e38: 0f1f 8400 | a85e 0095 | e95d c9ff 

  0x00007f0d387c6e44: ;   {metadata('java/time/Instant')}
  0x00007f0d387c6e44: ff48 be68 | aa26 cf0c 

  0x00007f0d387c6e4c: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c6e4c: 7f00 00e8 

  0x00007f0d387c6e50: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.time.Instant::create@39 (line 416)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c6e50: ac5c 89ff 

  0x00007f0d387c6e54: ;   {other}
  0x00007f0d387c6e54: 0f1f 8400 | c45e 0096 | e921 cbff 

  0x00007f0d387c6e60: ;   {metadata({type array byte})}
  0x00007f0d387c6e60: ff48 bec0 | 2200 cf0c | 7f00 0041 

  0x00007f0d387c6e6c: ;   {runtime_call _new_array_Java}
  0x00007f0d387c6e6c: 8bd0 90e8 

  0x00007f0d387c6e70: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allocateUninitializedArray0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - jdk.internal.misc.Unsafe::allocateUninitializedArray@51 (line 1380)
                      ; - java.lang.StringConcatHelper::newArray@33 (line 511)
                      ; - java.lang.StringConcatHelper::newArrayWithSuffix@7 (line 489)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182c00::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@51
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c6e70: 8cdb 89ff 

  0x00007f0d387c6e74: ;   {other}
  0x00007f0d387c6e74: 0f1f 8400 | e45e 0097 | e9d8 ccff 

  0x00007f0d387c6e80: ;   {metadata('java/time/Instant')}
  0x00007f0d387c6e80: ff48 be68 | aa26 cf0c 

  0x00007f0d387c6e88: ;   {runtime_call _new_instance_Java}
  0x00007f0d387c6e88: 7f00 00e8 

  0x00007f0d387c6e8c: ; ImmutableOopMap {[16]=Oop [112]=Oop [128]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.time.Instant::create@39 (line 416)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c6e8c: 705c 89ff 

  0x00007f0d387c6e90: ;   {other}
  0x00007f0d387c6e90: 0f1f 8400 | 005f 0098 | 4c8b d0e9 | 97ce ffff | be8d ffff | ff48 8b6c | 2410 4c8b | 9424 8000 
  0x00007f0d387c6eb0: 0000 4c89 | 1424 448b | 5c24 7c44 | 895c 2418 | 4c8b 5424 | 704c 8954 | 2420 4889 | 5c24 704c 
  0x00007f0d387c6ed0: 896c 2478 | 4c89 b424 | 8000 0000 

  0x00007f0d387c6edc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6edc: 6666 90e8 

  0x00007f0d387c6ee0: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [152]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@562 (line 74)
  0x00007f0d387c6ee0: 9c76 7cff 

  0x00007f0d387c6ee4: ;   {other}
  0x00007f0d387c6ee4: 0f1f 8400 | 545f 0099 | be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 4c8b | 9424 8000 | 0000 4c89 
  0x00007f0d387c6f04: 5424 084c | 8b94 2498 | 0000 004c | 8954 2410 | 4c8b 9424 | d800 0000 | 4c89 5424 | 184c 8b94 
  0x00007f0d387c6f24: 24a0 0000 | 004c 8954 | 2428 448b | 5424 7c44 | 8954 2440 | 448b 9c24 | 9000 0000 | 4489 5c24 
  0x00007f0d387c6f44: 444c 8b94 | 24b0 0000 | 004c 8954 | 2450 4c8b | 9424 b800 | 0000 4c89 | 5424 584c | 8b94 24c0 
  0x00007f0d387c6f64: 0000 004c | 8954 2460 | 4c8b 9424 | c800 0000 | 4c89 5424 | 684c 8b94 | 24d0 0000 | 004c 8954 
  0x00007f0d387c6f84: 2478 448b | 9424 9400 | 0000 4489 | 9424 8000 | 0000 4c8b | 9424 f000 | 0000 4c89 | 9424 9800 
  0x00007f0d387c6fa4: 0000 4c8b | 9424 e000 | 0000 4c89 | 9424 a800 | 0000 448b | 9c24 e800 | 0000 4489 | 9c24 e000 
  0x00007f0d387c6fc4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c6fc4: 0000 90e8 

  0x00007f0d387c6fc8: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=Oop [152]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::limit@5 (line 379)
                      ; - java.nio.ByteBuffer::limit@2 (line 1565)
                      ; - java.nio.MappedByteBuffer::limit@2 (line 333)
                      ; - java.nio.MappedByteBuffer::limit@2 (line 73)
                      ; - java.nio.Buffer::<init>@39 (line 256)
                      ; - java.nio.ByteBuffer::<init>@8 (line 316)
                      ; - java.nio.ByteBuffer::<init>@10 (line 324)
                      ; - java.nio.MappedByteBuffer::<init>@8 (line 113)
                      ; - java.nio.DirectByteBuffer::<init>@7 (line 164)
                      ; - java.nio.Buffer$2::newDirectByteBuffer@10 (line 818)
                      ; - jdk.internal.foreign.NativeMemorySegmentImpl::makeByteBuffer@28 (line 92)
                      ; - jdk.internal.foreign.AbstractMemorySegmentImpl::asByteBuffer@9 (line 234)
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c6fc8: b475 7cff 

  0x00007f0d387c6fcc: ;   {other}
  0x00007f0d387c6fcc: 0f1f 8400 | 3c60 009a | 498b f749 | ba00 cbb8 | 4e0d 7f00 | 0041 ffd2 

  0x00007f0d387c6fe4: ;   {other}
  0x00007f0d387c6fe4: 0f1f 8400 | 0000 0000 | e905 e8ff | ff49 8bf7 | 49ba 00cb | b84e 0d7f | 0000 41ff 

  0x00007f0d387c7000: ;   {other}
  0x00007f0d387c7000: d20f 1f84 | 0000 0000 | 00e9 64e8 | ffff 4d63 | d3e9 24c7 | ffff bef6 | ffff ff48 | 8b6c 2410 
  0x00007f0d387c7020: 4c8b 9424 | 8000 0000 | 4c89 1424 | 448b 5424 | 7c44 8954 | 2438 4c8b | 5424 704c | 8954 2460 
  0x00007f0d387c7040: 4889 8424 | 8800 0000 

  0x00007f0d387c7048: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7048: 6666 90e8 

  0x00007f0d387c704c: ; ImmutableOopMap {rbp=Oop [0]=Oop [96]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@713 (line 88)
  0x00007f0d387c704c: 3075 7cff 

  0x00007f0d387c7050: ;   {other}
  0x00007f0d387c7050: 0f1f 8400 | c060 009b | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c7070: 9424 9800 | 0000 4c89 | 5424 0844 | 8b54 247c | 4489 5424 | 3844 8b9c | 2490 0000 | 0044 895c 
  0x00007f0d387c7090: 243c 4c8b | 5424 704c | 8954 2460 | 448b 9424 | 9400 0000 | 4489 5424 | 704c 8b94 | 24e8 0000 
  0x00007f0d387c70b0: 004c 8994 | 2498 0000 

  0x00007f0d387c70b8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c70b8: 0066 90e8 

  0x00007f0d387c70bc: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [96]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface until {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@5 (line 490)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c70bc: c074 7cff 

  0x00007f0d387c70c0: ;   {other}
  0x00007f0d387c70c0: 0f1f 8400 | 3061 009c | 4d63 d3e9 | 21ca ffff | bef6 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 
  0x00007f0d387c70e0: 2444 8b5c | 247c 4489 | 5c24 384c | 8b54 2470 | 4c89 5424 | 6048 8984 | 2488 0000 

  0x00007f0d387c70fc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c70fc: 0066 90e8 

  0x00007f0d387c7100: ; ImmutableOopMap {rbp=Oop [0]=Oop [96]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual println {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@747 (line 89)
  0x00007f0d387c7100: 7c74 7cff 

  0x00007f0d387c7104: ;   {other}
  0x00007f0d387c7104: 0f1f 8400 | 7461 009d | becf ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c7124: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b5c 247c | 4489 5c24 | 3844 8b94 
  0x00007f0d387c7144: 2490 0000 | 0044 8954 | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9c24 | 9400 0000 | 4489 5c24 
  0x00007f0d387c7164: 704c 8b94 | 24a8 0000 | 004c 8994 | 2480 0000 | 004c 8984 | 2498 0000 | 004c 898c | 24a8 0000 
  0x00007f0d387c7184: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7184: 0066 90e8 

  0x00007f0d387c7188: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [128]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic addExact {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::ofEpochSecond@8 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c7188: f473 7cff 

  0x00007f0d387c718c: ;   {other}
  0x00007f0d387c718c: 0f1f 8400 | fc61 009e | becf ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c71ac: 9424 9800 | 0000 4c89 | 5424 0844 | 8b54 247c | 4489 5424 | 3844 8b9c | 2490 0000 | 0044 895c 
  0x00007f0d387c71cc: 243c 4c8b | 5424 704c | 8954 2460 | 448b 9424 | 9400 0000 | 4489 5424 | 704c 8984 | 2490 0000 
  0x00007f0d387c71ec: 004c 898c | 2498 0000 

  0x00007f0d387c71f4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c71f4: 0066 90e8 

  0x00007f0d387c71f8: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [96]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic addExact {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Duration::toMillis@43 (line 1241)
                      ; - ax.xz.fuzz.Main::main@733 (line 89)
  0x00007f0d387c71f8: 8473 7cff 

  0x00007f0d387c71fc: ;   {other}
  0x00007f0d387c71fc: 0f1f 8400 | 6c62 009f | becf ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c721c: 004c 8954 | 2408 448b | 5c24 7c44 | 895c 2438 | 448b 9424 | 9000 0000 | 4489 5424 | 3c4c 8b54 
  0x00007f0d387c723c: 2470 4c89 | 5424 6044 | 8b9c 2494 | 0000 0044 | 895c 2470 | 4c89 8424 | 8800 0000 | 4c89 8c24 
  0x00007f0d387c725c: 9800 0000 

  0x00007f0d387c7260: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7260: 6666 90e8 

  0x00007f0d387c7264: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [96]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic addExact {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::ofEpochSecond@8 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c7264: 1873 7cff 

  0x00007f0d387c7268: ;   {other}
  0x00007f0d387c7268: 0f1f 8400 | d862 00a0 | 4d8b d349 | bb00 1464 | 1410 e38f | ff4d 3bd3 | bdff ffff | ff7c 0840 
  0x00007f0d387c7288: 0f95 c540 | 0fb6 edbe | 45ff ffff | 4c8b 5424 | 104c 8914 | 244c 8b94 | 2480 0000 | 004c 8954 
  0x00007f0d387c72a8: 2408 4c8b | 9424 9800 | 0000 4c89 | 5424 1044 | 8b54 247c | 4489 5424 | 4044 8b9c | 2490 0000 
  0x00007f0d387c72c8: 0044 895c | 2444 4c8b | 5424 704c | 8954 2468 | 448b 9424 | 9400 0000 | 4489 5424 

  0x00007f0d387c72e4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c72e4: 7866 90e8 

  0x00007f0d387c72e8: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [104]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@18 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c72e8: 9472 7cff 

  0x00007f0d387c72ec: ;   {other}
  0x00007f0d387c72ec: 0f1f 8400 | 5c63 00a1 | 4c8b d549 | bb00 1464 | 1410 e38f | ff4d 3bd3 | bdff ffff | ff7c 0840 
  0x00007f0d387c730c: 0f95 c540 | 0fb6 edbe | 45ff ffff | 4c8b 5424 | 104c 8914 | 244c 8b94 | 2480 0000 | 004c 8954 
  0x00007f0d387c732c: 2408 4c8b | 5424 704c | 8954 2468 

  0x00007f0d387c7338: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7338: 6666 90e8 

  0x00007f0d387c733c: ; ImmutableOopMap {[0]=Oop [8]=Oop [104]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@18 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c733c: 4072 7cff 

  0x00007f0d387c7340: ;   {other}
  0x00007f0d387c7340: 0f1f 8400 | b063 00a2 | be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 4c8b | 9424 8000 | 0000 4c89 
  0x00007f0d387c7360: 5424 084c | 8b94 2498 | 0000 004c | 8954 2410 | 4c8b 5424 | 704c 8954 | 2468 448b | 9c24 9400 
  0x00007f0d387c7380: 0000 4489 | 5c24 7844 | 898c 2494 

  0x00007f0d387c738c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c738c: 0000 00e8 

  0x00007f0d387c7390: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [104]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.StringConcatHelper::newArray@13 (line 508)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@10
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0181c00::invoke@34
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@6
                      ; - ax.xz.fuzz.Main::main@708 (line 88)
  0x00007f0d387c7390: ec71 7cff 

  0x00007f0d387c7394: ;   {other}
  0x00007f0d387c7394: 0f1f 8400 | 0464 00a3 | 49c7 c3ff | ffff ff49 | 3bc3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 
  0x00007f0d387c73b4: edbe 45ff | ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 
  0x00007f0d387c73d4: 9800 0000 | 4c89 5424 | 1044 8b54 | 247c 4489 | 5424 4044 | 8b9c 2490 | 0000 0044 | 895c 2444 
  0x00007f0d387c73f4: 4c8b 5424 | 704c 8954 | 2468 448b | 9424 9400 | 0000 4489 

  0x00007f0d387c7408: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7408: 5424 78e8 

  0x00007f0d387c740c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [104]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Clock::currentInstant@14 (line 500)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c740c: 7071 7cff 

  0x00007f0d387c7410: ;   {other}
  0x00007f0d387c7410: 0f1f 8400 | 8064 00a4 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c7430: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 | 9800 0000 
  0x00007f0d387c7450: 4c89 5424 | 104c 8b94 | 24a0 0000 | 004c 8954 | 2428 448b | 5c24 7c44 | 895c 2440 | 448b 9424 
  0x00007f0d387c7470: 9000 0000 | 4489 5424 | 444c 8b94 | 24b8 0000 | 004c 8954 | 2450 4c8b | 5424 704c | 8954 2468 
  0x00007f0d387c7490: 448b 9c24 | 9400 0000 | 4489 5c24 | 784c 8b94 | 24a8 0000 | 004c 8994 | 2488 0000 | 0044 8b94 
  0x00007f0d387c74b0: 24b0 0000 | 0044 8954 | 247c 4c89 | 8424 b000 | 0000 4c89 | 8c24 b800 

  0x00007f0d387c74c8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c74c8: 0000 90e8 

  0x00007f0d387c74cc: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [80]=Oop [104]=Oop [124]=NarrowOop [136]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Math::floorDiv@10 (line 1537)
                      ; - java.time.Instant::ofEpochSecond@5 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c74cc: b070 7cff 

  0x00007f0d387c74d0: ;   {other}
  0x00007f0d387c74d0: 0f1f 8400 | 4065 00a5 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c74f0: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 | 9800 0000 
  0x00007f0d387c7510: 4c89 5424 | 1044 8b5c | 247c 4489 | 5c24 4044 | 8b94 2490 | 0000 0044 | 8954 2444 | 4c8b 5424 
  0x00007f0d387c7530: 704c 8954 | 2468 448b | 9c24 9400 | 0000 4489 

  0x00007f0d387c7540: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7540: 5c24 78e8 

  0x00007f0d387c7544: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [104]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@6 (line 410)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c7544: 3870 7cff 

  0x00007f0d387c7548: ;   {other}
  0x00007f0d387c7548: 0f1f 8400 | b865 00a6 | 4d8b d349 | bbff 7895 | fad2 1c70 | 004d 3bd3 | bdff ffff | ff7c 0840 
  0x00007f0d387c7568: 0f95 c540 | 0fb6 edbe | 45ff ffff | 4c8b 5424 | 104c 8914 | 244c 8b94 | 2480 0000 | 004c 8954 
  0x00007f0d387c7588: 2408 4c8b | 9424 9800 | 0000 4c89 | 5424 1044 | 8b5c 247c | 4489 5c24 | 4044 8b94 | 2490 0000 
  0x00007f0d387c75a8: 0044 8954 | 2444 4c8b | 5424 704c | 8954 2468 | 448b 9c24 | 9400 0000 | 4489 5c24 

  0x00007f0d387c75c4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c75c4: 7866 90e8 

  0x00007f0d387c75c8: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [104]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@26 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@727 (line 89)
  0x00007f0d387c75c8: b46f 7cff 

  0x00007f0d387c75cc: ;   {other}
  0x00007f0d387c75cc: 0f1f 8400 | 3c66 00a7 | be45 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c75ec: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b5c 247c | 4489 5c24 | 3844 8b94 
  0x00007f0d387c760c: 2490 0000 | 0044 8954 | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9c24 | 9400 0000 | 4489 5c24 
  0x00007f0d387c762c: 704c 8b94 | 24f0 0000 | 004c 8994 | 2498 0000 | 0044 8984 | 24a0 0000 

  0x00007f0d387c7644: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7644: 0066 90e8 

  0x00007f0d387c7648: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.StringConcatHelper::newArray@13 (line 508)
                      ; - java.lang.StringConcatHelper::newArrayWithSuffix@7 (line 489)
                      ; - java.lang.invoke.DirectMethodHandle$Holder::invokeStatic@13
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0182c00::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd0183c00::invoke@51
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                      ; - ax.xz.fuzz.Main::main@742 (line 89)
  0x00007f0d387c7648: 346f 7cff 

  0x00007f0d387c764c: ;   {other}
  0x00007f0d387c764c: 0f1f 8400 | bc66 00a8 | 49c7 c3ff | ffff ff49 | 3bc3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 
  0x00007f0d387c766c: edbe 45ff | ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 5424 
  0x00007f0d387c768c: 704c 8954 

  0x00007f0d387c7690: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7690: 2468 90e8 

  0x00007f0d387c7694: ; ImmutableOopMap {[0]=Oop [8]=Oop [104]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Clock::currentInstant@14 (line 500)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c7694: e86e 7cff 

  0x00007f0d387c7698: ;   {other}
  0x00007f0d387c7698: 0f1f 8400 | 0867 00a9 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c76b8: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 9424 | 9800 0000 
  0x00007f0d387c76d8: 4c89 5424 | 104c 8b94 | 24a0 0000 | 004c 8954 | 2428 448b | 9c24 9000 | 0000 4489 | 5c24 444c 
  0x00007f0d387c76f8: 8b54 2470 | 4c89 5424 | 6844 8b94 | 2494 0000 | 0044 8954 | 2478 4c8b | 9424 a800 | 0000 4c89 
  0x00007f0d387c7718: 9424 8800 | 0000 4c89 | 8424 a000 | 0000 4c89 | 8c24 a800 

  0x00007f0d387c772c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c772c: 0000 90e8 

  0x00007f0d387c7730: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [104]=Oop [136]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Math::floorDiv@10 (line 1537)
                      ; - java.time.Instant::ofEpochSecond@5 (line 332)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c7730: 4c6e 7cff 

  0x00007f0d387c7734: ;   {other}
  0x00007f0d387c7734: 0f1f 8400 | a467 00aa | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007f0d387c7754: ffff 4c8b | 5424 104c | 8914 244c | 8b94 2480 | 0000 004c | 8954 2408 | 4c8b 5424 | 704c 8954 
  0x00007f0d387c7774: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7774: 2468 90e8 

  0x00007f0d387c7778: ; ImmutableOopMap {[0]=Oop [8]=Oop [104]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@6 (line 410)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c7778: 046e 7cff 

  0x00007f0d387c777c: ;   {other}
  0x00007f0d387c777c: 0f1f 8400 | ec67 00ab | 4c8b d549 | bbff 7895 | fad2 1c70 | 004d 3bd3 | bdff ffff | ff7c 0840 
  0x00007f0d387c779c: 0f95 c540 | 0fb6 edbe | 45ff ffff | 4c8b 5424 | 104c 8914 | 244c 8b94 | 2480 0000 | 004c 8954 
  0x00007f0d387c77bc: 2408 4c8b | 5424 704c | 8954 2468 

  0x00007f0d387c77c8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c77c8: 6666 90e8 

  0x00007f0d387c77cc: ; ImmutableOopMap {[0]=Oop [8]=Oop [104]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.time.Instant::create@26 (line 413)
                      ; - java.time.Instant::ofEpochSecond@27 (line 334)
                      ; - java.time.Clock::currentInstant@80 (line 527)
                      ; - java.time.Instant::now@0 (line 277)
                      ; - ax.xz.fuzz.Main::main@750 (line 90)
  0x00007f0d387c77cc: b06d 7cff 

  0x00007f0d387c77d0: ;   {other}
  0x00007f0d387c77d0: 0f1f 8400 | 4068 00ac | bede ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 | 4489 4424 
  0x00007f0d387c77f0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c77f0: 6066 90e8 

  0x00007f0d387c77f4: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::of@28 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c77f4: 886d 7cff 

  0x00007f0d387c77f8: ;   {other}
  0x00007f0d387c77f8: 0f1f 8400 | 6868 00ad | be66 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5c24 7c44 | 895c 2440 
  0x00007f0d387c7818: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7818: 6666 90e8 

  0x00007f0d387c781c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c781c: 606d 7cff 

  0x00007f0d387c7820: ;   {other}
  0x00007f0d387c7820: 0f1f 8400 | 9068 00ae | bede ffff | ff48 8b6c | 2410 448b | 5c24 6044 | 895c 2458 | 4489 5424 
  0x00007f0d387c7840: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7840: 6066 90e8 

  0x00007f0d387c7844: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::of@28 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c7844: 386d 7cff 

  0x00007f0d387c7848: ;   {other}
  0x00007f0d387c7848: 0f1f 8400 | b868 00af | be66 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5424 7c44 | 8954 2440 
  0x00007f0d387c7868: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7868: 6666 90e8 

  0x00007f0d387c786c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c786c: 106d 7cff 

  0x00007f0d387c7870: ;   {other}
  0x00007f0d387c7870: 0f1f 8400 | e068 00b0 | be66 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c7890: 9424 9800 | 0000 4c89 | 5424 084c | 8b94 24a0 | 0000 004c | 8954 2420 | 448b 9424 | 9000 0000 
  0x00007f0d387c78b0: 4489 5424 | 3c4c 8b94 | 24e8 0000 | 004c 8954 | 2468 448b | 9c24 9400 | 0000 4489 | 5c24 784c 
  0x00007f0d387c78d0: 8b94 24a8 | 0000 004c | 8994 2488 

  0x00007f0d387c78dc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c78dc: 0000 00e8 

  0x00007f0d387c78e0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [104]=Oop [136]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic linkToSpecial {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.invoke.LambdaForm$DMH/0x00007f0cd0009c00::invokeSpecial@11
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d2800::invoke@23
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@34
                      ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@14
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3400::guard@94
                      ; - java.lang.invoke.LambdaForm$MH/0x00007f0cd00d3c00::linkToTargetMethod@6
                      ; - ax.xz.fuzz.ExecutionResult$Success::equals@2 (line 81)
                      ; - ax.xz.fuzz.Main::main@785 (line 96)
  0x00007f0d387c78e0: 9c6c 7cff 

  0x00007f0d387c78e4: ;   {other}
  0x00007f0d387c78e4: 0f1f 8400 | 5469 00b1 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7904: 5c24 7c44 | 895c 2438 | 4c8b 5424 | 704c 8954 

  0x00007f0d387c7914: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7914: 2468 90e8 

  0x00007f0d387c7918: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [136]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@566 (line 74)
  0x00007f0d387c7918: 646c 7cff 

  0x00007f0d387c791c: ;   {other}
  0x00007f0d387c791c: 0f1f 8400 | 8c69 00b2 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 4c8b 
  0x00007f0d387c793c: 9424 8800 | 0000 4c89 | 5424 1044 | 8b5c 247c | 4489 5c24 | 3844 8b94 | 2490 0000 | 0044 8954 
  0x00007f0d387c795c: 243c 4c8b | 5424 704c | 8954 2460 | 448b 9c24 | 9400 0000 | 4489 5c24 

  0x00007f0d387c7974: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7974: 7066 90e8 

  0x00007f0d387c7978: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [96]=Oop [152]=Oop [160]=Oop [176]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@580 (line 75)
  0x00007f0d387c7978: 046c 7cff 

  0x00007f0d387c797c: ;   {other}
  0x00007f0d387c797c: 0f1f 8400 | ec69 00b3 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9c24 8000 | 0000 4c89 | 1c24 4c8b 
  0x00007f0d387c799c: 9c24 9800 | 0000 4c89 | 5c24 084c | 8b9c 2488 | 0000 004c | 895c 2410 | 448b 5c24 | 7c44 895c 
  0x00007f0d387c79bc: 2438 448b | 8424 9000 | 0000 4489 | 4424 3c4c | 8b5c 2470 | 4c89 5c24 | 6044 8b9c | 2494 0000 
  0x00007f0d387c79dc: 0044 895c | 2470 4489 | 9424 8c00 

  0x00007f0d387c79e8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c79e8: 0000 90e8 

  0x00007f0d387c79ec: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop [96]=Oop [140]=NarrowOop [160]=Oop [176]=Oop [184]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@585 (line 75)
  0x00007f0d387c79ec: 906b 7cff 

  0x00007f0d387c79f0: ;   {other}
  0x00007f0d387c79f0: 0f1f 8400 | 606a 00b4 | bef6 ffff | ff48 8b6c | 2410 448b | 5c24 7c44 | 895c 2430 | 4c8b 5424 
  0x00007f0d387c7a10: 704c 8954 

  0x00007f0d387c7a14: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7a14: 2460 90e8 

  0x00007f0d387c7a18: ; ImmutableOopMap {rbp=Oop [96]=Oop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [256]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface asByteBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@598 (line 78)
  0x00007f0d387c7a18: 646b 7cff 

  0x00007f0d387c7a1c: ;   {other}
  0x00007f0d387c7a1c: 0f1f 8400 | 8c6a 00b5 | 4533 c0e9 | e9d9 ffff | 41b8 0100 | 0000 e9de | d9ff ffbe | f4ff ffff 
  0x00007f0d387c7a3c: 488b 6c24 | 104c 8b94 | 2480 0000 | 004c 8914 | 244c 8b54 | 2470 4c89 

  0x00007f0d387c7a54: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7a54: 5424 68e8 

  0x00007f0d387c7a58: ; ImmutableOopMap {rbp=Oop [0]=Oop [104]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@671 (line 84)
  0x00007f0d387c7a58: 246b 7cff 

  0x00007f0d387c7a5c: ;   {other}
  0x00007f0d387c7a5c: 0f1f 8400 | cc6a 00b6 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7a7c: 5424 7c44 | 8954 2438 | 4c8b 5424 | 704c 8954 | 2460 4489 | 4c24 744c | 8984 2488 

  0x00007f0d387c7a98: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7a98: 0000 00e8 

  0x00007f0d387c7a9c: ; ImmutableOopMap {rbp=Oop [0]=Oop [96]=Oop [152]=Oop [160]=Oop [168]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual plusSeconds {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@692 (line 87)
  0x00007f0d387c7a9c: e06a 7cff 

  0x00007f0d387c7aa0: ;   {other}
  0x00007f0d387c7aa0: 0f1f 8400 | 106b 00b7 | bef6 ffff | ff48 8b6c | 2410 4c8b | 5424 704c | 8954 2460 

  0x00007f0d387c7abc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7abc: 6666 90e8 

  0x00007f0d387c7ac0: ; ImmutableOopMap {rbp=Oop [96]=Oop [152]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@539 (line 70)
  0x00007f0d387c7ac0: bc6a 7cff 

  0x00007f0d387c7ac4: ;   {other}
  0x00007f0d387c7ac4: 0f1f 8400 | 346b 00b8 | bef6 ffff | ff48 8b6c | 2410 4c8b | 5424 704c | 8954 2460 

  0x00007f0d387c7ae0: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7ae0: 6666 90e8 

  0x00007f0d387c7ae4: ; ImmutableOopMap {rbp=Oop [0]=Oop [96]=Oop [160]=Oop [176]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface fill {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@547 (line 71)
  0x00007f0d387c7ae4: 986a 7cff 

  0x00007f0d387c7ae8: ;   {other}
  0x00007f0d387c7ae8: 0f1f 8400 | 586b 00b9 | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7af8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7af8: 2410 90e8 

  0x00007f0d387c7afc: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisters@26 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c7afc: 806a 7cff 

  0x00007f0d387c7b00: ;   {other}
  0x00007f0d387c7b00: 0f1f 8400 | 706b 00ba | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7b10: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b10: 2410 90e8 

  0x00007f0d387c7b14: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisters@26 (line 225)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@1 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c7b14: 686a 7cff 

  0x00007f0d387c7b18: ;   {other}
  0x00007f0d387c7b18: 0f1f 8400 | 886b 00bb | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7b28: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b28: 2410 90e8 

  0x00007f0d387c7b2c: ; ImmutableOopMap {rbp=Oop [128]=Oop [152]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@356 (line 51)
  0x00007f0d387c7b2c: 506a 7cff 

  0x00007f0d387c7b30: ;   {other}
  0x00007f0d387c7b30: 0f1f 8400 | a06b 00bc | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7b40: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b40: 2410 90e8 

  0x00007f0d387c7b44: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allowedRegisters {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@361 (line 51)
  0x00007f0d387c7b44: 386a 7cff 

  0x00007f0d387c7b48: ;   {other}
  0x00007f0d387c7b48: 0f1f 8400 | b86b 00bd | bef4 ffff | ff48 8b6c 

  0x00007f0d387c7b58: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b58: 2410 90e8 

  0x00007f0d387c7b5c: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::of@28 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@366 (line 51)
  0x00007f0d387c7b5c: 206a 7cff 

  0x00007f0d387c7b60: ;   {other}
  0x00007f0d387c7b60: 0f1f 8400 | d06b 00be | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7b70: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b70: 2410 90e8 

  0x00007f0d387c7b74: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7b74: 086a 7cff 

  0x00007f0d387c7b78: ;   {other}
  0x00007f0d387c7b78: 0f1f 8400 | e86b 00bf | bef6 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5c24 7c44 | 895c 2440 
  0x00007f0d387c7b98: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7b98: 6666 90e8 

  0x00007f0d387c7b9c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.BitSet::trimToSize@8 (line 1117)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7b9c: e069 7cff 

  0x00007f0d387c7ba0: ;   {other}
  0x00007f0d387c7ba0: 0f1f 8400 | 106c 00c0 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7bc0: 5424 7c44 | 8954 2438 | 448b 5424 | 6044 8954 | 2458 4c8b | 9424 b800 | 0000 4c89 

  0x00007f0d387c7bdc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7bdc: 5424 78e8 

  0x00007f0d387c7be0: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [104]=Oop [120]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7be0: 9c69 7cff 

  0x00007f0d387c7be4: ;   {other}
  0x00007f0d387c7be4: 0f1f 8400 | 546c 00c1 | bef6 ffff | ff48 8b6c | 2410 448b | 5424 6044 | 8954 2458 

  0x00007f0d387c7c00: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7c00: 6666 90e8 

  0x00007f0d387c7c04: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual andNot {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7c04: 7869 7cff 

  0x00007f0d387c7c08: ;   {other}
  0x00007f0d387c7c08: 0f1f 8400 | 786c 00c2 | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7c18: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7c18: 2410 90e8 

  0x00007f0d387c7c1c: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual allowedRegisters {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@388 (line 52)
  0x00007f0d387c7c1c: 6069 7cff 

  0x00007f0d387c7c20: ;   {other}
  0x00007f0d387c7c20: 0f1f 8400 | 906c 00c3 | bef4 ffff | ff48 8b6c 

  0x00007f0d387c7c30: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7c30: 2410 90e8 

  0x00007f0d387c7c34: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [100]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::of@28 (line 57)
                      ; - ax.xz.fuzz.RegisterSet::getAssociatedRegisterSet@4 (line 236)
                      ; - ax.xz.fuzz.Main::main@393 (line 52)
  0x00007f0d387c7c34: 4869 7cff 

  0x00007f0d387c7c38: ;   {other}
  0x00007f0d387c7c38: 0f1f 8400 | a86c 00c4 | bef6 ffff | ff48 8b6c 

  0x00007f0d387c7c48: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7c48: 2410 90e8 

  0x00007f0d387c7c4c: ; ImmutableOopMap {rbp=Oop [96]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7c4c: 3069 7cff 

  0x00007f0d387c7c50: ;   {other}
  0x00007f0d387c7c50: 0f1f 8400 | c06c 00c5 | bef6 ffff | ff4c 8b54 | 2410 4c89 | 1424 448b | 5424 7c44 | 8954 2440 
  0x00007f0d387c7c70: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7c70: 6666 90e8 

  0x00007f0d387c7c74: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [96]=NarrowOop [104]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.BitSet::trimToSize@8 (line 1117)
                      ; - java.util.BitSet::clone@8 (line 1099)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7c74: 0869 7cff 

  0x00007f0d387c7c78: ;   {other}
  0x00007f0d387c7c78: 0f1f 8400 | e86c 00c6 | bef6 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7c98: 5424 7c44 | 8954 2438 | 448b 5424 | 6044 8954 | 2458 4c8b | 9424 b800 | 0000 4c89 

  0x00007f0d387c7cb4: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7cb4: 5424 78e8 

  0x00007f0d387c7cb8: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [104]=Oop [120]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7cb8: c468 7cff 

  0x00007f0d387c7cbc: ;   {other}
  0x00007f0d387c7cbc: 0f1f 8400 | 2c6d 00c7 | bef6 ffff | ff48 8b6c | 2410 448b | 5424 6044 | 8954 2458 

  0x00007f0d387c7cd8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7cd8: 6666 90e8 

  0x00007f0d387c7cdc: ; ImmutableOopMap {rbp=Oop [88]=NarrowOop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual andNot {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.RegisterSet::subtract@13 (line 165)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7cdc: a068 7cff 

  0x00007f0d387c7ce0: ;   {other}
  0x00007f0d387c7ce0: 0f1f 8400 | 506d 00c8 | be97 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7d00: 5424 7c44 | 8954 2438 | 448b 5424 | 6044 8954 | 2458 4c8b | 9424 b800 | 0000 4c89 

  0x00007f0d387c7d1c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7d1c: 5424 78e8 

  0x00007f0d387c7d20: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [92]=NarrowOop [104]=Oop [120]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7d20: 5c68 7cff 

  0x00007f0d387c7d24: ;   {other}
  0x00007f0d387c7d24: 0f1f 8400 | 946d 00c9 | be97 ffff | ff48 8b6c | 2410 4c8b | 9424 8000 | 0000 4c89 | 1424 448b 
  0x00007f0d387c7d44: 5424 7c44 | 8954 2438 | 448b 5424 | 6044 8954 | 2458 4c8b | 9424 b800 | 0000 4c89 

  0x00007f0d387c7d60: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7d60: 5424 78e8 

  0x00007f0d387c7d64: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [92]=NarrowOop [104]=Oop [120]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@24 (line 1103)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7d64: 1868 7cff 

  0x00007f0d387c7d68: ;   {other}
  0x00007f0d387c7d68: 0f1f 8400 | d86d 00ca | be97 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 2444 8b54 | 247c 4489 
  0x00007f0d387c7d88: 5424 3844 | 8b54 2460 | 4489 5424 

  0x00007f0d387c7d94: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7d94: 5866 90e8 

  0x00007f0d387c7d98: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [104]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@369 (line 51)
  0x00007f0d387c7d98: e467 7cff 

  0x00007f0d387c7d9c: ;   {other}
  0x00007f0d387c7d9c: 0f1f 8400 | 0c6e 00cb | be97 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 2444 8b54 | 247c 4489 
  0x00007f0d387c7dbc: 5424 3844 | 8b54 2460 | 4489 5424 

  0x00007f0d387c7dc8: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7dc8: 5866 90e8 

  0x00007f0d387c7dcc: ; ImmutableOopMap {rbp=Oop [0]=Oop [88]=NarrowOop [104]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [216]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokespecial clone {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.BitSet::clone@12 (line 1102)
                      ; - ax.xz.fuzz.RegisterSet::copyOf@8 (line 112)
                      ; - ax.xz.fuzz.RegisterSet::subtract@1 (line 164)
                      ; - ax.xz.fuzz.Main::main@396 (line 52)
  0x00007f0d387c7dcc: b067 7cff 

  0x00007f0d387c7dd0: ;   {other}
  0x00007f0d387c7dd0: 0f1f 8400 | 406e 00cc 

  0x00007f0d387c7dd8: ;   {runtime_call _rethrow_Java}
  0x00007f0d387c7dd8: 488b f0e8 

  0x00007f0d387c7ddc: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokeinterface until {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.time.Duration::between@5 (line 490)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c7ddc: 2024 8aff 

  0x00007f0d387c7de0: ;   {other}
  0x00007f0d387c7de0: 0f1f 8400 | 506e 00cd 

  0x00007f0d387c7de8: ;   {runtime_call _rethrow_Java}
  0x00007f0d387c7de8: 488b f0e8 

  0x00007f0d387c7dec: ; ImmutableOopMap {rbp=Oop [16]=Oop [112]=Oop [128]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokestatic ofNanos {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.time.Duration::between@10 (line 490)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c7dec: 1024 8aff 

  0x00007f0d387c7df0: ;   {other}
  0x00007f0d387c7df0: 0f1f 8400 | 606e 00ce | bef6 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 2444 8b5c | 247c 4489 
  0x00007f0d387c7e10: 5c24 384c | 8b54 2470 | 4c89 5424 

  0x00007f0d387c7e1c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c7e1c: 6066 90e8 

  0x00007f0d387c7e20: ; ImmutableOopMap {rbp=Oop [0]=Oop [96]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*invokevirtual toMillis {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@733 (line 89)
  0x00007f0d387c7e20: 5c67 7cff 

  0x00007f0d387c7e24: ;   {other}
  0x00007f0d387c7e24: 0f1f 8400 | 946e 00cf | eb00 488b | e8e9 9201 | 0000 eb28 | eb44 e9b7 | 0000 00e9 | aa00 0000 
  0x00007f0d387c7e44: 488b f0e9 | a301 0000 | e9a5 0000 | 00e9 a000 | 0000 e99b | 0000 00e9 | 9600 0000 | 488b e8e9 
  0x00007f0d387c7e64: 6001 0000 | e989 0000 | 00e9 8400 | 0000 488b | e8e9 4e01 | 0000 eb72 | eb70 488b | e8e9 4201 
  0x00007f0d387c7e84: 0000 eb66 | eb00 488b | e8e9 3601 | 0000 eb00 | 488b e8e9 | 2c01 0000 | 488b e8e9 | 2401 0000 
  0x00007f0d387c7ea4: 488b e8e9 | 1c01 0000 | 488b e8e9 | 1401 0000 | 488b e8e9 | 0c01 0000 | e9ff 0000 | 00e9 fa00 
  0x00007f0d387c7ec4: 0000 e9f5 | 0000 00e9 | f000 0000 | 488b e8e9 | f000 0000 | e9d8 0000 | 00e9 d300 | 0000 e9ce 
  0x00007f0d387c7ee4: 0000 00e9 | c900 0000 | eb00 488b | e8e9 d200 | 0000 488b | e8e9 ca00 | 0000 eb02 | eb00 488b 
  0x00007f0d387c7f04: e8e9 be00 | 0000 eb02 | eb00 488b | e8e9 b200 | 0000 488b | e8e9 aa00 | 0000 488b 

  0x00007f0d387c7f20: ;   {no_reloc}
  0x00007f0d387c7f20: e8e9 a200 | 0000 488b | e8e9 9a00 | 0000 eb7a | eb78 eb76 | eb74 eb72 | 488b e8e9 | 8800 0000 
  0x00007f0d387c7f40: 488b e8e9 | 8000 0000 | 488b e8eb | 7b48 8bf5 

  0x00007f0d387c7f50: ;   {optimized virtual_call}
  0x00007f0d387c7f50: 488b d0e8 

  0x00007f0d387c7f54: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual addSuppressed {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@961 (line 18)
  0x00007f0d387c7f54: 28d8 7bff 

  0x00007f0d387c7f58: ;   {other}
  0x00007f0d387c7f58: 0f1f 8400 | c86f 00d0 | e987 0000 | 00eb 5948 | 8be8 eb5c | eb47 488b | e8eb 5548 | 8be8 eb50 
  0x00007f0d387c7f78: 488b e8eb | 4b48 8be8 | eb46 488b | e8eb 4148 | 8be8 eb3c | 488b e8eb | 3748 8be8 | eb32 488b 
  0x00007f0d387c7f98: e8eb 2d48 | 8be8 eb28 | 488b e8eb | 2348 8be8 | eb1e 488b | e8eb 19eb | 04eb 02eb | 0048 8be8 
  0x00007f0d387c7fb8: eb0e eb04 | eb02 eb00 | 488b e8eb | 0348 8be8 | 488b 7424 | 1048 85f6 | 741a 6666 | 9048 b8ff 
  0x00007f0d387c7fd8: ffff ffff 

  0x00007f0d387c7fdc: ;   {virtual_call}
  0x00007f0d387c7fdc: ffff ffe8 

  0x00007f0d387c7fe0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface close {reexecute=0 rethrow=0 return_oop=0}
                      ; - ax.xz.fuzz.Main::main@950 (line 18)
  0x00007f0d387c7fe0: 9cdc 7bff 

  0x00007f0d387c7fe4: ;   {other}
  0x00007f0d387c7fe4: 0f1f 8400 | 5470 00d1 | 488b f548 | 81c4 4001 

  0x00007f0d387c7ff4: ;   {runtime_call _rethrow_Java}
  0x00007f0d387c7ff4: 0000 5de9 | 0422 8aff | beb5 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c8014: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b54 247c | 4489 5424 | 3844 8b9c 
  0x00007f0d387c8034: 2490 0000 | 0044 895c | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9424 | 9400 0000 | 4489 5424 
  0x00007f0d387c8054: 7048 8984 | 24a0 0000 

  0x00007f0d387c805c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c805c: 0066 90e8 

  0x00007f0d387c8060: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@14 (line 491)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c8060: 1c65 7cff 

  0x00007f0d387c8064: ;   {other}
  0x00007f0d387c8064: 0f1f 8400 | d470 00d2 | beb5 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c8084: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b5c 247c | 4489 5c24 | 3844 8b94 
  0x00007f0d387c80a4: 2490 0000 | 0044 8954 | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9c24 | 9400 0000 | 4489 5c24 
  0x00007f0d387c80c4: 7048 8984 | 24a0 0000 

  0x00007f0d387c80cc: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c80cc: 0066 90e8 

  0x00007f0d387c80d0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@14 (line 491)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c80d0: ac64 7cff 

  0x00007f0d387c80d4: ;   {other}
  0x00007f0d387c80d4: 0f1f 8400 | 4471 00d3 | beb5 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c80f4: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b54 247c | 4489 5424 | 3844 8b9c 
  0x00007f0d387c8114: 2490 0000 | 0044 895c | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9424 | 9400 0000 | 4489 5424 
  0x00007f0d387c8134: 7048 8984 | 24a0 0000 

  0x00007f0d387c813c: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c813c: 0066 90e8 

  0x00007f0d387c8140: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@14 (line 491)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c8140: 3c64 7cff 

  0x00007f0d387c8144: ;   {other}
  0x00007f0d387c8144: 0f1f 8400 | b471 00d4 | beb5 ffff | ff4c 8b94 | 2480 0000 | 004c 8914 | 244c 8b94 | 2498 0000 
  0x00007f0d387c8164: 004c 8954 | 2408 4c8b | 9424 a000 | 0000 4c89 | 5424 2044 | 8b5c 247c | 4489 5c24 | 3844 8b94 
  0x00007f0d387c8184: 2490 0000 | 0044 8954 | 243c 4c8b | 5424 704c | 8954 2460 | 448b 9c24 | 9400 0000 | 4489 5c24 
  0x00007f0d387c81a4: 7048 8984 | 24a0 0000 

  0x00007f0d387c81ac: ;   {runtime_call UncommonTrapBlob}
  0x00007f0d387c81ac: 0066 90e8 

  0x00007f0d387c81b0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [96]=Oop [160]=Oop [168]=Oop [176]=NarrowOop [184]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop [264]=Oop [272]=Oop [280]=Oop [288]=Oop }
                      ;*astore_2 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.time.Duration::between@14 (line 491)
                      ; - ax.xz.fuzz.Main::main@730 (line 89)
  0x00007f0d387c81b0: cc63 7cff 

  0x00007f0d387c81b4: ;   {other}
  0x00007f0d387c81b4: 0f1f 8400 | 2472 00d5 

  0x00007f0d387c81bc: ;   {runtime_call StubRoutines (final stubs)}
  0x00007f0d387c81bc: e81f 517a | ffe9 4896 | ffff f4f4 
[Stub Code]
  0x00007f0d387c81c8: ;   {no_reloc}
  0x00007f0d387c81c8: 48bb 0000 | 0000 0000 

  0x00007f0d387c81d0: ;   {runtime_call}
  0x00007f0d387c81d0: 0000 e9fb 

  0x00007f0d387c81d4: ;   {static_stub}
  0x00007f0d387c81d4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d387c81e0: ;   {runtime_call}
  0x00007f0d387c81e0: 00e9 fbff 

  0x00007f0d387c81e4: ;   {static_stub}
  0x00007f0d387c81e4: ffff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d387c81f0: ;   {runtime_call}
  0x00007f0d387c81f0: e9fb ffff 

  0x00007f0d387c81f4: ;   {static_stub}
  0x00007f0d387c81f4: ff48 bb00 | 0000 0000 

  0x00007f0d387c81fc: ;   {runtime_call}
  0x00007f0d387c81fc: 0000 00e9 | fbff ffff 

  0x00007f0d387c8204: ;   {static_stub}
  0x00007f0d387c8204: 48bb 0000 | 0000 0000 

  0x00007f0d387c820c: ;   {runtime_call}
  0x00007f0d387c820c: 0000 e9fb 

  0x00007f0d387c8210: ;   {static_stub}
  0x00007f0d387c8210: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d387c821c: ;   {runtime_call}
  0x00007f0d387c821c: 00e9 fbff 

  0x00007f0d387c8220: ;   {static_stub}
  0x00007f0d387c8220: ffff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d387c822c: ;   {runtime_call}
  0x00007f0d387c822c: e9fb ffff 

  0x00007f0d387c8230: ;   {static_stub}
  0x00007f0d387c8230: ff48 bb00 | 0000 0000 

  0x00007f0d387c8238: ;   {runtime_call}
  0x00007f0d387c8238: 0000 00e9 | fbff ffff 

  0x00007f0d387c8240: ;   {static_stub}
  0x00007f0d387c8240: 48bb 0000 | 0000 0000 

  0x00007f0d387c8248: ;   {runtime_call}
  0x00007f0d387c8248: 0000 e9fb 

  0x00007f0d387c824c: ;   {static_stub}
  0x00007f0d387c824c: ffff ff48 | bb00 db26 | cf0c 7f00 

  0x00007f0d387c8258: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8258: 00e9 ad97 

  0x00007f0d387c825c: ;   {static_stub}
  0x00007f0d387c825c: 7bff 48bb | 08b7 42cf | 0c7f 0000 

  0x00007f0d387c8268: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8268: e999 5a79 

  0x00007f0d387c826c: ;   {static_stub}
  0x00007f0d387c826c: ff48 bbf0 | 4a42 cf0c 

  0x00007f0d387c8274: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8274: 7f00 00e9 | 8a5a 79ff 

  0x00007f0d387c827c: ;   {static_stub}
  0x00007f0d387c827c: 48bb 0000 | 0000 0000 

  0x00007f0d387c8284: ;   {runtime_call}
  0x00007f0d387c8284: 0000 e9fb 

  0x00007f0d387c8288: ;   {static_stub}
  0x00007f0d387c8288: ffff ff48 | bbf0 942a | cf0c 7f00 

  0x00007f0d387c8294: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8294: 00e9 6985 

  0x00007f0d387c8298: ;   {static_stub}
  0x00007f0d387c8298: 79ff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d387c82a4: ;   {runtime_call}
  0x00007f0d387c82a4: e9fb ffff 

  0x00007f0d387c82a8: ;   {static_stub}
  0x00007f0d387c82a8: ff48 bb00 | 0000 0000 

  0x00007f0d387c82b0: ;   {runtime_call}
  0x00007f0d387c82b0: 0000 00e9 | fbff ffff 

  0x00007f0d387c82b8: ;   {static_stub}
  0x00007f0d387c82b8: 48bb 0000 | 0000 0000 

  0x00007f0d387c82c0: ;   {runtime_call}
  0x00007f0d387c82c0: 0000 e9fb 

  0x00007f0d387c82c4: ;   {static_stub}
  0x00007f0d387c82c4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d387c82d0: ;   {runtime_call}
  0x00007f0d387c82d0: 00e9 fbff 

  0x00007f0d387c82d4: ;   {static_stub}
  0x00007f0d387c82d4: ffff 48bb | 583a 16cf | 0c7f 0000 

  0x00007f0d387c82e0: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c82e0: e91f 9079 

  0x00007f0d387c82e4: ;   {static_stub}
  0x00007f0d387c82e4: ff48 bb00 | 0000 0000 

  0x00007f0d387c82ec: ;   {runtime_call}
  0x00007f0d387c82ec: 0000 00e9 | fbff ffff 

  0x00007f0d387c82f4: ;   {static_stub}
  0x00007f0d387c82f4: 48bb 0000 | 0000 0000 

  0x00007f0d387c82fc: ;   {runtime_call}
  0x00007f0d387c82fc: 0000 e9fb 

  0x00007f0d387c8300: ;   {static_stub}
  0x00007f0d387c8300: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d387c830c: ;   {runtime_call}
  0x00007f0d387c830c: 00e9 fbff 

  0x00007f0d387c8310: ;   {static_stub}
  0x00007f0d387c8310: ffff 48bb | 7846 42cf | 0c7f 0000 

  0x00007f0d387c831c: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c831c: e9ed 807d 

  0x00007f0d387c8320: ;   {static_stub}
  0x00007f0d387c8320: ff48 bb50 | 4c42 cf0c 

  0x00007f0d387c8328: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8328: 7f00 00e9 | 575d 7cff 

  0x00007f0d387c8330: ;   {static_stub}
  0x00007f0d387c8330: 48bb 0000 | 0000 0000 

  0x00007f0d387c8338: ;   {runtime_call}
  0x00007f0d387c8338: 0000 e9fb 

  0x00007f0d387c833c: ;   {static_stub}
  0x00007f0d387c833c: ffff ff48 | bb98 3d46 | cf0c 7f00 

  0x00007f0d387c8348: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8348: 00e9 b934 

  0x00007f0d387c834c: ;   {static_stub}
  0x00007f0d387c834c: 7cff 48bb | e048 42cf | 0c7f 0000 

  0x00007f0d387c8358: ;   {runtime_call I2C/C2I adapters}
  0x00007f0d387c8358: e9b2 967d 

  0x00007f0d387c835c: ;   {static_stub}
  0x00007f0d387c835c: ff48 bb00 | 0000 0000 

  0x00007f0d387c8364: ;   {runtime_call}
  0x00007f0d387c8364: 0000 00e9 | fbff ffff 

  0x00007f0d387c836c: ;   {static_stub}
  0x00007f0d387c836c: 48bb 0000 | 0000 0000 

  0x00007f0d387c8374: ;   {runtime_call}
  0x00007f0d387c8374: 0000 e9fb 

  0x00007f0d387c8378: ;   {static_stub}
  0x00007f0d387c8378: ffff ff48 | bb00 0000 | 0000 0000 

  0x00007f0d387c8384: ;   {runtime_call}
  0x00007f0d387c8384: 00e9 fbff 

  0x00007f0d387c8388: ;   {static_stub}
  0x00007f0d387c8388: ffff 48bb | 0000 0000 | 0000 0000 

  0x00007f0d387c8394: ;   {runtime_call}
  0x00007f0d387c8394: e9fb ffff 

  0x00007f0d387c8398: ;   {static_stub}
  0x00007f0d387c8398: ff48 bb00 | 0000 0000 

  0x00007f0d387c83a0: ;   {runtime_call}
  0x00007f0d387c83a0: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x00007f0d387c83a8: ;   {runtime_call ExceptionBlob}
  0x00007f0d387c83a8: e9d3 5089 | ffe8 0000 | 0000 4883 

  0x00007f0d387c83b4: ;   {runtime_call DeoptimizationBlob}
  0x00007f0d387c83b4: 2c24 05e9 | e464 7cff | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00007f0ca04c8c90, length=12, elements={
0x00007f0d4802aea0, 0x00007f0d4812e310, 0x00007f0d4812f960, 0x00007f0d48131440,
0x00007f0d48132a80, 0x00007f0d48134020, 0x00007f0d48135b60, 0x00007f0d48137220,
0x00007f0d4815c610, 0x00007f0d481caee0, 0x00007f0d481cc610, 0x00007f0cb8000ff0
}

Java Threads: ( => current thread )
=>0x00007f0d4802aea0 JavaThread "main"                              [_thread_in_native, id=107665, stack(0x00007f0d4e300000,0x00007f0d4e400000) (1024K)]
  0x00007f0d4812e310 JavaThread "Reference Handler"          daemon [_thread_blocked, id=107675, stack(0x00007f0d25300000,0x00007f0d25400000) (1024K)]
  0x00007f0d4812f960 JavaThread "Finalizer"                  daemon [_thread_blocked, id=107676, stack(0x00007f0d251ff000,0x00007f0d252ff000) (1024K)]
  0x00007f0d48131440 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=107677, stack(0x00007f0d250fe000,0x00007f0d251fe000) (1024K)]
  0x00007f0d48132a80 JavaThread "Service Thread"             daemon [_thread_blocked, id=107678, stack(0x00007f0d24ffd000,0x00007f0d250fd000) (1024K)]
  0x00007f0d48134020 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=107679, stack(0x00007f0d24efc000,0x00007f0d24ffc000) (1024K)]
  0x00007f0d48135b60 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=107680, stack(0x00007f0d24dfb000,0x00007f0d24efb000) (1024K)]
  0x00007f0d48137220 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=107681, stack(0x00007f0d24cfa000,0x00007f0d24dfa000) (1024K)]
  0x00007f0d4815c610 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=107683, stack(0x00007f0d24b29000,0x00007f0d24c29000) (1024K)]
  0x00007f0d481caee0 JavaThread "Monitor Ctrl-Break"         daemon [_thread_in_native, id=107686, stack(0x00007f0d24826000,0x00007f0d24926000) (1024K)]
  0x00007f0d481cc610 JavaThread "Notification Thread"        daemon [_thread_blocked, id=107687, stack(0x00007f0d24725000,0x00007f0d24825000) (1024K)]
  0x00007f0cb8000ff0 JavaThread "Attach Listener"            daemon [_thread_blocked, id=107706, stack(0x00007f0ccef00000,0x00007f0ccf000000) (1024K)]
Total: 12

Other Threads:
  0x00007f0d4811fee0 VMThread "VM Thread"                           [id=107674, stack(0x00007f0d25758000,0x00007f0d25858000) (1024K)]
  0x00007f0d48105d20 WatcherThread "VM Periodic Task Thread"        [id=107673, stack(0x00007f0d25859000,0x00007f0d25959000) (1024K)]
  0x00007f0d48055bd0 WorkerThread "GC Thread#0"                     [id=107666, stack(0x00007f0d4c7d0000,0x00007f0d4c8d0000) (1024K)]
  0x00007f0cbc008330 WorkerThread "GC Thread#1"                     [id=107699, stack(0x00007f0d24624000,0x00007f0d24724000) (1024K)]
  0x00007f0cbc008e10 WorkerThread "GC Thread#2"                     [id=107700, stack(0x00007f0d24523000,0x00007f0d24623000) (1024K)]
  0x00007f0cbc0098f0 WorkerThread "GC Thread#3"                     [id=107701, stack(0x00007f0d24422000,0x00007f0d24522000) (1024K)]
  0x00007f0cbc00a7c0 WorkerThread "GC Thread#4"                     [id=107702, stack(0x00007f0d24321000,0x00007f0d24421000) (1024K)]
  0x00007f0cbc00b690 WorkerThread "GC Thread#5"                     [id=107703, stack(0x00007f0d24220000,0x00007f0d24320000) (1024K)]
  0x00007f0cbc00c1a0 WorkerThread "GC Thread#6"                     [id=107704, stack(0x00007f0d2411f000,0x00007f0d2421f000) (1024K)]
  0x00007f0cbc00ccd0 WorkerThread "GC Thread#7"                     [id=107705, stack(0x00007f0d2401e000,0x00007f0d2411e000) (1024K)]
  0x00007f0d48066af0 ConcurrentGCThread "G1 Main Marker"            [id=107667, stack(0x00007f0d4c6cf000,0x00007f0d4c7cf000) (1024K)]
  0x00007f0d48067a90 WorkerThread "G1 Conc#0"                       [id=107668, stack(0x00007f0d4c5ce000,0x00007f0d4c6ce000) (1024K)]
  0x00007f0d480f3590 ConcurrentGCThread "G1 Refine#0"               [id=107669, stack(0x00007f0d25adc000,0x00007f0d25bdc000) (1024K)]
  0x00007f0d480f4540 ConcurrentGCThread "G1 Service"                [id=107670, stack(0x00007f0d259db000,0x00007f0d25adb000) (1024K)]
Total: 14

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x000000060dc00000, size: 7972 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x00007f0ccf000000-0x00007f0ccfca5000-0x00007f0ccfca5000), size 13258752, SharedBaseAddress: 0x00007f0ccf000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x00007f0cd0000000-0x00007f0d10000000, reserved size: 1073741824
Narrow klass base: 0x00007f0ccf000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 32 size 80 Howl #buckets 8 coarsen threshold 7372 Howl Bitmap #cards 1024 size 144 coarsen threshold 921 Card regions per heap region 1 cards per card region 8192
 CPUs: 8 total, 8 available
 Memory: 31886M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 4M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 500M
 Heap Max Capacity: 7972M
 Pre-touch: Disabled
 Parallel Workers: 8
 Concurrent Workers: 2
 Concurrent Refinement Workers: 8
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 1032192K, used 601836K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 120 young (491520K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x000000060dc00000, 0x000000060e000000, 0x000000060e000000|100%| O|  |TAMS 0x000000060dc00000| PB 0x000000060dc00000| Untracked 
|   1|0x000000060e000000, 0x000000060e400000, 0x000000060e400000|100%| O|  |TAMS 0x000000060e000000| PB 0x000000060e000000| Untracked 
|   2|0x000000060e400000, 0x000000060e800000, 0x000000060e800000|100%| O|  |TAMS 0x000000060e400000| PB 0x000000060e400000| Untracked 
|   3|0x000000060e800000, 0x000000060ec00000, 0x000000060ec00000|100%| O|  |TAMS 0x000000060e800000| PB 0x000000060e800000| Untracked 
|   4|0x000000060ec00000, 0x000000060f000000, 0x000000060f000000|100%| O|  |TAMS 0x000000060ec00000| PB 0x000000060ec00000| Untracked 
|   5|0x000000060f000000, 0x000000060f400000, 0x000000060f400000|100%| O|  |TAMS 0x000000060f000000| PB 0x000000060f000000| Untracked 
|   6|0x000000060f400000, 0x000000060f800000, 0x000000060f800000|100%| O|  |TAMS 0x000000060f400000| PB 0x000000060f400000| Untracked 
|   7|0x000000060f800000, 0x000000060fc00000, 0x000000060fc00000|100%| O|  |TAMS 0x000000060f800000| PB 0x000000060f800000| Untracked 
|   8|0x000000060fc00000, 0x0000000610000000, 0x0000000610000000|100%| O|  |TAMS 0x000000060fc00000| PB 0x000000060fc00000| Untracked 
|   9|0x0000000610000000, 0x0000000610400000, 0x0000000610400000|100%| O|  |TAMS 0x0000000610000000| PB 0x0000000610000000| Untracked 
|  10|0x0000000610400000, 0x0000000610800000, 0x0000000610800000|100%| O|  |TAMS 0x0000000610400000| PB 0x0000000610400000| Untracked 
|  11|0x0000000610800000, 0x0000000610c00000, 0x0000000610c00000|100%| O|  |TAMS 0x0000000610800000| PB 0x0000000610800000| Untracked 
|  12|0x0000000610c00000, 0x0000000611000000, 0x0000000611000000|100%| O|  |TAMS 0x0000000610c00000| PB 0x0000000610c00000| Untracked 
|  13|0x0000000611000000, 0x0000000611400000, 0x0000000611400000|100%| O|  |TAMS 0x0000000611000000| PB 0x0000000611000000| Untracked 
|  14|0x0000000611400000, 0x0000000611800000, 0x0000000611800000|100%| O|  |TAMS 0x0000000611400000| PB 0x0000000611400000| Untracked 
|  15|0x0000000611800000, 0x0000000611c00000, 0x0000000611c00000|100%| O|  |TAMS 0x0000000611800000| PB 0x0000000611800000| Untracked 
|  16|0x0000000611c00000, 0x0000000612000000, 0x0000000612000000|100%| O|  |TAMS 0x0000000611c00000| PB 0x0000000611c00000| Untracked 
|  17|0x0000000612000000, 0x0000000612400000, 0x0000000612400000|100%| O|  |TAMS 0x0000000612000000| PB 0x0000000612000000| Untracked 
|  18|0x0000000612400000, 0x0000000612800000, 0x0000000612800000|100%| O|  |TAMS 0x0000000612400000| PB 0x0000000612400000| Untracked 
|  19|0x0000000612800000, 0x0000000612c00000, 0x0000000612c00000|100%| O|  |TAMS 0x0000000612800000| PB 0x0000000612800000| Untracked 
|  20|0x0000000612c00000, 0x0000000613000000, 0x0000000613000000|100%| O|  |TAMS 0x0000000612c00000| PB 0x0000000612c00000| Untracked 
|  21|0x0000000613000000, 0x0000000613400000, 0x0000000613400000|100%| O|  |TAMS 0x0000000613000000| PB 0x0000000613000000| Untracked 
|  22|0x0000000613400000, 0x0000000613800000, 0x0000000613800000|100%| O|  |TAMS 0x0000000613400000| PB 0x0000000613400000| Untracked 
|  23|0x0000000613800000, 0x0000000613c00000, 0x0000000613c00000|100%| O|  |TAMS 0x0000000613800000| PB 0x0000000613800000| Untracked 
|  24|0x0000000613c00000, 0x0000000614000000, 0x0000000614000000|100%| O|  |TAMS 0x0000000613c00000| PB 0x0000000613c00000| Untracked 
|  25|0x0000000614000000, 0x0000000614400000, 0x0000000614400000|100%| O|  |TAMS 0x0000000614000000| PB 0x0000000614000000| Untracked 
|  26|0x0000000614400000, 0x0000000614800000, 0x0000000614800000|100%| O|  |TAMS 0x0000000614400000| PB 0x0000000614400000| Untracked 
|  27|0x0000000614800000, 0x0000000614c00000, 0x0000000614c00000|100%| O|  |TAMS 0x0000000614800000| PB 0x0000000614800000| Untracked 
|  28|0x0000000614c00000, 0x0000000614eaf378, 0x0000000615000000| 67%| O|  |TAMS 0x0000000614c00000| PB 0x0000000614c00000| Untracked 
|  29|0x0000000615000000, 0x0000000615000000, 0x0000000615400000|  0%| F|  |TAMS 0x0000000615000000| PB 0x0000000615000000| Untracked 
|  30|0x0000000615400000, 0x0000000615400000, 0x0000000615800000|  0%| F|  |TAMS 0x0000000615400000| PB 0x0000000615400000| Untracked 
|  31|0x0000000615800000, 0x0000000615800000, 0x0000000615c00000|  0%| F|  |TAMS 0x0000000615800000| PB 0x0000000615800000| Untracked 
|  32|0x0000000615c00000, 0x0000000615c00000, 0x0000000616000000|  0%| F|  |TAMS 0x0000000615c00000| PB 0x0000000615c00000| Untracked 
|  33|0x0000000616000000, 0x0000000616000000, 0x0000000616400000|  0%| F|  |TAMS 0x0000000616000000| PB 0x0000000616000000| Untracked 
|  34|0x0000000616400000, 0x0000000616400000, 0x0000000616800000|  0%| F|  |TAMS 0x0000000616400000| PB 0x0000000616400000| Untracked 
|  35|0x0000000616800000, 0x0000000616800000, 0x0000000616c00000|  0%| F|  |TAMS 0x0000000616800000| PB 0x0000000616800000| Untracked 
|  36|0x0000000616c00000, 0x0000000616c00000, 0x0000000617000000|  0%| F|  |TAMS 0x0000000616c00000| PB 0x0000000616c00000| Untracked 
|  37|0x0000000617000000, 0x0000000617000000, 0x0000000617400000|  0%| F|  |TAMS 0x0000000617000000| PB 0x0000000617000000| Untracked 
|  38|0x0000000617400000, 0x0000000617400000, 0x0000000617800000|  0%| F|  |TAMS 0x0000000617400000| PB 0x0000000617400000| Untracked 
|  39|0x0000000617800000, 0x0000000617800000, 0x0000000617c00000|  0%| F|  |TAMS 0x0000000617800000| PB 0x0000000617800000| Untracked 
|  40|0x0000000617c00000, 0x0000000617c00000, 0x0000000618000000|  0%| F|  |TAMS 0x0000000617c00000| PB 0x0000000617c00000| Untracked 
|  41|0x0000000618000000, 0x0000000618000000, 0x0000000618400000|  0%| F|  |TAMS 0x0000000618000000| PB 0x0000000618000000| Untracked 
|  42|0x0000000618400000, 0x0000000618400000, 0x0000000618800000|  0%| F|  |TAMS 0x0000000618400000| PB 0x0000000618400000| Untracked 
|  43|0x0000000618800000, 0x0000000618800000, 0x0000000618c00000|  0%| F|  |TAMS 0x0000000618800000| PB 0x0000000618800000| Untracked 
|  44|0x0000000618c00000, 0x0000000618c00000, 0x0000000619000000|  0%| F|  |TAMS 0x0000000618c00000| PB 0x0000000618c00000| Untracked 
|  45|0x0000000619000000, 0x0000000619000000, 0x0000000619400000|  0%| F|  |TAMS 0x0000000619000000| PB 0x0000000619000000| Untracked 
|  46|0x0000000619400000, 0x0000000619400000, 0x0000000619800000|  0%| F|  |TAMS 0x0000000619400000| PB 0x0000000619400000| Untracked 
|  47|0x0000000619800000, 0x0000000619800000, 0x0000000619c00000|  0%| F|  |TAMS 0x0000000619800000| PB 0x0000000619800000| Untracked 
|  48|0x0000000619c00000, 0x0000000619c00000, 0x000000061a000000|  0%| F|  |TAMS 0x0000000619c00000| PB 0x0000000619c00000| Untracked 
|  49|0x000000061a000000, 0x000000061a000000, 0x000000061a400000|  0%| F|  |TAMS 0x000000061a000000| PB 0x000000061a000000| Untracked 
|  50|0x000000061a400000, 0x000000061a400000, 0x000000061a800000|  0%| F|  |TAMS 0x000000061a400000| PB 0x000000061a400000| Untracked 
|  51|0x000000061a800000, 0x000000061a800000, 0x000000061ac00000|  0%| F|  |TAMS 0x000000061a800000| PB 0x000000061a800000| Untracked 
|  52|0x000000061ac00000, 0x000000061ac00000, 0x000000061b000000|  0%| F|  |TAMS 0x000000061ac00000| PB 0x000000061ac00000| Untracked 
|  53|0x000000061b000000, 0x000000061b000000, 0x000000061b400000|  0%| F|  |TAMS 0x000000061b000000| PB 0x000000061b000000| Untracked 
|  54|0x000000061b400000, 0x000000061b400000, 0x000000061b800000|  0%| F|  |TAMS 0x000000061b400000| PB 0x000000061b400000| Untracked 
|  55|0x000000061b800000, 0x000000061b800000, 0x000000061bc00000|  0%| F|  |TAMS 0x000000061b800000| PB 0x000000061b800000| Untracked 
|  56|0x000000061bc00000, 0x000000061bc00000, 0x000000061c000000|  0%| F|  |TAMS 0x000000061bc00000| PB 0x000000061bc00000| Untracked 
|  57|0x000000061c000000, 0x000000061c000000, 0x000000061c400000|  0%| F|  |TAMS 0x000000061c000000| PB 0x000000061c000000| Untracked 
|  58|0x000000061c400000, 0x000000061c400000, 0x000000061c800000|  0%| F|  |TAMS 0x000000061c400000| PB 0x000000061c400000| Untracked 
|  59|0x000000061c800000, 0x000000061c800000, 0x000000061cc00000|  0%| F|  |TAMS 0x000000061c800000| PB 0x000000061c800000| Untracked 
|  60|0x000000061cc00000, 0x000000061cc00000, 0x000000061d000000|  0%| F|  |TAMS 0x000000061cc00000| PB 0x000000061cc00000| Untracked 
|  61|0x000000061d000000, 0x000000061d000000, 0x000000061d400000|  0%| F|  |TAMS 0x000000061d000000| PB 0x000000061d000000| Untracked 
|  62|0x000000061d400000, 0x000000061d400000, 0x000000061d800000|  0%| F|  |TAMS 0x000000061d400000| PB 0x000000061d400000| Untracked 
|  63|0x000000061d800000, 0x000000061d800000, 0x000000061dc00000|  0%| F|  |TAMS 0x000000061d800000| PB 0x000000061d800000| Untracked 
|  64|0x000000061dc00000, 0x000000061dc00000, 0x000000061e000000|  0%| F|  |TAMS 0x000000061dc00000| PB 0x000000061dc00000| Untracked 
|  65|0x000000061e000000, 0x000000061e000000, 0x000000061e400000|  0%| F|  |TAMS 0x000000061e000000| PB 0x000000061e000000| Untracked 
|  66|0x000000061e400000, 0x000000061e400000, 0x000000061e800000|  0%| F|  |TAMS 0x000000061e400000| PB 0x000000061e400000| Untracked 
|  67|0x000000061e800000, 0x000000061e800000, 0x000000061ec00000|  0%| F|  |TAMS 0x000000061e800000| PB 0x000000061e800000| Untracked 
|  68|0x000000061ec00000, 0x000000061ec00000, 0x000000061f000000|  0%| F|  |TAMS 0x000000061ec00000| PB 0x000000061ec00000| Untracked 
|  69|0x000000061f000000, 0x000000061f000000, 0x000000061f400000|  0%| F|  |TAMS 0x000000061f000000| PB 0x000000061f000000| Untracked 
|  70|0x000000061f400000, 0x000000061f400000, 0x000000061f800000|  0%| F|  |TAMS 0x000000061f400000| PB 0x000000061f400000| Untracked 
|  71|0x000000061f800000, 0x000000061f800000, 0x000000061fc00000|  0%| F|  |TAMS 0x000000061f800000| PB 0x000000061f800000| Untracked 
|  72|0x000000061fc00000, 0x000000061fc00000, 0x0000000620000000|  0%| F|  |TAMS 0x000000061fc00000| PB 0x000000061fc00000| Untracked 
|  73|0x0000000620000000, 0x0000000620000000, 0x0000000620400000|  0%| F|  |TAMS 0x0000000620000000| PB 0x0000000620000000| Untracked 
|  74|0x0000000620400000, 0x0000000620400000, 0x0000000620800000|  0%| F|  |TAMS 0x0000000620400000| PB 0x0000000620400000| Untracked 
|  75|0x0000000620800000, 0x0000000620800000, 0x0000000620c00000|  0%| F|  |TAMS 0x0000000620800000| PB 0x0000000620800000| Untracked 
|  76|0x0000000620c00000, 0x0000000620c00000, 0x0000000621000000|  0%| F|  |TAMS 0x0000000620c00000| PB 0x0000000620c00000| Untracked 
|  77|0x0000000621000000, 0x0000000621000000, 0x0000000621400000|  0%| F|  |TAMS 0x0000000621000000| PB 0x0000000621000000| Untracked 
|  78|0x0000000621400000, 0x0000000621400000, 0x0000000621800000|  0%| F|  |TAMS 0x0000000621400000| PB 0x0000000621400000| Untracked 
|  79|0x0000000621800000, 0x0000000621800000, 0x0000000621c00000|  0%| F|  |TAMS 0x0000000621800000| PB 0x0000000621800000| Untracked 
|  80|0x0000000621c00000, 0x0000000621c00000, 0x0000000622000000|  0%| F|  |TAMS 0x0000000621c00000| PB 0x0000000621c00000| Untracked 
|  81|0x0000000622000000, 0x0000000622000000, 0x0000000622400000|  0%| F|  |TAMS 0x0000000622000000| PB 0x0000000622000000| Untracked 
|  82|0x0000000622400000, 0x0000000622400000, 0x0000000622800000|  0%| F|  |TAMS 0x0000000622400000| PB 0x0000000622400000| Untracked 
|  83|0x0000000622800000, 0x0000000622800000, 0x0000000622c00000|  0%| F|  |TAMS 0x0000000622800000| PB 0x0000000622800000| Untracked 
|  84|0x0000000622c00000, 0x0000000622c00000, 0x0000000623000000|  0%| F|  |TAMS 0x0000000622c00000| PB 0x0000000622c00000| Untracked 
|  85|0x0000000623000000, 0x0000000623000000, 0x0000000623400000|  0%| F|  |TAMS 0x0000000623000000| PB 0x0000000623000000| Untracked 
|  86|0x0000000623400000, 0x0000000623400000, 0x0000000623800000|  0%| F|  |TAMS 0x0000000623400000| PB 0x0000000623400000| Untracked 
|  87|0x0000000623800000, 0x0000000623800000, 0x0000000623c00000|  0%| F|  |TAMS 0x0000000623800000| PB 0x0000000623800000| Untracked 
|  88|0x0000000623c00000, 0x0000000623c00000, 0x0000000624000000|  0%| F|  |TAMS 0x0000000623c00000| PB 0x0000000623c00000| Untracked 
|  89|0x0000000624000000, 0x0000000624000000, 0x0000000624400000|  0%| F|  |TAMS 0x0000000624000000| PB 0x0000000624000000| Untracked 
|  90|0x0000000624400000, 0x0000000624400000, 0x0000000624800000|  0%| F|  |TAMS 0x0000000624400000| PB 0x0000000624400000| Untracked 
|  91|0x0000000624800000, 0x0000000624800000, 0x0000000624c00000|  0%| F|  |TAMS 0x0000000624800000| PB 0x0000000624800000| Untracked 
|  92|0x0000000624c00000, 0x0000000624c00000, 0x0000000625000000|  0%| F|  |TAMS 0x0000000624c00000| PB 0x0000000624c00000| Untracked 
|  93|0x0000000625000000, 0x0000000625000000, 0x0000000625400000|  0%| F|  |TAMS 0x0000000625000000| PB 0x0000000625000000| Untracked 
|  94|0x0000000625400000, 0x0000000625400000, 0x0000000625800000|  0%| F|  |TAMS 0x0000000625400000| PB 0x0000000625400000| Untracked 
|  95|0x0000000625800000, 0x0000000625800000, 0x0000000625c00000|  0%| F|  |TAMS 0x0000000625800000| PB 0x0000000625800000| Untracked 
|  96|0x0000000625c00000, 0x0000000625c00000, 0x0000000626000000|  0%| F|  |TAMS 0x0000000625c00000| PB 0x0000000625c00000| Untracked 
|  97|0x0000000626000000, 0x0000000626000000, 0x0000000626400000|  0%| F|  |TAMS 0x0000000626000000| PB 0x0000000626000000| Untracked 
|  98|0x0000000626400000, 0x0000000626400000, 0x0000000626800000|  0%| F|  |TAMS 0x0000000626400000| PB 0x0000000626400000| Untracked 
|  99|0x0000000626800000, 0x0000000626800000, 0x0000000626c00000|  0%| F|  |TAMS 0x0000000626800000| PB 0x0000000626800000| Untracked 
| 100|0x0000000626c00000, 0x0000000626c04890, 0x0000000627000000|  0%| S|CS|TAMS 0x0000000626c00000| PB 0x0000000626c00000| Complete 
| 101|0x0000000627000000, 0x0000000627000000, 0x0000000627400000|  0%| F|  |TAMS 0x0000000627000000| PB 0x0000000627000000| Untracked 
| 102|0x0000000627400000, 0x0000000627400000, 0x0000000627800000|  0%| F|  |TAMS 0x0000000627400000| PB 0x0000000627400000| Untracked 
| 103|0x0000000627800000, 0x0000000627800000, 0x0000000627c00000|  0%| F|  |TAMS 0x0000000627800000| PB 0x0000000627800000| Untracked 
| 104|0x0000000627c00000, 0x0000000627c00000, 0x0000000628000000|  0%| F|  |TAMS 0x0000000627c00000| PB 0x0000000627c00000| Untracked 
| 105|0x0000000628000000, 0x0000000628000000, 0x0000000628400000|  0%| F|  |TAMS 0x0000000628000000| PB 0x0000000628000000| Untracked 
| 106|0x0000000628400000, 0x0000000628400000, 0x0000000628800000|  0%| F|  |TAMS 0x0000000628400000| PB 0x0000000628400000| Untracked 
| 107|0x0000000628800000, 0x0000000628800000, 0x0000000628c00000|  0%| F|  |TAMS 0x0000000628800000| PB 0x0000000628800000| Untracked 
| 108|0x0000000628c00000, 0x0000000628c00000, 0x0000000629000000|  0%| F|  |TAMS 0x0000000628c00000| PB 0x0000000628c00000| Untracked 
| 109|0x0000000629000000, 0x0000000629000000, 0x0000000629400000|  0%| F|  |TAMS 0x0000000629000000| PB 0x0000000629000000| Untracked 
| 110|0x0000000629400000, 0x0000000629400000, 0x0000000629800000|  0%| F|  |TAMS 0x0000000629400000| PB 0x0000000629400000| Untracked 
| 111|0x0000000629800000, 0x0000000629800000, 0x0000000629c00000|  0%| F|  |TAMS 0x0000000629800000| PB 0x0000000629800000| Untracked 
| 112|0x0000000629c00000, 0x0000000629c00000, 0x000000062a000000|  0%| F|  |TAMS 0x0000000629c00000| PB 0x0000000629c00000| Untracked 
| 113|0x000000062a000000, 0x000000062a000000, 0x000000062a400000|  0%| F|  |TAMS 0x000000062a000000| PB 0x000000062a000000| Untracked 
| 114|0x000000062a400000, 0x000000062a400000, 0x000000062a800000|  0%| F|  |TAMS 0x000000062a400000| PB 0x000000062a400000| Untracked 
| 115|0x000000062a800000, 0x000000062a800000, 0x000000062ac00000|  0%| F|  |TAMS 0x000000062a800000| PB 0x000000062a800000| Untracked 
| 116|0x000000062ac00000, 0x000000062ac00000, 0x000000062b000000|  0%| F|  |TAMS 0x000000062ac00000| PB 0x000000062ac00000| Untracked 
| 117|0x000000062b000000, 0x000000062b000000, 0x000000062b400000|  0%| F|  |TAMS 0x000000062b000000| PB 0x000000062b000000| Untracked 
| 118|0x000000062b400000, 0x000000062b400000, 0x000000062b800000|  0%| F|  |TAMS 0x000000062b400000| PB 0x000000062b400000| Untracked 
| 119|0x000000062b800000, 0x000000062b800000, 0x000000062bc00000|  0%| F|  |TAMS 0x000000062b800000| PB 0x000000062b800000| Untracked 
| 120|0x000000062bc00000, 0x000000062bc00000, 0x000000062c000000|  0%| F|  |TAMS 0x000000062bc00000| PB 0x000000062bc00000| Untracked 
| 121|0x000000062c000000, 0x000000062c000000, 0x000000062c400000|  0%| F|  |TAMS 0x000000062c000000| PB 0x000000062c000000| Untracked 
| 122|0x000000062c400000, 0x000000062c400000, 0x000000062c800000|  0%| F|  |TAMS 0x000000062c400000| PB 0x000000062c400000| Untracked 
| 123|0x000000062c800000, 0x000000062c800000, 0x000000062cc00000|  0%| F|  |TAMS 0x000000062c800000| PB 0x000000062c800000| Untracked 
| 124|0x000000062cc00000, 0x000000062cc00000, 0x000000062d000000|  0%| F|  |TAMS 0x000000062cc00000| PB 0x000000062cc00000| Untracked 
| 125|0x000000062d000000, 0x000000062d000000, 0x000000062d400000|  0%| F|  |TAMS 0x000000062d000000| PB 0x000000062d000000| Untracked 
| 126|0x000000062d400000, 0x000000062d400000, 0x000000062d800000|  0%| F|  |TAMS 0x000000062d400000| PB 0x000000062d400000| Untracked 
| 127|0x000000062d800000, 0x000000062d800000, 0x000000062dc00000|  0%| F|  |TAMS 0x000000062d800000| PB 0x000000062d800000| Untracked 
| 128|0x000000062dc00000, 0x000000062dc00000, 0x000000062e000000|  0%| F|  |TAMS 0x000000062dc00000| PB 0x000000062dc00000| Untracked 
| 129|0x000000062e000000, 0x000000062e000000, 0x000000062e400000|  0%| F|  |TAMS 0x000000062e000000| PB 0x000000062e000000| Untracked 
| 130|0x000000062e400000, 0x000000062e400000, 0x000000062e800000|  0%| F|  |TAMS 0x000000062e400000| PB 0x000000062e400000| Untracked 
| 131|0x000000062e800000, 0x000000062e800000, 0x000000062ec00000|  0%| F|  |TAMS 0x000000062e800000| PB 0x000000062e800000| Untracked 
| 132|0x000000062ec00000, 0x000000062f000000, 0x000000062f000000|100%| E|  |TAMS 0x000000062ec00000| PB 0x000000062ec00000| Complete 
| 133|0x000000062f000000, 0x000000062f400000, 0x000000062f400000|100%| E|CS|TAMS 0x000000062f000000| PB 0x000000062f000000| Complete 
| 134|0x000000062f400000, 0x000000062f800000, 0x000000062f800000|100%| E|CS|TAMS 0x000000062f400000| PB 0x000000062f400000| Complete 
| 135|0x000000062f800000, 0x000000062fc00000, 0x000000062fc00000|100%| E|CS|TAMS 0x000000062f800000| PB 0x000000062f800000| Complete 
| 136|0x000000062fc00000, 0x0000000630000000, 0x0000000630000000|100%| E|CS|TAMS 0x000000062fc00000| PB 0x000000062fc00000| Complete 
| 137|0x0000000630000000, 0x0000000630400000, 0x0000000630400000|100%| E|CS|TAMS 0x0000000630000000| PB 0x0000000630000000| Complete 
| 138|0x0000000630400000, 0x0000000630800000, 0x0000000630800000|100%| E|CS|TAMS 0x0000000630400000| PB 0x0000000630400000| Complete 
| 139|0x0000000630800000, 0x0000000630c00000, 0x0000000630c00000|100%| E|CS|TAMS 0x0000000630800000| PB 0x0000000630800000| Complete 
| 140|0x0000000630c00000, 0x0000000631000000, 0x0000000631000000|100%| E|CS|TAMS 0x0000000630c00000| PB 0x0000000630c00000| Complete 
| 141|0x0000000631000000, 0x0000000631400000, 0x0000000631400000|100%| E|CS|TAMS 0x0000000631000000| PB 0x0000000631000000| Complete 
| 142|0x0000000631400000, 0x0000000631800000, 0x0000000631800000|100%| E|CS|TAMS 0x0000000631400000| PB 0x0000000631400000| Complete 
| 143|0x0000000631800000, 0x0000000631c00000, 0x0000000631c00000|100%| E|CS|TAMS 0x0000000631800000| PB 0x0000000631800000| Complete 
| 144|0x0000000631c00000, 0x0000000632000000, 0x0000000632000000|100%| E|CS|TAMS 0x0000000631c00000| PB 0x0000000631c00000| Complete 
| 145|0x0000000632000000, 0x0000000632400000, 0x0000000632400000|100%| E|CS|TAMS 0x0000000632000000| PB 0x0000000632000000| Complete 
| 146|0x0000000632400000, 0x0000000632800000, 0x0000000632800000|100%| E|CS|TAMS 0x0000000632400000| PB 0x0000000632400000| Complete 
| 147|0x0000000632800000, 0x0000000632c00000, 0x0000000632c00000|100%| E|CS|TAMS 0x0000000632800000| PB 0x0000000632800000| Complete 
| 148|0x0000000632c00000, 0x0000000633000000, 0x0000000633000000|100%| E|CS|TAMS 0x0000000632c00000| PB 0x0000000632c00000| Complete 
| 149|0x0000000633000000, 0x0000000633400000, 0x0000000633400000|100%| E|CS|TAMS 0x0000000633000000| PB 0x0000000633000000| Complete 
| 150|0x0000000633400000, 0x0000000633800000, 0x0000000633800000|100%| E|CS|TAMS 0x0000000633400000| PB 0x0000000633400000| Complete 
| 151|0x0000000633800000, 0x0000000633c00000, 0x0000000633c00000|100%| E|CS|TAMS 0x0000000633800000| PB 0x0000000633800000| Complete 
| 152|0x0000000633c00000, 0x0000000634000000, 0x0000000634000000|100%| E|CS|TAMS 0x0000000633c00000| PB 0x0000000633c00000| Complete 
| 153|0x0000000634000000, 0x0000000634400000, 0x0000000634400000|100%| E|CS|TAMS 0x0000000634000000| PB 0x0000000634000000| Complete 
| 154|0x0000000634400000, 0x0000000634800000, 0x0000000634800000|100%| E|CS|TAMS 0x0000000634400000| PB 0x0000000634400000| Complete 
| 155|0x0000000634800000, 0x0000000634c00000, 0x0000000634c00000|100%| E|CS|TAMS 0x0000000634800000| PB 0x0000000634800000| Complete 
| 156|0x0000000634c00000, 0x0000000635000000, 0x0000000635000000|100%| E|CS|TAMS 0x0000000634c00000| PB 0x0000000634c00000| Complete 
| 157|0x0000000635000000, 0x0000000635400000, 0x0000000635400000|100%| E|CS|TAMS 0x0000000635000000| PB 0x0000000635000000| Complete 
| 158|0x0000000635400000, 0x0000000635800000, 0x0000000635800000|100%| E|CS|TAMS 0x0000000635400000| PB 0x0000000635400000| Complete 
| 159|0x0000000635800000, 0x0000000635c00000, 0x0000000635c00000|100%| E|CS|TAMS 0x0000000635800000| PB 0x0000000635800000| Complete 
| 160|0x0000000635c00000, 0x0000000636000000, 0x0000000636000000|100%| E|CS|TAMS 0x0000000635c00000| PB 0x0000000635c00000| Complete 
| 161|0x0000000636000000, 0x0000000636400000, 0x0000000636400000|100%| E|CS|TAMS 0x0000000636000000| PB 0x0000000636000000| Complete 
| 162|0x0000000636400000, 0x0000000636800000, 0x0000000636800000|100%| E|CS|TAMS 0x0000000636400000| PB 0x0000000636400000| Complete 
| 163|0x0000000636800000, 0x0000000636c00000, 0x0000000636c00000|100%| E|CS|TAMS 0x0000000636800000| PB 0x0000000636800000| Complete 
| 164|0x0000000636c00000, 0x0000000637000000, 0x0000000637000000|100%| E|CS|TAMS 0x0000000636c00000| PB 0x0000000636c00000| Complete 
| 165|0x0000000637000000, 0x0000000637400000, 0x0000000637400000|100%| E|CS|TAMS 0x0000000637000000| PB 0x0000000637000000| Complete 
| 166|0x0000000637400000, 0x0000000637800000, 0x0000000637800000|100%| E|CS|TAMS 0x0000000637400000| PB 0x0000000637400000| Complete 
| 167|0x0000000637800000, 0x0000000637c00000, 0x0000000637c00000|100%| E|CS|TAMS 0x0000000637800000| PB 0x0000000637800000| Complete 
| 168|0x0000000637c00000, 0x0000000638000000, 0x0000000638000000|100%| E|CS|TAMS 0x0000000637c00000| PB 0x0000000637c00000| Complete 
| 169|0x0000000638000000, 0x0000000638400000, 0x0000000638400000|100%| E|CS|TAMS 0x0000000638000000| PB 0x0000000638000000| Complete 
| 170|0x0000000638400000, 0x0000000638800000, 0x0000000638800000|100%| E|CS|TAMS 0x0000000638400000| PB 0x0000000638400000| Complete 
| 171|0x0000000638800000, 0x0000000638c00000, 0x0000000638c00000|100%| E|CS|TAMS 0x0000000638800000| PB 0x0000000638800000| Complete 
| 172|0x0000000638c00000, 0x0000000639000000, 0x0000000639000000|100%| E|CS|TAMS 0x0000000638c00000| PB 0x0000000638c00000| Complete 
| 173|0x0000000639000000, 0x0000000639400000, 0x0000000639400000|100%| E|CS|TAMS 0x0000000639000000| PB 0x0000000639000000| Complete 
| 174|0x0000000639400000, 0x0000000639800000, 0x0000000639800000|100%| E|CS|TAMS 0x0000000639400000| PB 0x0000000639400000| Complete 
| 175|0x0000000639800000, 0x0000000639c00000, 0x0000000639c00000|100%| E|CS|TAMS 0x0000000639800000| PB 0x0000000639800000| Complete 
| 176|0x0000000639c00000, 0x000000063a000000, 0x000000063a000000|100%| E|CS|TAMS 0x0000000639c00000| PB 0x0000000639c00000| Complete 
| 177|0x000000063a000000, 0x000000063a400000, 0x000000063a400000|100%| E|CS|TAMS 0x000000063a000000| PB 0x000000063a000000| Complete 
| 178|0x000000063a400000, 0x000000063a800000, 0x000000063a800000|100%| E|CS|TAMS 0x000000063a400000| PB 0x000000063a400000| Complete 
| 179|0x000000063a800000, 0x000000063ac00000, 0x000000063ac00000|100%| E|CS|TAMS 0x000000063a800000| PB 0x000000063a800000| Complete 
| 180|0x000000063ac00000, 0x000000063b000000, 0x000000063b000000|100%| E|CS|TAMS 0x000000063ac00000| PB 0x000000063ac00000| Complete 
| 181|0x000000063b000000, 0x000000063b400000, 0x000000063b400000|100%| E|CS|TAMS 0x000000063b000000| PB 0x000000063b000000| Complete 
| 182|0x000000063b400000, 0x000000063b800000, 0x000000063b800000|100%| E|CS|TAMS 0x000000063b400000| PB 0x000000063b400000| Complete 
| 183|0x000000063b800000, 0x000000063bc00000, 0x000000063bc00000|100%| E|CS|TAMS 0x000000063b800000| PB 0x000000063b800000| Complete 
| 184|0x000000063bc00000, 0x000000063c000000, 0x000000063c000000|100%| E|CS|TAMS 0x000000063bc00000| PB 0x000000063bc00000| Complete 
| 185|0x000000063c000000, 0x000000063c400000, 0x000000063c400000|100%| E|CS|TAMS 0x000000063c000000| PB 0x000000063c000000| Complete 
| 186|0x000000063c400000, 0x000000063c800000, 0x000000063c800000|100%| E|CS|TAMS 0x000000063c400000| PB 0x000000063c400000| Complete 
| 187|0x000000063c800000, 0x000000063cc00000, 0x000000063cc00000|100%| E|CS|TAMS 0x000000063c800000| PB 0x000000063c800000| Complete 
| 188|0x000000063cc00000, 0x000000063d000000, 0x000000063d000000|100%| E|CS|TAMS 0x000000063cc00000| PB 0x000000063cc00000| Complete 
| 189|0x000000063d000000, 0x000000063d400000, 0x000000063d400000|100%| E|CS|TAMS 0x000000063d000000| PB 0x000000063d000000| Complete 
| 190|0x000000063d400000, 0x000000063d800000, 0x000000063d800000|100%| E|CS|TAMS 0x000000063d400000| PB 0x000000063d400000| Complete 
| 191|0x000000063d800000, 0x000000063dc00000, 0x000000063dc00000|100%| E|CS|TAMS 0x000000063d800000| PB 0x000000063d800000| Complete 
| 192|0x000000063dc00000, 0x000000063e000000, 0x000000063e000000|100%| E|CS|TAMS 0x000000063dc00000| PB 0x000000063dc00000| Complete 
| 193|0x000000063e000000, 0x000000063e400000, 0x000000063e400000|100%| E|CS|TAMS 0x000000063e000000| PB 0x000000063e000000| Complete 
| 194|0x000000063e400000, 0x000000063e800000, 0x000000063e800000|100%| E|CS|TAMS 0x000000063e400000| PB 0x000000063e400000| Complete 
| 195|0x000000063e800000, 0x000000063ec00000, 0x000000063ec00000|100%| E|CS|TAMS 0x000000063e800000| PB 0x000000063e800000| Complete 
| 196|0x000000063ec00000, 0x000000063f000000, 0x000000063f000000|100%| E|CS|TAMS 0x000000063ec00000| PB 0x000000063ec00000| Complete 
| 197|0x000000063f000000, 0x000000063f400000, 0x000000063f400000|100%| E|CS|TAMS 0x000000063f000000| PB 0x000000063f000000| Complete 
| 198|0x000000063f400000, 0x000000063f800000, 0x000000063f800000|100%| E|CS|TAMS 0x000000063f400000| PB 0x000000063f400000| Complete 
| 199|0x000000063f800000, 0x000000063fc00000, 0x000000063fc00000|100%| E|CS|TAMS 0x000000063f800000| PB 0x000000063f800000| Complete 
| 200|0x000000063fc00000, 0x0000000640000000, 0x0000000640000000|100%| E|CS|TAMS 0x000000063fc00000| PB 0x000000063fc00000| Complete 
| 201|0x0000000640000000, 0x0000000640400000, 0x0000000640400000|100%| E|CS|TAMS 0x0000000640000000| PB 0x0000000640000000| Complete 
| 202|0x0000000640400000, 0x0000000640800000, 0x0000000640800000|100%| E|CS|TAMS 0x0000000640400000| PB 0x0000000640400000| Complete 
| 203|0x0000000640800000, 0x0000000640c00000, 0x0000000640c00000|100%| E|CS|TAMS 0x0000000640800000| PB 0x0000000640800000| Complete 
| 204|0x0000000640c00000, 0x0000000641000000, 0x0000000641000000|100%| E|CS|TAMS 0x0000000640c00000| PB 0x0000000640c00000| Complete 
| 205|0x0000000641000000, 0x0000000641400000, 0x0000000641400000|100%| E|CS|TAMS 0x0000000641000000| PB 0x0000000641000000| Complete 
| 206|0x0000000641400000, 0x0000000641800000, 0x0000000641800000|100%| E|CS|TAMS 0x0000000641400000| PB 0x0000000641400000| Complete 
| 207|0x0000000641800000, 0x0000000641c00000, 0x0000000641c00000|100%| E|CS|TAMS 0x0000000641800000| PB 0x0000000641800000| Complete 
| 208|0x0000000641c00000, 0x0000000642000000, 0x0000000642000000|100%| E|CS|TAMS 0x0000000641c00000| PB 0x0000000641c00000| Complete 
| 209|0x0000000642000000, 0x0000000642400000, 0x0000000642400000|100%| E|CS|TAMS 0x0000000642000000| PB 0x0000000642000000| Complete 
| 210|0x0000000642400000, 0x0000000642800000, 0x0000000642800000|100%| E|CS|TAMS 0x0000000642400000| PB 0x0000000642400000| Complete 
| 211|0x0000000642800000, 0x0000000642c00000, 0x0000000642c00000|100%| E|CS|TAMS 0x0000000642800000| PB 0x0000000642800000| Complete 
| 212|0x0000000642c00000, 0x0000000643000000, 0x0000000643000000|100%| E|CS|TAMS 0x0000000642c00000| PB 0x0000000642c00000| Complete 
| 213|0x0000000643000000, 0x0000000643400000, 0x0000000643400000|100%| E|CS|TAMS 0x0000000643000000| PB 0x0000000643000000| Complete 
| 214|0x0000000643400000, 0x0000000643800000, 0x0000000643800000|100%| E|CS|TAMS 0x0000000643400000| PB 0x0000000643400000| Complete 
| 215|0x0000000643800000, 0x0000000643c00000, 0x0000000643c00000|100%| E|CS|TAMS 0x0000000643800000| PB 0x0000000643800000| Complete 
| 216|0x0000000643c00000, 0x0000000644000000, 0x0000000644000000|100%| E|CS|TAMS 0x0000000643c00000| PB 0x0000000643c00000| Complete 
| 217|0x0000000644000000, 0x0000000644400000, 0x0000000644400000|100%| E|CS|TAMS 0x0000000644000000| PB 0x0000000644000000| Complete 
| 218|0x0000000644400000, 0x0000000644800000, 0x0000000644800000|100%| E|CS|TAMS 0x0000000644400000| PB 0x0000000644400000| Complete 
| 219|0x0000000644800000, 0x0000000644c00000, 0x0000000644c00000|100%| E|CS|TAMS 0x0000000644800000| PB 0x0000000644800000| Complete 
| 220|0x0000000644c00000, 0x0000000645000000, 0x0000000645000000|100%| E|CS|TAMS 0x0000000644c00000| PB 0x0000000644c00000| Complete 
| 221|0x0000000645000000, 0x0000000645400000, 0x0000000645400000|100%| E|CS|TAMS 0x0000000645000000| PB 0x0000000645000000| Complete 
| 222|0x0000000645400000, 0x0000000645800000, 0x0000000645800000|100%| E|CS|TAMS 0x0000000645400000| PB 0x0000000645400000| Complete 
| 223|0x0000000645800000, 0x0000000645c00000, 0x0000000645c00000|100%| E|CS|TAMS 0x0000000645800000| PB 0x0000000645800000| Complete 
| 224|0x0000000645c00000, 0x0000000646000000, 0x0000000646000000|100%| E|CS|TAMS 0x0000000645c00000| PB 0x0000000645c00000| Complete 
| 225|0x0000000646000000, 0x0000000646400000, 0x0000000646400000|100%| E|CS|TAMS 0x0000000646000000| PB 0x0000000646000000| Complete 
| 226|0x0000000646400000, 0x0000000646800000, 0x0000000646800000|100%| E|CS|TAMS 0x0000000646400000| PB 0x0000000646400000| Complete 
| 227|0x0000000646800000, 0x0000000646c00000, 0x0000000646c00000|100%| E|CS|TAMS 0x0000000646800000| PB 0x0000000646800000| Complete 
| 228|0x0000000646c00000, 0x0000000647000000, 0x0000000647000000|100%| E|CS|TAMS 0x0000000646c00000| PB 0x0000000646c00000| Complete 
| 229|0x0000000647000000, 0x0000000647400000, 0x0000000647400000|100%| E|CS|TAMS 0x0000000647000000| PB 0x0000000647000000| Complete 
| 230|0x0000000647400000, 0x0000000647800000, 0x0000000647800000|100%| E|CS|TAMS 0x0000000647400000| PB 0x0000000647400000| Complete 
| 231|0x0000000647800000, 0x0000000647c00000, 0x0000000647c00000|100%| E|CS|TAMS 0x0000000647800000| PB 0x0000000647800000| Complete 
| 232|0x0000000647c00000, 0x0000000648000000, 0x0000000648000000|100%| E|CS|TAMS 0x0000000647c00000| PB 0x0000000647c00000| Complete 
| 233|0x0000000648000000, 0x0000000648400000, 0x0000000648400000|100%| E|CS|TAMS 0x0000000648000000| PB 0x0000000648000000| Complete 
| 234|0x0000000648400000, 0x0000000648800000, 0x0000000648800000|100%| E|CS|TAMS 0x0000000648400000| PB 0x0000000648400000| Complete 
| 235|0x0000000648800000, 0x0000000648c00000, 0x0000000648c00000|100%| E|CS|TAMS 0x0000000648800000| PB 0x0000000648800000| Complete 
| 236|0x0000000648c00000, 0x0000000649000000, 0x0000000649000000|100%| E|CS|TAMS 0x0000000648c00000| PB 0x0000000648c00000| Complete 
| 237|0x0000000649000000, 0x0000000649400000, 0x0000000649400000|100%| E|CS|TAMS 0x0000000649000000| PB 0x0000000649000000| Complete 
| 238|0x0000000649400000, 0x0000000649800000, 0x0000000649800000|100%| E|CS|TAMS 0x0000000649400000| PB 0x0000000649400000| Complete 
| 239|0x0000000649800000, 0x0000000649c00000, 0x0000000649c00000|100%| E|CS|TAMS 0x0000000649800000| PB 0x0000000649800000| Complete 
| 240|0x0000000649c00000, 0x000000064a000000, 0x000000064a000000|100%| E|CS|TAMS 0x0000000649c00000| PB 0x0000000649c00000| Complete 
| 241|0x000000064a000000, 0x000000064a400000, 0x000000064a400000|100%| E|CS|TAMS 0x000000064a000000| PB 0x000000064a000000| Complete 
| 242|0x000000064a400000, 0x000000064a800000, 0x000000064a800000|100%| E|CS|TAMS 0x000000064a400000| PB 0x000000064a400000| Complete 
| 243|0x000000064a800000, 0x000000064ac00000, 0x000000064ac00000|100%| E|CS|TAMS 0x000000064a800000| PB 0x000000064a800000| Complete 
| 244|0x000000064ac00000, 0x000000064b000000, 0x000000064b000000|100%| E|CS|TAMS 0x000000064ac00000| PB 0x000000064ac00000| Complete 
| 245|0x000000064b000000, 0x000000064b400000, 0x000000064b400000|100%| E|CS|TAMS 0x000000064b000000| PB 0x000000064b000000| Complete 
| 246|0x000000064b400000, 0x000000064b800000, 0x000000064b800000|100%| E|CS|TAMS 0x000000064b400000| PB 0x000000064b400000| Complete 
| 247|0x000000064b800000, 0x000000064bc00000, 0x000000064bc00000|100%| E|CS|TAMS 0x000000064b800000| PB 0x000000064b800000| Complete 
| 248|0x000000064bc00000, 0x000000064c000000, 0x000000064c000000|100%| E|CS|TAMS 0x000000064bc00000| PB 0x000000064bc00000| Complete 
| 249|0x000000064c000000, 0x000000064c400000, 0x000000064c400000|100%| E|CS|TAMS 0x000000064c000000| PB 0x000000064c000000| Complete 
| 250|0x000000064c400000, 0x000000064c800000, 0x000000064c800000|100%| E|CS|TAMS 0x000000064c400000| PB 0x000000064c400000| Complete 
|1992|0x00000007ffc00000, 0x00000007ffd07550, 0x0000000800000000| 25%| O|  |TAMS 0x00000007ffc00000| PB 0x00000007ffc00000| Untracked 

Card table byte_map: [0x00007f0d2fa6e000,0x00007f0d30a00000] _byte_map_base: 0x00007f0d2ca00000

Marking Bits: (CMBitMap*) 0x00007f0d480566f0
 Bits: [0x00007f0d27dde000, 0x00007f0d2fa6e000)

Polling page: 0x00007f0d4fc23000

Metaspace:

Usage:
  Non-class:     10.69 MB used.
      Class:      1.10 MB used.
       Both:     11.79 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      10.94 MB ( 17%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       1.38 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      12.31 MB (  1%) committed. 

Chunk freelists:
   Non-Class:  4.33 MB
       Class:  14.48 MB
        Both:  18.82 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 660.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 195.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 981.
num_chunk_merges: 0.
num_chunk_splits: 632.
num_chunks_enlarged: 343.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120028Kb used=3105Kb max_used=3105Kb free=116922Kb
 bounds [0x00007f0d384c9000, 0x00007f0d387d9000, 0x00007f0d3fa00000]
CodeHeap 'profiled nmethods': size=120028Kb used=7383Kb max_used=7383Kb free=112644Kb
 bounds [0x00007f0d30a00000, 0x00007f0d31140000, 0x00007f0d37f37000]
CodeHeap 'non-nmethods': size=5704Kb used=1633Kb max_used=1687Kb free=4070Kb
 bounds [0x00007f0d37f37000, 0x00007f0d381a7000, 0x00007f0d384c9000]
 total_blobs=4660 nmethods=4080 adapters=480
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 54.513 Thread 0x00007f0d48137220 4071       3       sun.nio.cs.StreamEncoder::ensureOpen (18 bytes)
Event: 54.513 Thread 0x00007f0d48137220 nmethod 4071 0x00007f0d3112d410 code [0x00007f0d3112d5c0, 0x00007f0d3112d7d8]
Event: 54.513 Thread 0x00007f0d48137220 4072       3       sun.nio.cs.StreamEncoder::implFlushBuffer (15 bytes)
Event: 54.513 Thread 0x00007f0d48137220 nmethod 4072 0x00007f0d3112d890 code [0x00007f0d3112da40, 0x00007f0d3112dbe0]
Event: 55.514 Thread 0x00007f0d48137220 4073   !   3       java.nio.CharBuffer::wrap (21 bytes)
Event: 55.514 Thread 0x00007f0d48137220 nmethod 4073 0x00007f0d3112dc90 code [0x00007f0d3112de60, 0x00007f0d3112e108]
Event: 55.514 Thread 0x00007f0d48137220 4074       3       java.nio.HeapCharBuffer::<init> (23 bytes)
Event: 55.514 Thread 0x00007f0d48137220 nmethod 4074 0x00007f0d3112e290 code [0x00007f0d3112e440, 0x00007f0d3112e5c0]
Event: 55.514 Thread 0x00007f0d48137220 4075       3       java.nio.charset.CoderResult::isOverflow (14 bytes)
Event: 55.514 Thread 0x00007f0d48137220 nmethod 4075 0x00007f0d3112e690 code [0x00007f0d3112e820, 0x00007f0d3112e988]
Event: 56.514 Thread 0x00007f0d48137220 4076       3       sun.nio.cs.UTF_8$Encoder::encodeLoop (28 bytes)
Event: 56.514 Thread 0x00007f0d48137220 nmethod 4076 0x00007f0d3112ea10 code [0x00007f0d3112ebe0, 0x00007f0d3112eff0]
Event: 56.514 Thread 0x00007f0d48137220 4077       3       sun.nio.cs.UTF_8$Encoder::encodeArrayLoop (137 bytes)
Event: 56.515 Thread 0x00007f0d48137220 nmethod 4077 0x00007f0d3112f190 code [0x00007f0d3112f540, 0x00007f0d31130b50]
Event: 61.515 Thread 0x00007f0d48137220 4078   !   3       java.io.PrintStream::writeln (81 bytes)
Event: 61.515 Thread 0x00007f0d48137220 nmethod 4078 0x00007f0d31131410 code [0x00007f0d31131700, 0x00007f0d311325f0]
Event: 61.515 Thread 0x00007f0d48137220 4079       3       java.io.PrintStream::implWriteln (48 bytes)
Event: 61.516 Thread 0x00007f0d48137220 nmethod 4079 0x00007f0d31132d10 code [0x00007f0d31132f80, 0x00007f0d311339b8]
Event: 65.515 Thread 0x00007f0d48137220 4080   !   3       java.io.BufferedWriter::flushBuffer (63 bytes)
Event: 65.516 Thread 0x00007f0d48137220 nmethod 4080 0x00007f0d31133e10 code [0x00007f0d31134140, 0x00007f0d311355b0]

GC Heap History (20 events):
Event: 64.718 GC heap before
{Heap before GC invocations=151 (full 0):
 garbage-first heap   total 1032192K, used 732900K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12070K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 64.719 GC heap after
{Heap after GC invocations=152 (full 0):
 garbage-first heap   total 1032192K, used 118506K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12070K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 65.169 GC heap before
{Heap before GC invocations=152 (full 0):
 garbage-first heap   total 1032192K, used 732906K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12070K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 65.170 GC heap after
{Heap after GC invocations=153 (full 0):
 garbage-first heap   total 1032192K, used 118500K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12070K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 65.636 GC heap before
{Heap before GC invocations=153 (full 0):
 garbage-first heap   total 1032192K, used 732900K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 65.636 GC heap after
{Heap after GC invocations=154 (full 0):
 garbage-first heap   total 1032192K, used 118500K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.088 GC heap before
{Heap before GC invocations=154 (full 0):
 garbage-first heap   total 1032192K, used 732900K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.088 GC heap after
{Heap after GC invocations=155 (full 0):
 garbage-first heap   total 1032192K, used 118502K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.524 GC heap before
{Heap before GC invocations=155 (full 0):
 garbage-first heap   total 1032192K, used 732902K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.524 GC heap after
{Heap after GC invocations=156 (full 0):
 garbage-first heap   total 1032192K, used 118506K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.970 GC heap before
{Heap before GC invocations=156 (full 0):
 garbage-first heap   total 1032192K, used 732906K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 66.971 GC heap after
{Heap after GC invocations=157 (full 0):
 garbage-first heap   total 1032192K, used 118506K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 67.422 GC heap before
{Heap before GC invocations=157 (full 0):
 garbage-first heap   total 1032192K, used 732906K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 67.423 GC heap after
{Heap after GC invocations=158 (full 0):
 garbage-first heap   total 1032192K, used 118498K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 68.003 GC heap before
{Heap before GC invocations=158 (full 0):
 garbage-first heap   total 1032192K, used 732898K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 68.004 GC heap after
{Heap after GC invocations=159 (full 0):
 garbage-first heap   total 1032192K, used 118502K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 68.624 GC heap before
{Heap before GC invocations=159 (full 0):
 garbage-first heap   total 1032192K, used 732902K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 68.624 GC heap after
{Heap after GC invocations=160 (full 0):
 garbage-first heap   total 1032192K, used 118502K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 69.285 GC heap before
{Heap before GC invocations=160 (full 0):
 garbage-first heap   total 1032192K, used 732902K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 151 young (618496K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}
Event: 69.286 GC heap after
{Heap after GC invocations=161 (full 0):
 garbage-first heap   total 1032192K, used 118508K [0x000000060dc00000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 12071K, committed 12608K, reserved 1114112K
  class space    used 1121K, committed 1408K, reserved 1048576K
}

Dll operation events (9 events):
Event: 0.001 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libjava.so
Event: 0.018 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libjsvml.so
Event: 0.019 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libnio.so
Event: 0.037 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
Event: 0.066 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libnet.so
Event: 0.097 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
Event: 0.098 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libinstrument.so
Event: 0.117 Loaded shared library /home/alec/IdeaProjects/cool-fuzz/libslave.so
Event: 1.133 Loaded shared library /home/alec/.jdks/openjdk-21.0.1/lib/libjimage.so

Deoptimization events (20 events):
Event: 2.505 Thread 0x00007f0d4802aea0 Uncommon trap: trap_request=0xffffffcc fr.pc=0x00007f0d3869eec8 relative=0x0000000000000208
Event: 2.505 Thread 0x00007f0d4802aea0 Uncommon trap: reason=intrinsic_or_type_checked_inlining action=make_not_entrant pc=0x00007f0d3869eec8 method=java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object; @ 35 c2
Event: 2.505 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d3869eec8 sp=0x00007f0d4e3fd9d0
Event: 2.505 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8e619 sp=0x00007f0d4e3fd978 mode 2
Event: 2.505 Thread 0x00007f0d4802aea0 Uncommon trap: trap_request=0xffffff3d fr.pc=0x00007f0d385cb17c relative=0x000000000000007c
Event: 2.505 Thread 0x00007f0d4802aea0 Uncommon trap: reason=unstable_fused_if action=reinterpret pc=0x00007f0d385cb17c method=java.lang.Integer.numberOfLeadingZeros(I)I @ 1 c2
Event: 2.505 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d385cb17c sp=0x00007f0d4e3fe1e0
Event: 2.505 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8e619 sp=0x00007f0d4e3fe198 mode 2
Event: 3.505 Thread 0x00007f0d4802aea0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00007f0d3878b880 relative=0x0000000000002160
Event: 3.505 Thread 0x00007f0d4802aea0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00007f0d3878b880 method=java.time.Instant.isAfter(Ljava/time/Instant;)Z @ 5 c2
Event: 3.505 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d3878b880 sp=0x00007f0d4e3fe890
Event: 3.505 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8e619 sp=0x00007f0d4e3fe850 mode 2
Event: 3.755 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d3110bea0 sp=0x00007f0d4e3fe4b0
Event: 3.755 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8f14f sp=0x00007f0d4e3fddb0 mode 0
Event: 4.506 Thread 0x00007f0d4802aea0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00007f0d38799ae4 relative=0x0000000000002164
Event: 4.506 Thread 0x00007f0d4802aea0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00007f0d38799ae4 method=java.time.Instant.isAfter(Ljava/time/Instant;)Z @ 5 c2
Event: 4.506 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d38799ae4 sp=0x00007f0d4e3fe8a0
Event: 4.506 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8e619 sp=0x00007f0d4e3fe850 mode 2
Event: 4.530 Thread 0x00007f0d4802aea0 DEOPT PACKING pc=0x00007f0d3110b477 sp=0x00007f0d4e3fe4b0
Event: 4.530 Thread 0x00007f0d4802aea0 DEOPT UNPACKING pc=0x00007f0d37f8f14f sp=0x00007f0d4e3fddb0 mode 0

Classes loaded (20 events):
Event: 1.147 Loading class java/util/ArrayList$SubList$1
Event: 1.147 Loading class java/util/ArrayList$SubList$1 done
Event: 1.147 Loading class sun/text/resources/cldr/FormatData_en
Event: 1.147 Loading class sun/text/resources/cldr/FormatData_en done
Event: 1.147 Loading class sun/util/resources/Bundles$2
Event: 1.147 Loading class sun/util/resources/Bundles$2 done
Event: 1.147 Loading class java/lang/InstantiationException
Event: 1.147 Loading class java/lang/InstantiationException done
Event: 1.150 Loading class java/util/regex/Pattern$BnM
Event: 1.150 Loading class java/util/regex/Pattern$BnM done
Event: 1.150 Loading class java/util/regex/Pattern$SliceS
Event: 1.150 Loading class java/util/regex/Pattern$SliceS done
Event: 1.283 Loading class java/lang/Throwable$WrappedPrintStream
Event: 1.283 Loading class java/lang/Throwable$PrintStreamOrWriter
Event: 1.283 Loading class java/lang/Throwable$PrintStreamOrWriter done
Event: 1.283 Loading class java/lang/Throwable$WrappedPrintStream done
Event: 1.283 Loading class java/lang/StackTraceElement$HashedModules
Event: 1.283 Loading class java/lang/StackTraceElement$HashedModules done
Event: 2.504 Loading class java/time/Instant$1
Event: 2.504 Loading class java/time/Instant$1 done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 1.112 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006437a87e8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeInterface(java.lang.Object, java.lang.Object, long, long)'> (0x00000006437a87e8) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.112 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006437ac528}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeInterface(java.lang.Object, java.lang.Object, long, java.lang.Object)'> (0x00000006437ac528) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.112 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/IncompatibleClassChangeError'{0x00000006437af958}: Found class java.lang.Object, but interface was expected> (0x00000006437af958) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 840]
Event: 1.113 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006437bd220}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x00000006437bd220) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.114 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006437d55a8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, int, java.lang.Object)'> (0x00000006437d55a8) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.116 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006437f5268}: 'java.lang.Object java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, long, long, long)'> (0x00000006437f5268) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.117 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000643009910}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, long, long)'> (0x0000000643009910) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.121 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000643043e20}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, long, java.lang.Object, long)'> (0x0000000643043e20) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.121 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064304b2f0}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, long, java.lang.Object, long)'> (0x000000064304b2f0) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.123 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064306b5e8}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, java.lang.Object, long, long)'> (0x000000064306b5e8) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.123 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064306ef50}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object)'> (0x000000064306ef50) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.126 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064308be28}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, long, java.lang.Object)'> (0x000000064308be28) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.127 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064309b130}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x000000064309b130) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.127 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x000000064309efb8}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x000000064309efb8) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.127 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006430a2768}: 'int java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x00000006430a2768) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.129 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006430b84b8}: 'long java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x00000006430b84b8) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.132 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x00000006432d6068}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, long)'> (0x00000006432d6068) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.542 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000640ba4a88}: 'int java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, long, long)'> (0x0000000640ba4a88) 
thrown [open/src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 1.545 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000640be5a10}: 'java.lang.Object java.lang.invoke.Invokers$Holder.invoker(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.
Event: 1.545 Thread 0x00007f0d4802aea0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000640bf1b28}: 'java.lang.Object java.lang.invoke.DelegatingMethodHandle$Holder.delegate(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Obj

ZGC Phase Switch (0 events):
No events

VM Operations (20 events):
Event: 64.718 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 64.719 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 65.169 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 65.170 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 65.636 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 65.636 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 66.088 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 66.088 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 66.524 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 66.524 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 66.970 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 66.971 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 67.422 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 67.423 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 68.003 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 68.004 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 68.624 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 68.624 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 69.285 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 69.286 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Events (20 events):
Event: 0.016 Protecting memory [0x00007f0d24dfb000,0x00007f0d24dff000] with protection modes 0
Event: 0.016 Thread 0x00007f0d48137220 Thread added: 0x00007f0d48137220
Event: 0.016 Protecting memory [0x00007f0d24cfa000,0x00007f0d24cfe000] with protection modes 0
Event: 0.032 Thread 0x00007f0d4815c610 Thread added: 0x00007f0d4815c610
Event: 0.032 Protecting memory [0x00007f0d24b29000,0x00007f0d24b2d000] with protection modes 0
Event: 0.065 Thread 0x00007f0ca80bf420 Thread added: 0x00007f0ca80bf420
Event: 0.065 Protecting memory [0x00007f0d24a28000,0x00007f0d24a2c000] with protection modes 0
Event: 0.065 Thread 0x00007f0ca80c0700 Thread added: 0x00007f0ca80c0700
Event: 0.065 Protecting memory [0x00007f0d24927000,0x00007f0d2492b000] with protection modes 0
Event: 0.104 Thread 0x00007f0d481caee0 Thread added: 0x00007f0d481caee0
Event: 0.104 Protecting memory [0x00007f0d24826000,0x00007f0d2482a000] with protection modes 0
Event: 0.105 Thread 0x00007f0d481cc610 Thread added: 0x00007f0d481cc610
Event: 0.105 Protecting memory [0x00007f0d24725000,0x00007f0d24729000] with protection modes 0
Event: 0.370 Thread 0x00007f0ca80c0700 Thread exited: 0x00007f0ca80c0700
Event: 0.422 Thread 0x00007f0ca8112f00 Thread added: 0x00007f0ca8112f00
Event: 0.422 Protecting memory [0x00007f0d24927000,0x00007f0d2492b000] with protection modes 0
Event: 1.026 Thread 0x00007f0cb8000ff0 Thread added: 0x00007f0cb8000ff0
Event: 1.026 Protecting memory [0x00007f0ccef00000,0x00007f0ccef04000] with protection modes 0
Event: 2.167 Thread 0x00007f0ca8112f00 Thread exited: 0x00007f0ca8112f00
Event: 2.167 Thread 0x00007f0ca80bf420 Thread exited: 0x00007f0ca80bf420


Dynamic libraries:
10000000-10001000 rwxp 00000000 00:00 0 
20000000-20001000 rwxp 00000000 00:00 0 
60dc00000-64c800000 rw-p 00000000 00:00 0 
64c800000-7ffc00000 ---p 00000000 00:00 0 
7ffc00000-7ffd08000 rw-p 00ce4000 103:02 26377180                        /home/alec/.jdks/openjdk-21.0.1/lib/server/classes.jsa
7ffd08000-800000000 rw-p 00000000 00:00 0 
5570d6dcb000-5570d6dcc000 r-xp 00000000 103:02 26376685                  /home/alec/.jdks/openjdk-21.0.1/bin/java
5570d6dcd000-5570d6dce000 r--p 00001000 103:02 26376685                  /home/alec/.jdks/openjdk-21.0.1/bin/java
5570d6dce000-5570d6dcf000 rw-p 00002000 103:02 26376685                  /home/alec/.jdks/openjdk-21.0.1/bin/java
5570d7bed000-5570d7c33000 rw-p 00000000 00:00 0                          [heap]
7f0c6c000000-7f0c6c021000 rw-p 00000000 00:00 0 
7f0c6c021000-7f0c70000000 ---p 00000000 00:00 0 
7f0c74000000-7f0c74021000 rw-p 00000000 00:00 0 
7f0c74021000-7f0c78000000 ---p 00000000 00:00 0 
7f0c78000000-7f0c78021000 rw-p 00000000 00:00 0 
7f0c78021000-7f0c7c000000 ---p 00000000 00:00 0 
7f0c7c000000-7f0c7c021000 rw-p 00000000 00:00 0 
7f0c7c021000-7f0c80000000 ---p 00000000 00:00 0 
7f0c80000000-7f0c80021000 rw-p 00000000 00:00 0 
7f0c80021000-7f0c84000000 ---p 00000000 00:00 0 
7f0c84000000-7f0c84021000 rw-p 00000000 00:00 0 
7f0c84021000-7f0c88000000 ---p 00000000 00:00 0 
7f0c88000000-7f0c88021000 rw-p 00000000 00:00 0 
7f0c88021000-7f0c8c000000 ---p 00000000 00:00 0 
7f0c8c000000-7f0c8c021000 rw-p 00000000 00:00 0 
7f0c8c021000-7f0c90000000 ---p 00000000 00:00 0 
7f0c90000000-7f0c90021000 rw-p 00000000 00:00 0 
7f0c90021000-7f0c94000000 ---p 00000000 00:00 0 
7f0c94000000-7f0c94bed000 rw-p 00000000 00:00 0 
7f0c94bed000-7f0c98000000 ---p 00000000 00:00 0 
7f0c98000000-7f0c98021000 rw-p 00000000 00:00 0 
7f0c98021000-7f0c9c000000 ---p 00000000 00:00 0 
7f0c9c000000-7f0c9c021000 rw-p 00000000 00:00 0 
7f0c9c021000-7f0ca0000000 ---p 00000000 00:00 0 
7f0ca0000000-7f0ca09f9000 rw-p 00000000 00:00 0 
7f0ca09f9000-7f0ca4000000 ---p 00000000 00:00 0 
7f0ca4000000-7f0ca50ab000 rw-p 00000000 00:00 0 
7f0ca50ab000-7f0ca8000000 ---p 00000000 00:00 0 
7f0ca8000000-7f0ca829c000 rw-p 00000000 00:00 0 
7f0ca829c000-7f0cac000000 ---p 00000000 00:00 0 
7f0cac000000-7f0cac021000 rw-p 00000000 00:00 0 
7f0cac021000-7f0cb0000000 ---p 00000000 00:00 0 
7f0cb0000000-7f0cb0021000 rw-p 00000000 00:00 0 
7f0cb0021000-7f0cb4000000 ---p 00000000 00:00 0 
7f0cb4000000-7f0cb4021000 rw-p 00000000 00:00 0 
7f0cb4021000-7f0cb8000000 ---p 00000000 00:00 0 
7f0cb8000000-7f0cb8021000 rw-p 00000000 00:00 0 
7f0cb8021000-7f0cbc000000 ---p 00000000 00:00 0 
7f0cbc000000-7f0cbc089000 rw-p 00000000 00:00 0 
7f0cbc089000-7f0cc0000000 ---p 00000000 00:00 0 
7f0cc0000000-7f0cc0021000 rw-p 00000000 00:00 0 
7f0cc0021000-7f0cc4000000 ---p 00000000 00:00 0 
7f0cc4000000-7f0cc43f0000 rw-p 00000000 00:00 0 
7f0cc43f0000-7f0cc44f0000 rw-p 00000000 00:00 0 
7f0cc44f0000-7f0cc46f0000 rw-p 00000000 00:00 0 
7f0cc46f0000-7f0cc47f0000 rw-p 00000000 00:00 0 
7f0cc47f0000-7f0cc48f0000 rw-p 00000000 00:00 0 
7f0cc48f0000-7f0cc4940000 rw-p 00000000 00:00 0 
7f0cc4940000-7f0cc4a00000 ---p 00000000 00:00 0 
7f0cc4a00000-7f0cc4bb0000 rw-p 00000000 00:00 0 
7f0cc4bb0000-7f0cc8000000 ---p 00000000 00:00 0 
7f0cc8000000-7f0cc8021000 rw-p 00000000 00:00 0 
7f0cc8021000-7f0ccc000000 ---p 00000000 00:00 0 
7f0cceeff000-7f0ccef00000 ---p 00000000 00:00 0 
7f0ccef00000-7f0ccef04000 ---p 00000000 00:00 0 
7f0ccef04000-7f0ccf000000 rw-p 00000000 00:00 0 
7f0ccf000000-7f0ccfca5000 rw-p 00001000 103:02 26377180                  /home/alec/.jdks/openjdk-21.0.1/lib/server/classes.jsa
7f0ccfca5000-7f0cd0000000 ---p 00000000 00:00 0 
7f0cd0000000-7f0cd0030000 rw-p 00000000 00:00 0 
7f0cd0030000-7f0cd00b0000 rw-p 00000000 00:00 0 
7f0cd00b0000-7f0cd0120000 rw-p 00000000 00:00 0 
7f0cd0120000-7f0cd0150000 rw-p 00000000 00:00 0 
7f0cd0150000-7f0cd0180000 ---p 00000000 00:00 0 
7f0cd0180000-7f0cd0190000 rw-p 00000000 00:00 0 
7f0cd0190000-7f0d10000000 ---p 00000000 00:00 0 
7f0d10000000-7f0d10021000 rw-p 00000000 00:00 0 
7f0d10021000-7f0d14000000 ---p 00000000 00:00 0 
7f0d14000000-7f0d14021000 rw-p 00000000 00:00 0 
7f0d14021000-7f0d18000000 ---p 00000000 00:00 0 
7f0d18000000-7f0d18021000 rw-p 00000000 00:00 0 
7f0d18021000-7f0d1c000000 ---p 00000000 00:00 0 
7f0d1c000000-7f0d1c021000 rw-p 00000000 00:00 0 
7f0d1c021000-7f0d20000000 ---p 00000000 00:00 0 
7f0d20000000-7f0d20021000 rw-p 00000000 00:00 0 
7f0d20021000-7f0d24000000 ---p 00000000 00:00 0 
7f0d2401d000-7f0d2401e000 ---p 00000000 00:00 0 
7f0d2401e000-7f0d2411e000 rw-p 00000000 00:00 0 
7f0d2411e000-7f0d2411f000 ---p 00000000 00:00 0 
7f0d2411f000-7f0d2421f000 rw-p 00000000 00:00 0 
7f0d2421f000-7f0d24220000 ---p 00000000 00:00 0 
7f0d24220000-7f0d24320000 rw-p 00000000 00:00 0 
7f0d24320000-7f0d24321000 ---p 00000000 00:00 0 
7f0d24321000-7f0d24421000 rw-p 00000000 00:00 0 
7f0d24421000-7f0d24422000 ---p 00000000 00:00 0 
7f0d24422000-7f0d24522000 rw-p 00000000 00:00 0 
7f0d24522000-7f0d24523000 ---p 00000000 00:00 0 
7f0d24523000-7f0d24623000 rw-p 00000000 00:00 0 
7f0d24623000-7f0d24624000 ---p 00000000 00:00 0 
7f0d24624000-7f0d24724000 rw-p 00000000 00:00 0 
7f0d24724000-7f0d24725000 ---p 00000000 00:00 0 
7f0d24725000-7f0d24729000 ---p 00000000 00:00 0 
7f0d24729000-7f0d24825000 rw-p 00000000 00:00 0 
7f0d24825000-7f0d24826000 ---p 00000000 00:00 0 
7f0d24826000-7f0d2482a000 ---p 00000000 00:00 0 
7f0d2482a000-7f0d24926000 rw-p 00000000 00:00 0 
7f0d24926000-7f0d24927000 ---p 00000000 00:00 0 
7f0d24927000-7f0d2492b000 ---p 00000000 00:00 0 
7f0d2492b000-7f0d24a27000 rw-p 00000000 00:00 0 
7f0d24a27000-7f0d24a28000 ---p 00000000 00:00 0 
7f0d24a28000-7f0d24a2c000 ---p 00000000 00:00 0 
7f0d24a2c000-7f0d24b28000 rw-p 00000000 00:00 0 
7f0d24b28000-7f0d24b29000 ---p 00000000 00:00 0 
7f0d24b29000-7f0d24b2d000 ---p 00000000 00:00 0 
7f0d24b2d000-7f0d24c29000 rw-p 00000000 00:00 0 
7f0d24c29000-7f0d24cf7000 r-xp 00000000 103:02 26377154                  /home/alec/.jdks/openjdk-21.0.1/lib/libjsvml.so
7f0d24cf7000-7f0d24cf8000 r--p 000cd000 103:02 26377154                  /home/alec/.jdks/openjdk-21.0.1/lib/libjsvml.so
7f0d24cf8000-7f0d24cf9000 rw-p 000ce000 103:02 26377154                  /home/alec/.jdks/openjdk-21.0.1/lib/libjsvml.so
7f0d24cf9000-7f0d24cfa000 ---p 00000000 00:00 0 
7f0d24cfa000-7f0d24cfe000 ---p 00000000 00:00 0 
7f0d24cfe000-7f0d24dfa000 rw-p 00000000 00:00 0 
7f0d24dfa000-7f0d24dfb000 ---p 00000000 00:00 0 
7f0d24dfb000-7f0d24dff000 ---p 00000000 00:00 0 
7f0d24dff000-7f0d24efb000 rw-p 00000000 00:00 0 
7f0d24efb000-7f0d24efc000 ---p 00000000 00:00 0 
7f0d24efc000-7f0d24f00000 ---p 00000000 00:00 0 
7f0d24f00000-7f0d24ffc000 rw-p 00000000 00:00 0 
7f0d24ffc000-7f0d24ffd000 ---p 00000000 00:00 0 
7f0d24ffd000-7f0d25001000 ---p 00000000 00:00 0 
7f0d25001000-7f0d250fd000 rw-p 00000000 00:00 0 
7f0d250fd000-7f0d250fe000 ---p 00000000 00:00 0 
7f0d250fe000-7f0d25102000 ---p 00000000 00:00 0 
7f0d25102000-7f0d251fe000 rw-p 00000000 00:00 0 
7f0d251fe000-7f0d251ff000 ---p 00000000 00:00 0 
7f0d251ff000-7f0d25203000 ---p 00000000 00:00 0 
7f0d25203000-7f0d252ff000 rw-p 00000000 00:00 0 
7f0d252ff000-7f0d25300000 ---p 00000000 00:00 0 
7f0d25300000-7f0d25304000 ---p 00000000 00:00 0 
7f0d25304000-7f0d25400000 rw-p 00000000 00:00 0 
7f0d25400000-7f0d256eb000 r--p 00000000 103:02 57028961                  /usr/lib/locale/locale-archive
7f0d25757000-7f0d25758000 ---p 00000000 00:00 0 
7f0d25758000-7f0d25858000 rw-p 00000000 00:00 0 
7f0d25858000-7f0d25859000 ---p 00000000 00:00 0 
7f0d25859000-7f0d259da000 rw-p 00000000 00:00 0 
7f0d259da000-7f0d259db000 ---p 00000000 00:00 0 
7f0d259db000-7f0d25adb000 rw-p 00000000 00:00 0 
7f0d25adb000-7f0d25adc000 ---p 00000000 00:00 0 
7f0d25adc000-7f0d28d8e000 rw-p 00000000 00:00 0 
7f0d28d8e000-7f0d2fa5e000 ---p 00000000 00:00 0 
7f0d2fa5e000-7f0d2fc64000 rw-p 00000000 00:00 0 
7f0d2fc64000-7f0d309fe000 ---p 00000000 00:00 0 
7f0d309fe000-7f0d30a00000 rw-p 00000000 00:00 0 
7f0d30a00000-7f0d31140000 rwxp 00000000 00:00 0 
7f0d31140000-7f0d37f37000 ---p 00000000 00:00 0 
7f0d37f37000-7f0d381a7000 rwxp 00000000 00:00 0 
7f0d381a7000-7f0d384c9000 ---p 00000000 00:00 0 
7f0d384c9000-7f0d387d9000 rwxp 00000000 00:00 0 
7f0d387d9000-7f0d3fa00000 ---p 00000000 00:00 0 
7f0d3fa00000-7f0d47ec6000 r--s 00000000 103:02 26377171                  /home/alec/.jdks/openjdk-21.0.1/lib/modules
7f0d47eff000-7f0d4852d000 rw-p 00000000 00:00 0 
7f0d4852d000-7f0d4c000000 ---p 00000000 00:00 0 
7f0d4c00d000-7f0d4c01d000 rwxp 00000000 00:00 0 
7f0d4c01d000-7f0d4c01e000 r--p 00000000 103:02 26632640                  /home/alec/IdeaProjects/cool-fuzz/libslave.so (deleted)
7f0d4c01e000-7f0d4c01f000 r-xp 00001000 103:02 26632640                  /home/alec/IdeaProjects/cool-fuzz/libslave.so (deleted)
7f0d4c01f000-7f0d4c020000 r--p 00002000 103:02 26632640                  /home/alec/IdeaProjects/cool-fuzz/libslave.so (deleted)
7f0d4c020000-7f0d4c021000 r--p 00002000 103:02 26632640                  /home/alec/IdeaProjects/cool-fuzz/libslave.so (deleted)
7f0d4c021000-7f0d4c022000 rw-p 00003000 103:02 26632640                  /home/alec/IdeaProjects/cool-fuzz/libslave.so (deleted)
7f0d4c022000-7f0d4c029000 r-xp 00000000 103:02 26377170                  /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
7f0d4c029000-7f0d4c02a000 ---p 00007000 103:02 26377170                  /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
7f0d4c02a000-7f0d4c02b000 r--p 00007000 103:02 26377170                  /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
7f0d4c02b000-7f0d4c02c000 rw-p 00008000 103:02 26377170                  /home/alec/.jdks/openjdk-21.0.1/lib/libzip.so
7f0d4c02c000-7f0d4c5cd000 rw-p 00000000 00:00 0 
7f0d4c5cd000-7f0d4c5ce000 ---p 00000000 00:00 0 
7f0d4c5ce000-7f0d4c6ce000 rw-p 00000000 00:00 0 
7f0d4c6ce000-7f0d4c6cf000 ---p 00000000 00:00 0 
7f0d4c6cf000-7f0d4c7cf000 rw-p 00000000 00:00 0 
7f0d4c7cf000-7f0d4c7d0000 ---p 00000000 00:00 0 
7f0d4c7d0000-7f0d4cb86000 rw-p 00000000 00:00 0 
7f0d4cb86000-7f0d4d920000 ---p 00000000 00:00 0 
7f0d4d920000-7f0d4e131000 rw-p 00000000 00:00 0 
7f0d4e131000-7f0d4e215000 ---p 00000000 00:00 0 
7f0d4e215000-7f0d4e224000 rw-p 00000000 00:00 0 
7f0d4e224000-7f0d4e300000 ---p 00000000 00:00 0 
7f0d4e300000-7f0d4e304000 ---p 00000000 00:00 0 
7f0d4e304000-7f0d4e400000 rw-p 00000000 00:00 0 
7f0d4e400000-7f0d4f70d000 r-xp 00000000 103:02 26377183                  /home/alec/.jdks/openjdk-21.0.1/lib/server/libjvm.so
7f0d4f70d000-7f0d4f70e000 ---p 0130d000 103:02 26377183                  /home/alec/.jdks/openjdk-21.0.1/lib/server/libjvm.so
7f0d4f70e000-7f0d4f7db000 r--p 0130d000 103:02 26377183                  /home/alec/.jdks/openjdk-21.0.1/lib/server/libjvm.so
7f0d4f7db000-7f0d4f809000 rw-p 013da000 103:02 26377183                  /home/alec/.jdks/openjdk-21.0.1/lib/server/libjvm.so
7f0d4f809000-7f0d4f86e000 rw-p 00000000 00:00 0 
7f0d4f86e000-7f0d4f87a000 r-xp 00000000 103:02 26377161                  /home/alec/.jdks/openjdk-21.0.1/lib/libnet.so
7f0d4f87a000-7f0d4f87b000 r--p 0000b000 103:02 26377161                  /home/alec/.jdks/openjdk-21.0.1/lib/libnet.so
7f0d4f87b000-7f0d4f87c000 rw-p 0000c000 103:02 26377161                  /home/alec/.jdks/openjdk-21.0.1/lib/libnet.so
7f0d4f87c000-7f0d4f88f000 r-xp 00000000 103:02 26377162                  /home/alec/.jdks/openjdk-21.0.1/lib/libnio.so
7f0d4f88f000-7f0d4f890000 ---p 00013000 103:02 26377162                  /home/alec/.jdks/openjdk-21.0.1/lib/libnio.so
7f0d4f890000-7f0d4f891000 r--p 00013000 103:02 26377162                  /home/alec/.jdks/openjdk-21.0.1/lib/libnio.so
7f0d4f891000-7f0d4f892000 rw-p 00014000 103:02 26377162                  /home/alec/.jdks/openjdk-21.0.1/lib/libnio.so
7f0d4f892000-7f0d4f8d6000 rw-p 00000000 00:00 0 
7f0d4f8d6000-7f0d4f8dd000 ---p 00000000 00:00 0 
7f0d4f8dd000-7f0d4f8e5000 rw-s 00000000 00:22 31682                      /tmp/hsperfdata_alec/107664
7f0d4f8e5000-7f0d4f905000 r-xp 00000000 103:02 26377146                  /home/alec/.jdks/openjdk-21.0.1/lib/libjava.so
7f0d4f905000-7f0d4f906000 ---p 00020000 103:02 26377146                  /home/alec/.jdks/openjdk-21.0.1/lib/libjava.so
7f0d4f906000-7f0d4f907000 r--p 00020000 103:02 26377146                  /home/alec/.jdks/openjdk-21.0.1/lib/libjava.so
7f0d4f907000-7f0d4f908000 rw-p 00021000 103:02 26377146                  /home/alec/.jdks/openjdk-21.0.1/lib/libjava.so
7f0d4f908000-7f0d4f909000 rw-p 00000000 00:00 0 
7f0d4f909000-7f0d4f919000 r--p 00000000 103:02 57023153                  /usr/lib/libm.so.6
7f0d4f919000-7f0d4f998000 r-xp 00010000 103:02 57023153                  /usr/lib/libm.so.6
7f0d4f998000-7f0d4f9f4000 r--p 0008f000 103:02 57023153                  /usr/lib/libm.so.6
7f0d4f9f4000-7f0d4f9f5000 r--p 000ea000 103:02 57023153                  /usr/lib/libm.so.6
7f0d4f9f5000-7f0d4f9f6000 rw-p 000eb000 103:02 57023153                  /usr/lib/libm.so.6
7f0d4f9f6000-7f0d4f9f7000 r--p 00000000 103:02 57023260                  /usr/lib/librt.so.1
7f0d4f9f7000-7f0d4f9f8000 r-xp 00001000 103:02 57023260                  /usr/lib/librt.so.1
7f0d4f9f8000-7f0d4f9f9000 r--p 00002000 103:02 57023260                  /usr/lib/librt.so.1
7f0d4f9f9000-7f0d4f9fa000 r--p 00002000 103:02 57023260                  /usr/lib/librt.so.1
7f0d4f9fa000-7f0d4f9fb000 rw-p 00003000 103:02 57023260                  /usr/lib/librt.so.1
7f0d4f9fb000-7f0d4f9fd000 rw-p 00000000 00:00 0 
7f0d4f9fd000-7f0d4fa23000 r--p 00000000 103:02 57023001                  /usr/lib/libc.so.6
7f0d4fa23000-7f0d4fb7d000 r-xp 00026000 103:02 57023001                  /usr/lib/libc.so.6
7f0d4fb7d000-7f0d4fbd1000 r--p 00180000 103:02 57023001                  /usr/lib/libc.so.6
7f0d4fbd1000-7f0d4fbd5000 r--p 001d3000 103:02 57023001                  /usr/lib/libc.so.6
7f0d4fbd5000-7f0d4fbd7000 rw-p 001d7000 103:02 57023001                  /usr/lib/libc.so.6
7f0d4fbd7000-7f0d4fbdf000 rw-p 00000000 00:00 0 
7f0d4fbdf000-7f0d4fbe0000 r--p 00000000 103:02 57023031                  /usr/lib/libdl.so.2
7f0d4fbe0000-7f0d4fbe1000 r-xp 00001000 103:02 57023031                  /usr/lib/libdl.so.2
7f0d4fbe1000-7f0d4fbe2000 r--p 00002000 103:02 57023031                  /usr/lib/libdl.so.2
7f0d4fbe2000-7f0d4fbe3000 r--p 00002000 103:02 57023031                  /usr/lib/libdl.so.2
7f0d4fbe3000-7f0d4fbe4000 rw-p 00003000 103:02 57023031                  /usr/lib/libdl.so.2
7f0d4fbe4000-7f0d4fbe5000 r--p 00000000 103:02 57023250                  /usr/lib/libpthread.so.0
7f0d4fbe5000-7f0d4fbe6000 r-xp 00001000 103:02 57023250                  /usr/lib/libpthread.so.0
7f0d4fbe6000-7f0d4fbe7000 r--p 00002000 103:02 57023250                  /usr/lib/libpthread.so.0
7f0d4fbe7000-7f0d4fbe8000 r--p 00002000 103:02 57023250                  /usr/lib/libpthread.so.0
7f0d4fbe8000-7f0d4fbe9000 rw-p 00003000 103:02 57023250                  /usr/lib/libpthread.so.0
7f0d4fbe9000-7f0d4fbf7000 r-xp 00000000 103:02 26377151                  /home/alec/.jdks/openjdk-21.0.1/lib/libjli.so
7f0d4fbf7000-7f0d4fbf8000 ---p 0000e000 103:02 26377151                  /home/alec/.jdks/openjdk-21.0.1/lib/libjli.so
7f0d4fbf8000-7f0d4fbf9000 r--p 0000e000 103:02 26377151                  /home/alec/.jdks/openjdk-21.0.1/lib/libjli.so
7f0d4fbf9000-7f0d4fbfa000 rw-p 0000f000 103:02 26377151                  /home/alec/.jdks/openjdk-21.0.1/lib/libjli.so
7f0d4fbfa000-7f0d4fbfd000 r--p 00000000 103:02 57036694                  /usr/lib/libz.so.1.3
7f0d4fbfd000-7f0d4fc0b000 r-xp 00003000 103:02 57036694                  /usr/lib/libz.so.1.3
7f0d4fc0b000-7f0d4fc12000 r--p 00011000 103:02 57036694                  /usr/lib/libz.so.1.3
7f0d4fc12000-7f0d4fc13000 r--p 00017000 103:02 57036694                  /usr/lib/libz.so.1.3
7f0d4fc13000-7f0d4fc14000 rw-p 00018000 103:02 57036694                  /usr/lib/libz.so.1.3
7f0d4fc15000-7f0d4fc16000 r--p 00000000 103:02 57047288                  /usr/share/locale/en_GB/LC_MESSAGES/libc.mo
7f0d4fc16000-7f0d4fc20000 r-xp 00000000 103:02 26377141                  /home/alec/.jdks/openjdk-21.0.1/lib/libinstrument.so
7f0d4fc20000-7f0d4fc21000 ---p 0000a000 103:02 26377141                  /home/alec/.jdks/openjdk-21.0.1/lib/libinstrument.so
7f0d4fc21000-7f0d4fc22000 r--p 0000a000 103:02 26377141                  /home/alec/.jdks/openjdk-21.0.1/lib/libinstrument.so
7f0d4fc22000-7f0d4fc23000 rw-p 0000b000 103:02 26377141                  /home/alec/.jdks/openjdk-21.0.1/lib/libinstrument.so
7f0d4fc23000-7f0d4fc24000 ---p 00000000 00:00 0 
7f0d4fc24000-7f0d4fc25000 r--p 00000000 00:00 0 
7f0d4fc25000-7f0d4fc26000 ---p 00000000 00:00 0 
7f0d4fc26000-7f0d4fc41000 r-xp 00000000 103:02 26377150                  /home/alec/.jdks/openjdk-21.0.1/lib/libjimage.so
7f0d4fc41000-7f0d4fc42000 ---p 0001b000 103:02 26377150                  /home/alec/.jdks/openjdk-21.0.1/lib/libjimage.so
7f0d4fc42000-7f0d4fc44000 r--p 0001b000 103:02 26377150                  /home/alec/.jdks/openjdk-21.0.1/lib/libjimage.so
7f0d4fc44000-7f0d4fc45000 rw-p 0001d000 103:02 26377150                  /home/alec/.jdks/openjdk-21.0.1/lib/libjimage.so
7f0d4fc45000-7f0d4fc47000 rw-p 00000000 00:00 0 
7f0d4fc47000-7f0d4fc48000 r--p 00000000 103:02 57022947                  /usr/lib/ld-linux-x86-64.so.2
7f0d4fc48000-7f0d4fc6e000 r-xp 00001000 103:02 57022947                  /usr/lib/ld-linux-x86-64.so.2
7f0d4fc6e000-7f0d4fc78000 r--p 00027000 103:02 57022947                  /usr/lib/ld-linux-x86-64.so.2
7f0d4fc78000-7f0d4fc7a000 r--p 00031000 103:02 57022947                  /usr/lib/ld-linux-x86-64.so.2
7f0d4fc7a000-7f0d4fc7c000 rw-p 00033000 103:02 57022947                  /usr/lib/ld-linux-x86-64.so.2
7fff3e853000-7fff3e874000 rw-p 00000000 00:00 0                          [stack]
7fff3e949000-7fff3e94d000 r--p 00000000 00:00 0                          [vvar]
7fff3e94d000-7fff3e94f000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]
Total number of mappings: 262


VM Arguments:
jvm_args: --enable-preview -Djava.library.path=/home/alec/IdeaProjects/cool-fuzz -javaagent:/home/alec/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/lib/idea_rt.jar=46619:/home/alec/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 --module-path=/home/alec/IdeaProjects/cool-fuzz/antlr-4.13.1-complete.jar:/home/alec/IdeaProjects/cool-fuzz/iced-x86-1.20.0.jar:/home/alec/IdeaProjects/cool-fuzz/out/production/ax.xz.fuzz -Djdk.module.main=ax.xz.fuzz 
java_command: ax.xz.fuzz/ax.xz.fuzz.Main
java_class_path (initial): <not set>
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 4                                         {product} {ergonomic}
     uint ConcGCThreads                            = 2                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 8                                         {product} {ergonomic}
   size_t G1HeapRegionSize                         = 4194304                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 524288000                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 8359247872                                {product} {ergonomic}
   size_t MaxNewSize                               = 5012193280                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 4194304                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5839372                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122909434                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122909434                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 8359247872                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=/home/alec/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
LD_LIBRARY_PATH=.
SHELL=/bin/zsh
DISPLAY=:0
LANG=en_GB.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Active Locale:
LC_ALL=LC_CTYPE=en_GB.UTF-8;LC_NUMERIC=en_US.UTF-8;LC_TIME=en_US.UTF-8;LC_COLLATE=en_GB.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGES=en_GB.UTF-8;LC_PAPER=en_US.UTF-8;LC_NAME=en_US.UTF-8;LC_ADDRESS=en_US.UTF-8;LC_TELEPHONE=en_US.UTF-8;LC_MEASUREMENT=en_US.UTF-8;LC_IDENTIFICATION=en_US.UTF-8
LC_COLLATE=en_GB.UTF-8
LC_CTYPE=en_GB.UTF-8
LC_MESSAGES=en_GB.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Signal Handlers:
   SIGSEGV: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGBUS: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGFPE: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGPIPE: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGXFSZ: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGILL: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGUSR2: SR_handler in libjvm.so, mask=00100000000000000000000000000000, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGHUP: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGINT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTERM: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGQUIT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTRAP: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked


Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
DISTRIB_ID="ManjaroLinux"
DISTRIB_RELEASE="23.1.0"
DISTRIB_CODENAME="Vulcan"
DISTRIB_DESCRIPTION="Manjaro Linux"
uname: Linux 6.5.9-1-MANJARO #1 SMP PREEMPT_DYNAMIC Wed Oct 25 13:14:27 UTC 2023 x86_64
OS uptime: 2 days 8:13 hours
libc: glibc 2.38 NPTL 2.38 
rlimit (soft/hard): STACK 8192k/infinity , CORE infinity/infinity , NPROC 127430/127430 , NOFILE 524288/524288 , AS infinity/infinity , CPU infinity/infinity , DATA infinity/infinity , FSIZE infinity/infinity , MEMLOCK 8192k/8192k
load average: 1.72 1.28 1.40

/proc/meminfo:
MemTotal:       32651280 kB
MemFree:         3195464 kB
MemAvailable:   20323696 kB
Buffers:          320420 kB
Cached:         17755820 kB
SwapCached:         3884 kB
Active:          9041996 kB
Inactive:       17892308 kB
Active(anon):    7837364 kB
Inactive(anon):  2435656 kB
Active(file):    1204632 kB
Inactive(file): 15456652 kB
Unevictable:      997884 kB
Mlocked:              84 kB
SwapTotal:      35916412 kB
SwapFree:       35817228 kB
Zswap:             20892 kB
Zswapped:          94804 kB
Dirty:              1104 kB
Writeback:             0 kB
AnonPages:       9628056 kB
Mapped:          2106192 kB
Shmem:           1414656 kB
KReclaimable:     938956 kB
Slab:            1189812 kB
SReclaimable:     938956 kB
SUnreclaim:       250856 kB
KernelStack:       28544 kB
PageTables:        84772 kB
SecPageTables:         0 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    52242052 kB
Committed_AS:   29523544 kB
VmallocTotal:   34359738367 kB
VmallocUsed:       80500 kB
VmallocChunk:          0 kB
Percpu:             5696 kB
HardwareCorrupted:     0 kB
AnonHugePages:   4870144 kB
ShmemHugePages:   679936 kB
ShmemPmdMapped:        0 kB
FileHugePages:    204800 kB
FilePmdMapped:    188416 kB
CmaTotal:              0 kB
CmaFree:               0 kB
Unaccepted:            0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
Hugetlb:               0 kB
DirectMap4k:      353984 kB
DirectMap2M:    18298880 kB
DirectMap1G:    14680064 kB

/sys/kernel/mm/transparent_hugepage/enabled: [always] madvise never
/sys/kernel/mm/transparent_hugepage/defrag (defrag/compaction efforts parameter): always defer defer+madvise [madvise] never

Process Memory:
Virtual Size: 11784028K (peak: 11846776K)
Resident Set Size: 856560K (peak: 856560K) (anon: 831104K, file: 25456K, shmem: 0K)
Swapped out: 0K
C-Heap outstanding allocations: 30884K, retained: 35899K
glibc malloc tunables: (default)

/proc/sys/kernel/threads-max (system-wide limit on the number of threads): 254860
/proc/sys/vm/max_map_count (maximum number of memory map areas a process may have): 65530
/proc/sys/kernel/pid_max (system-wide limit on number of process identifiers): 4194304

container (cgroup) information:
container_type: cgroupv2
cpu_cpuset_cpus: not supported
cpu_memory_nodes: not supported
active_processor_count: 8
cpu_quota: not supported
cpu_period: not supported
cpu_shares: not supported
memory_limit_in_bytes: unlimited
memory_and_swap_limit_in_bytes: unlimited
memory_soft_limit_in_bytes: unlimited
memory_usage_in_bytes: 5304348 k
memory_max_usage_in_bytes: not supported
memory_swap_current_in_bytes: unlimited
memory_swap_max_limit_in_bytes: unlimited
maximum number of tasks: 38229
current number of tasks: 222

Steal ticks since vm start: 0
Steal ticks percentage since vm start:  0.000

CPU: total 8 (initial active 8) (4 cores per cpu, 2 threads per core) family 6 model 140 stepping 1 microcode 0xac, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, avx512f, avx512dq, avx512cd, avx512bw, avx512vl, sha, fma, vzeroupper, avx512_vpopcntdq, avx512_vpclmulqdq, avx512_vaes, avx512_vnni, clflush, clflushopt, clwb, avx512_vbmi2, avx512_vbmi, rdtscp, rdpid, fsrm, gfni, avx512_bitalg, f16c, pku, ospke, cet_ibt, cet_ss, avx512_ifma
CPU Model and flags from /proc/cpuinfo:
model name	: 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l2 invpcid_single cdp_l2 ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves split_lock_detect dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp hwp_pkg_req vnmi avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq rdpid movdiri movdir64b fsrm avx512_vp2intersect md_clear ibt flush_l1d arch_capabilities

Online cpus: 0-7
Offline cpus: 
BIOS frequency limitation: <Not Available>
Frequency switch latency (ns): 0
Available cpu frequencies: <Not Available>
Current governor: powersave
Core performance/turbo boost: <Not Available>

Memory: 4k page, physical 32651280k(20323988k free), swap 35916412k(35817228k free)
Page Sizes: 4k

vm_info: OpenJDK 64-Bit Server VM (21.0.1+12-29) for linux-amd64 JRE (21.0.1+12-29), built on 2023-10-05T13:27:09Z by "mach5one" with gcc 11.2.0

END.
