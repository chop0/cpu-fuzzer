package ax.xz.xed;

import java.util.Optional;

import static ax.xz.xed.xed_14.*;

public enum XedAttribute {
	AMDONLY(XED_ATTRIBUTE_AMDONLY()),
	APX_NDD(XED_ATTRIBUTE_APX_NDD()),
	APX_NF(XED_ATTRIBUTE_APX_NF()),
	ATOMIC(XED_ATTRIBUTE_ATOMIC()),
	ATT_OPERAND_ORDER_EXCEPTION(XED_ATTRIBUTE_ATT_OPERAND_ORDER_EXCEPTION()),
	BROADCAST_ENABLED(XED_ATTRIBUTE_BROADCAST_ENABLED()),
	BYTEOP(XED_ATTRIBUTE_BYTEOP()),
	DISP8_EIGHTHMEM(XED_ATTRIBUTE_DISP8_EIGHTHMEM()),
	DISP8_FULL(XED_ATTRIBUTE_DISP8_FULL()),
	DISP8_FULLMEM(XED_ATTRIBUTE_DISP8_FULLMEM()),
	DISP8_GPR_READER(XED_ATTRIBUTE_DISP8_GPR_READER()),
	DISP8_GPR_READER_BYTE(XED_ATTRIBUTE_DISP8_GPR_READER_BYTE()),
	DISP8_GPR_READER_WORD(XED_ATTRIBUTE_DISP8_GPR_READER_WORD()),
	DISP8_GPR_WRITER_LDOP_D(XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_D()),
	DISP8_GPR_WRITER_LDOP_Q(XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_Q()),
	DISP8_GPR_WRITER_STORE(XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE()),
	DISP8_GPR_WRITER_STORE_BYTE(XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_BYTE()),
	DISP8_GPR_WRITER_STORE_WORD(XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_WORD()),
	DISP8_GSCAT(XED_ATTRIBUTE_DISP8_GSCAT()),
	DISP8_HALF(XED_ATTRIBUTE_DISP8_HALF()),
	DISP8_HALFMEM(XED_ATTRIBUTE_DISP8_HALFMEM()),
	DISP8_MEM128(XED_ATTRIBUTE_DISP8_MEM128()),
	DISP8_MOVDDUP(XED_ATTRIBUTE_DISP8_MOVDDUP()),
	DISP8_NO_SCALE(XED_ATTRIBUTE_DISP8_NO_SCALE()),
	DISP8_QUARTER(XED_ATTRIBUTE_DISP8_QUARTER()),
	DISP8_QUARTERMEM(XED_ATTRIBUTE_DISP8_QUARTERMEM()),
	DISP8_SCALAR(XED_ATTRIBUTE_DISP8_SCALAR()),
	DISP8_TUPLE1(XED_ATTRIBUTE_DISP8_TUPLE1()),
	DISP8_TUPLE1_4X(XED_ATTRIBUTE_DISP8_TUPLE1_4X()),
	DISP8_TUPLE1_BYTE(XED_ATTRIBUTE_DISP8_TUPLE1_BYTE()),
	DISP8_TUPLE1_WORD(XED_ATTRIBUTE_DISP8_TUPLE1_WORD()),
	DISP8_TUPLE2(XED_ATTRIBUTE_DISP8_TUPLE2()),
	DISP8_TUPLE4(XED_ATTRIBUTE_DISP8_TUPLE4()),
	DISP8_TUPLE8(XED_ATTRIBUTE_DISP8_TUPLE8()),
	DOUBLE_WIDE_MEMOP(XED_ATTRIBUTE_DOUBLE_WIDE_MEMOP()),
	DOUBLE_WIDE_OUTPUT(XED_ATTRIBUTE_DOUBLE_WIDE_OUTPUT()),
	DWORD_INDICES(XED_ATTRIBUTE_DWORD_INDICES()),
	ELEMENT_SIZE_D(XED_ATTRIBUTE_ELEMENT_SIZE_D()),
	ELEMENT_SIZE_Q(XED_ATTRIBUTE_ELEMENT_SIZE_Q()),
	EXCEPTION_BR(XED_ATTRIBUTE_EXCEPTION_BR()),
	FAR_XFER(XED_ATTRIBUTE_FAR_XFER()),
	FIXED_BASE0(XED_ATTRIBUTE_FIXED_BASE0()),
	FIXED_BASE1(XED_ATTRIBUTE_FIXED_BASE1()),
	FIXED_ROUNDING_RNE(XED_ATTRIBUTE_FIXED_ROUNDING_RNE()),
	FLUSH_INPUT_DENORM(XED_ATTRIBUTE_FLUSH_INPUT_DENORM()),
	FLUSH_OUTPUT_DENORM(XED_ATTRIBUTE_FLUSH_OUTPUT_DENORM()),
	GATHER(XED_ATTRIBUTE_GATHER()),
	HALF_WIDE_OUTPUT(XED_ATTRIBUTE_HALF_WIDE_OUTPUT()),
	HLE_ACQ_ABLE(XED_ATTRIBUTE_HLE_ACQ_ABLE()),
	HLE_REL_ABLE(XED_ATTRIBUTE_HLE_REL_ABLE()),
	IGNORES_OSFXSR(XED_ATTRIBUTE_IGNORES_OSFXSR()),
	IMPLICIT_ONE(XED_ATTRIBUTE_IMPLICIT_ONE()),
	INDEX_REG_IS_POINTER(XED_ATTRIBUTE_INDEX_REG_IS_POINTER()),
	INDIRECT_BRANCH(XED_ATTRIBUTE_INDIRECT_BRANCH()),
	KMASK(XED_ATTRIBUTE_KMASK()),
	LOCKABLE(XED_ATTRIBUTE_LOCKABLE()),
	LOCKED(XED_ATTRIBUTE_LOCKED()),
	MASKOP(XED_ATTRIBUTE_MASKOP()),
	MASKOP_EVEX(XED_ATTRIBUTE_MASKOP_EVEX()),
	MASK_AS_CONTROL(XED_ATTRIBUTE_MASK_AS_CONTROL()),
	MASK_VARIABLE_MEMOP(XED_ATTRIBUTE_MASK_VARIABLE_MEMOP()),
	MEMORY_FAULT_SUPPRESSION(XED_ATTRIBUTE_MEMORY_FAULT_SUPPRESSION()),
	MMX_EXCEPT(XED_ATTRIBUTE_MMX_EXCEPT()),
	MPX_PREFIX_ABLE(XED_ATTRIBUTE_MPX_PREFIX_ABLE()),
	MULTIDEST2(XED_ATTRIBUTE_MULTIDEST2()),
	MULTISOURCE4(XED_ATTRIBUTE_MULTISOURCE4()),
	MXCSR(XED_ATTRIBUTE_MXCSR()),
	MXCSR_RD(XED_ATTRIBUTE_MXCSR_RD()),
	NONTEMPORAL(XED_ATTRIBUTE_NONTEMPORAL()),
	NOP(XED_ATTRIBUTE_NOP()),
	NOTSX(XED_ATTRIBUTE_NOTSX()),
	NOTSX_COND(XED_ATTRIBUTE_NOTSX_COND()),
	NO_REG_MATCH(XED_ATTRIBUTE_NO_REG_MATCH()),
	NO_RIP_REL(XED_ATTRIBUTE_NO_RIP_REL()),
	NO_SRC_DEST_MATCH(XED_ATTRIBUTE_NO_SRC_DEST_MATCH()),
	PREFETCH(XED_ATTRIBUTE_PREFETCH()),
	PROTECTED_MODE(XED_ATTRIBUTE_PROTECTED_MODE()),
	QWORD_INDICES(XED_ATTRIBUTE_QWORD_INDICES()),
	REP(XED_ATTRIBUTE_REP()),
	REQUIRES_ALIGNMENT(XED_ATTRIBUTE_REQUIRES_ALIGNMENT()),
	REQUIRES_ALIGNMENT_4B(XED_ATTRIBUTE_REQUIRES_ALIGNMENT_4B()),
	REQUIRES_ALIGNMENT_8B(XED_ATTRIBUTE_REQUIRES_ALIGNMENT_8B()),
	RING0(XED_ATTRIBUTE_RING0()),
	SCALABLE(XED_ATTRIBUTE_SCALABLE()),
	SCATTER(XED_ATTRIBUTE_SCATTER()),
	SIMD_SCALAR(XED_ATTRIBUTE_SIMD_SCALAR()),
	SKIPLOW32(XED_ATTRIBUTE_SKIPLOW32()),
	SKIPLOW64(XED_ATTRIBUTE_SKIPLOW64()),
	SPECIAL_AGEN_REQUIRED(XED_ATTRIBUTE_SPECIAL_AGEN_REQUIRED()),
	STACKPOP0(XED_ATTRIBUTE_STACKPOP0()),
	STACKPOP1(XED_ATTRIBUTE_STACKPOP1()),
	STACKPUSH0(XED_ATTRIBUTE_STACKPUSH0()),
	STACKPUSH1(XED_ATTRIBUTE_STACKPUSH1()),
	UNDOCUMENTED(XED_ATTRIBUTE_UNDOCUMENTED()),
	USES_DAZ(XED_ATTRIBUTE_USES_DAZ()),
	USES_FTZ(XED_ATTRIBUTE_USES_FTZ()),
	X87_CONTROL(XED_ATTRIBUTE_X87_CONTROL()),
	X87_MMX_STATE_CW(XED_ATTRIBUTE_X87_MMX_STATE_CW()),
	X87_MMX_STATE_R(XED_ATTRIBUTE_X87_MMX_STATE_R()),
	X87_MMX_STATE_W(XED_ATTRIBUTE_X87_MMX_STATE_W()),
	X87_NOWAIT(XED_ATTRIBUTE_X87_NOWAIT()),
	XMM_STATE_CW(XED_ATTRIBUTE_XMM_STATE_CW()),
	XMM_STATE_R(XED_ATTRIBUTE_XMM_STATE_R()),
	XMM_STATE_W(XED_ATTRIBUTE_XMM_STATE_W());

	private final int xedEnum;

	XedAttribute(int xedEnum) {
		this.xedEnum = xedEnum;
	}

	public static Optional<XedAttribute> from(int xedEnum) {
		if (xedEnum == 0) {
			return Optional.empty();
		}

		var result = values()[xedEnum - 1];
		if (result.xedEnum != xedEnum) {
			throw new AssertionError("mismatched enum: " + xedEnum + ", " + result);
		}

		return Optional.of(result);
	}

	public int xedEnum() {
		return xedEnum;
	}
}
