package ax.xz.xed;

import java.util.Optional;

import static ax.xz.xed.xed_17.*;

public enum IformCategory {
	_3DNOW(XED_CATEGORY_3DNOW()),
	ADOX_ADCX(XED_CATEGORY_ADOX_ADCX()),
	AES(XED_CATEGORY_AES()),
	AMX_TILE(XED_CATEGORY_AMX_TILE()),
	APX(XED_CATEGORY_APX()),
	AVX(XED_CATEGORY_AVX()),
	AVX2(XED_CATEGORY_AVX2()),
	AVX2GATHER(XED_CATEGORY_AVX2GATHER()),
	AVX512(XED_CATEGORY_AVX512()),
	AVX512_4FMAPS(XED_CATEGORY_AVX512_4FMAPS()),
	AVX512_4VNNIW(XED_CATEGORY_AVX512_4VNNIW()),
	AVX512_BITALG(XED_CATEGORY_AVX512_BITALG()),
	AVX512_VBMI(XED_CATEGORY_AVX512_VBMI()),
	AVX512_VP2INTERSECT(XED_CATEGORY_AVX512_VP2INTERSECT()),
	AVX_IFMA(XED_CATEGORY_AVX_IFMA()),
	BINARY(XED_CATEGORY_BINARY()),
	BITBYTE(XED_CATEGORY_BITBYTE()),
	BLEND(XED_CATEGORY_BLEND()),
	BMI1(XED_CATEGORY_BMI1()),
	BMI2(XED_CATEGORY_BMI2()),
	BROADCAST(XED_CATEGORY_BROADCAST()),
	CALL(XED_CATEGORY_CALL()),
	CET(XED_CATEGORY_CET()),
	CLDEMOTE(XED_CATEGORY_CLDEMOTE()),
	CLFLUSHOPT(XED_CATEGORY_CLFLUSHOPT()),
	CLWB(XED_CATEGORY_CLWB()),
	CLZERO(XED_CATEGORY_CLZERO()),
	CMOV(XED_CATEGORY_CMOV()),
	COMPRESS(XED_CATEGORY_COMPRESS()),
	COND_BR(XED_CATEGORY_COND_BR()),
	CONFLICT(XED_CATEGORY_CONFLICT()),
	CONVERT(XED_CATEGORY_CONVERT()),
	DATAXFER(XED_CATEGORY_DATAXFER()),
	DECIMAL(XED_CATEGORY_DECIMAL()),
	ENQCMD(XED_CATEGORY_ENQCMD()),
	EXPAND(XED_CATEGORY_EXPAND()),
	FCMOV(XED_CATEGORY_FCMOV()),
	FLAGOP(XED_CATEGORY_FLAGOP()),
	FMA4(XED_CATEGORY_FMA4()),
	FP16(XED_CATEGORY_FP16()),
	FRED(XED_CATEGORY_FRED()),
	GATHER(XED_CATEGORY_GATHER()),
	GFNI(XED_CATEGORY_GFNI()),
	HRESET(XED_CATEGORY_HRESET()),
	IFMA(XED_CATEGORY_IFMA()),
	INTERRUPT(XED_CATEGORY_INTERRUPT()),
	IO(XED_CATEGORY_IO()),
	IOSTRINGOP(XED_CATEGORY_IOSTRINGOP()),
	KEYLOCKER(XED_CATEGORY_KEYLOCKER()),
	KEYLOCKER_WIDE(XED_CATEGORY_KEYLOCKER_WIDE()),
	KMASK(XED_CATEGORY_KMASK()),
	LEGACY(XED_CATEGORY_LEGACY()),
	LKGS(XED_CATEGORY_LKGS()),
	LOGICAL(XED_CATEGORY_LOGICAL()),
	LOGICAL_FP(XED_CATEGORY_LOGICAL_FP()),
	LZCNT(XED_CATEGORY_LZCNT()),
	MISC(XED_CATEGORY_MISC()),
	MMX(XED_CATEGORY_MMX()),
	MOVDIR(XED_CATEGORY_MOVDIR()),
	MPX(XED_CATEGORY_MPX()),
	MSRLIST(XED_CATEGORY_MSRLIST()),
	NOP(XED_CATEGORY_NOP()),
	PBNDKB(XED_CATEGORY_PBNDKB()),
	PCLMULQDQ(XED_CATEGORY_PCLMULQDQ()),
	PCONFIG(XED_CATEGORY_PCONFIG()),
	PKU(XED_CATEGORY_PKU()),
	POP(XED_CATEGORY_POP()),
	PREFETCH(XED_CATEGORY_PREFETCH()),
	PREFETCHWT1(XED_CATEGORY_PREFETCHWT1()),
	PTWRITE(XED_CATEGORY_PTWRITE()),
	PUSH(XED_CATEGORY_PUSH()),
	RDPID(XED_CATEGORY_RDPID()),
	RDPRU(XED_CATEGORY_RDPRU()),
	RDRAND(XED_CATEGORY_RDRAND()),
	RDSEED(XED_CATEGORY_RDSEED()),
	RDWRFSGS(XED_CATEGORY_RDWRFSGS()),
	RET(XED_CATEGORY_RET()),
	ROTATE(XED_CATEGORY_ROTATE()),
	SCATTER(XED_CATEGORY_SCATTER()),
	SEGOP(XED_CATEGORY_SEGOP()),
	SEMAPHORE(XED_CATEGORY_SEMAPHORE()),
	SERIALIZE(XED_CATEGORY_SERIALIZE()),
	SETCC(XED_CATEGORY_SETCC()),
	SGX(XED_CATEGORY_SGX()),
	SHA(XED_CATEGORY_SHA()),
	SHA512(XED_CATEGORY_SHA512()),
	SHIFT(XED_CATEGORY_SHIFT()),
	SMAP(XED_CATEGORY_SMAP()),
	SSE(XED_CATEGORY_SSE()),
	STRINGOP(XED_CATEGORY_STRINGOP()),
	STTNI(XED_CATEGORY_STTNI()),
	SYSCALL(XED_CATEGORY_SYSCALL()),
	SYSRET(XED_CATEGORY_SYSRET()),
	SYSTEM(XED_CATEGORY_SYSTEM()),
	TBM(XED_CATEGORY_TBM()),
	TSX_LDTRK(XED_CATEGORY_TSX_LDTRK()),
	UINTR(XED_CATEGORY_UINTR()),
	UNCOND_BR(XED_CATEGORY_UNCOND_BR()),
	USER_MSR(XED_CATEGORY_USER_MSR()),
	VAES(XED_CATEGORY_VAES()),
	VBMI2(XED_CATEGORY_VBMI2()),
	VEX(XED_CATEGORY_VEX()),
	VFMA(XED_CATEGORY_VFMA()),
	VIA_PADLOCK(XED_CATEGORY_VIA_PADLOCK()),
	VPCLMULQDQ(XED_CATEGORY_VPCLMULQDQ()),
	VTX(XED_CATEGORY_VTX()),
	WAITPKG(XED_CATEGORY_WAITPKG()),
	WIDENOP(XED_CATEGORY_WIDENOP()),
	WRMSRNS(XED_CATEGORY_WRMSRNS()),
	X87_ALU(XED_CATEGORY_X87_ALU()),
	XOP(XED_CATEGORY_XOP()),
	XSAVE(XED_CATEGORY_XSAVE()),
	XSAVEOPT(XED_CATEGORY_XSAVEOPT());

	private final int xedEnum;

	IformCategory(int xedEnum) {
		this.xedEnum = xedEnum;
	}

	public static Optional<IformCategory> from(int xedEnum) {
		if (xedEnum == 0) {
			return Optional.empty();
		}

		var result = values()[xedEnum - 1];
		if (result.xedEnum != xedEnum) {
			throw new AssertionError("mismatched enum: " + xedEnum + ", " + result);
		}

		return Optional.of(result);
	}
}
